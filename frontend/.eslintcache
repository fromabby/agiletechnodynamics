[{"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/index.js":"1","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/store.js":"2","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/App.js":"3","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/websiteReducers.js":"4","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Home.js":"6","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/inquiryReducers.js":"7","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutCompany.js":"8","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/productReducers.js":"9","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutObjectives.js":"10","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutHistory.js":"11","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutMissionVision.js":"12","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/EmailSent.js":"13","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/ConfirmationPage.js":"14","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Products.js":"15","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Services.js":"16","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutScope.js":"17","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDetails.js":"18","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Footer.js":"19","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Profile.js":"20","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdatePassword.js":"21","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Header.js":"22","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/ForgotPassword.js":"23","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdateProfile.js":"24","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Login.js":"25","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Dashboard.js":"26","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListInquiries.js":"27","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListOthers.js":"28","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Contact.js":"29","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListQuotations.js":"30","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/route/ProtectedRoute.js":"31","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Register.js":"32","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/NewPassword.js":"33","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/userActions.js":"34","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/NewProduct.js":"35","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateProduct.js":"36","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ProductsList.js":"37","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Sidebar.js":"38","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/MetaData.js":"39","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Loader.js":"40","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/productActions.js":"41","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/inquiryActions.js":"42","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/userConstants.js":"43","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/websiteConstants.js":"44","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/productConstants.js":"45","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/inquiryConstants.js":"46","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/websiteActions.js":"47","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDisplay.js":"48","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateInquiry.js":"49","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListArchives.js":"50","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListTrash.js":"51","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateHome.js":"52"},{"size":586,"mtime":1610487705946,"results":"53","hashOfConfig":"54"},{"size":1333,"mtime":1613269520549,"results":"55","hashOfConfig":"54"},{"size":4997,"mtime":1613274403304,"results":"56","hashOfConfig":"54"},{"size":1777,"mtime":1613267949244,"results":"57","hashOfConfig":"54"},{"size":4152,"mtime":1612914763228,"results":"58","hashOfConfig":"54"},{"size":5150,"mtime":1613279245976,"results":"59","hashOfConfig":"54"},{"size":3875,"mtime":1613207570585,"results":"60","hashOfConfig":"54"},{"size":2217,"mtime":1612913941417,"results":"61","hashOfConfig":"54"},{"size":4538,"mtime":1613200293488,"results":"62","hashOfConfig":"54"},{"size":2778,"mtime":1612914018545,"results":"63","hashOfConfig":"54"},{"size":2950,"mtime":1612913998279,"results":"64","hashOfConfig":"54"},{"size":2335,"mtime":1612914044433,"results":"65","hashOfConfig":"54"},{"size":1021,"mtime":1612914105529,"results":"66","hashOfConfig":"54"},{"size":1037,"mtime":1612914069458,"results":"67","hashOfConfig":"54"},{"size":4563,"mtime":1612913683348,"results":"68","hashOfConfig":"54"},{"size":4060,"mtime":1612913689791,"results":"69","hashOfConfig":"54"},{"size":2443,"mtime":1612914054810,"results":"70","hashOfConfig":"54"},{"size":2290,"mtime":1613201163076,"results":"71","hashOfConfig":"54"},{"size":4047,"mtime":1612913496772,"results":"72","hashOfConfig":"54"},{"size":1904,"mtime":1613210994015,"results":"73","hashOfConfig":"54"},{"size":3044,"mtime":1612914717260,"results":"74","hashOfConfig":"54"},{"size":4261,"mtime":1612914582108,"results":"75","hashOfConfig":"54"},{"size":2261,"mtime":1612914664967,"results":"76","hashOfConfig":"54"},{"size":4999,"mtime":1612914726011,"results":"77","hashOfConfig":"54"},{"size":2689,"mtime":1612914677566,"results":"78","hashOfConfig":"54"},{"size":2961,"mtime":1613186755200,"results":"79","hashOfConfig":"54"},{"size":4661,"mtime":1613267274201,"results":"80","hashOfConfig":"54"},{"size":4654,"mtime":1613267246998,"results":"81","hashOfConfig":"54"},{"size":7769,"mtime":1612914085262,"results":"82","hashOfConfig":"54"},{"size":4669,"mtime":1613267207016,"results":"83","hashOfConfig":"54"},{"size":921,"mtime":1612914643008,"results":"84","hashOfConfig":"54"},{"size":6442,"mtime":1613186555254,"results":"85","hashOfConfig":"54"},{"size":2828,"mtime":1612781072508,"results":"86","hashOfConfig":"54"},{"size":5312,"mtime":1612837002338,"results":"87","hashOfConfig":"54"},{"size":6524,"mtime":1613183936077,"results":"88","hashOfConfig":"54"},{"size":7756,"mtime":1613193899089,"results":"89","hashOfConfig":"54"},{"size":4114,"mtime":1613183740468,"results":"90","hashOfConfig":"54"},{"size":2995,"mtime":1613115346402,"results":"91","hashOfConfig":"54"},{"size":270,"mtime":1610903258521,"results":"92","hashOfConfig":"54"},{"size":160,"mtime":1612789451971,"results":"93","hashOfConfig":"54"},{"size":4167,"mtime":1613191221870,"results":"94","hashOfConfig":"54"},{"size":3335,"mtime":1613195621693,"results":"95","hashOfConfig":"54"},{"size":1450,"mtime":1612836873081,"results":"96","hashOfConfig":"54"},{"size":433,"mtime":1613198998834,"results":"97","hashOfConfig":"54"},{"size":1292,"mtime":1612836089673,"results":"98","hashOfConfig":"54"},{"size":1032,"mtime":1613195572681,"results":"99","hashOfConfig":"54"},{"size":1507,"mtime":1613268154728,"results":"100","hashOfConfig":"54"},{"size":490,"mtime":1612914627852,"results":"101","hashOfConfig":"54"},{"size":5444,"mtime":1613194748396,"results":"102","hashOfConfig":"54"},{"size":4571,"mtime":1613267315660,"results":"103","hashOfConfig":"54"},{"size":5151,"mtime":1613266996926,"results":"104","hashOfConfig":"54"},{"size":11674,"mtime":1613279936465,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"bpi0ip",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"108"},"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/index.js",[],["221","222"],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/store.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/App.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Home.js",["223","224","225","226","227","228","229","230","231"],"import React, { Fragment, useEffect } from 'react'\nimport '../css/styles.css'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomeDetails, clearErrors } from '../actions/websiteActions'\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, homePage } = useSelector(state => state.homeDetails)\n\n    let titleBackground, servicesBackground, productImageLeft, productImageRight = \"\"\n\n    \n    if(homePage.titleBackground){\n        titleBackground = homePage.titleBackground.url\n    } else {\n        titleBackground = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\n    }\n\n    if(homePage.servicesBackground){\n        servicesBackground = homePage.servicesBackground.url\n    } else {\n        servicesBackground = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\n    }\n\n    if(homePage.productImageLeft){\n        productImageLeft = homePage.productImageLeft.url\n    } else {\n        productImageLeft = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\n    }\n\n    if(homePage.productImageRight){\n        productImageRight = homePage.productImageRight.url\n    } else {\n        productImageRight = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\n    }\n\n    useEffect(() => {\n\n        console.log(homePage.titleBackground)\n        dispatch(getHomeDetails())\n        \n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error])\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <section className=\"section1 welcome\" style={{height: \"100%\", width: \"100%\"}}>\n                            <div\n                                className=\"welcome-container\"\n                                style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                <img className=\"agile-logo-small\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\" alt=\"company logo\"/>\n                                <h1 className=\"agile-name font-weight-bold\">AGILE TECHNODYNAMICS</h1>\n                            </div>\n                        </section>\n                        <div className=\"row\">\n                            <div className=\"col-md-auto description-container\">\n                                <div>\n                                    <h1 className=\"font-weight-bold\">Our Products</h1>\n                                    <h6 className=\"product-description\">{homePage.productDescription}&nbsp;</h6>\n                                </div>\n                                <a href=\"product.html\">See Products&nbsp;<i className=\"fa fa-angle-right\"></i></a>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\"}}></div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\"}}></div>\n                            </div>\n                        </div>\n                        <div \n                            className=\"row our-services our-services-column description-container our-services-photo\" \n                            style={{\n                                background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                backgroundSize: \"cover\", \n                                backgroundPosition: \"right\"\n                                }}\n                            >\n                            <div className=\"col\">\n                                <div className=\"div-our-services\">\n                                    <h1 className=\"our-services font-weight-bold\">Our Services</h1>\n                                    <h6 className=\"description\">{homePage.servicesDescription}&nbsp;</h6><a className=\"services-link\" href=\"services.html\">See Services&nbsp;<i className=\"fa fa-angle-right\"></i></a>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutCompany.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutObjectives.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutHistory.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutMissionVision.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Products.js",["232"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\n\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\n\n\nconst Products = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setCategory] = useState('');\n\n    const categories = [\n        'Category1',\n        'Category2',\n        'Category3',\n        'Category4',\n        'Category5',\n        'Category6',\n        'Category7'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category));\n    }, [dispatch, alert, error, currentPage, category]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        <MetaData title={'Our Products'}/>\n                        <section id=\"products\" className=\"product-section\">\n                            <div className=\"our-products\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div classNme=\"mt-5\">\n                                            <ul className=\"pl-0\">\n                                                {categories.map( category => (\n                                                    \n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\n                                                        key={category}\n                                                        onClick={() => {setCurrentPageNo(1); setCategory(category)}}>\n                                                            <a>{category}</a>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                            {resPerPage >= count && (\n                                                <a href='/our-products'>View All Products</a>\n                                            )}\n                                        </div>\n                                    </div>\n                                    {products && products.map( product => (\n                                        <ProductDisplay key={product._id} product={product}/>\n                                    ))}\n                                </div>\n                            </div>\n                        </section>\n\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )} \n                        \n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default Products;\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Services.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutScope.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDetails.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Profile.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdatePassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Header.js",["233","234","235"],"import React from 'react'\nimport { Fragment } from 'react'\nimport '../../css/styles.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\n\nconst Header = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    return (\n        <Fragment>\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top\">\n            <div className=\"container\">\n                <button data-toggle=\"collapse\" data-target=\"#navcol-1\" className=\"navbar-toggler\">\n                    <span className=\"sr-only\">Toggle navigation</span>\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n            <Link to=\"/\">\n                <img className=\"agile-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\n            </Link>\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\n                    <ul className=\"nav navbar-nav flex-grow-1 justify-content-between\">\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"#\"></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-company\"><strong>About Us</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-products\"><strong>Products</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\n                        {user ? (\n                                <div className=\"ml-4 dropdown d-inline\">\n                                <Link\n                                    className=\"btn dropdown-toggle text-black mr-4\"\n                                    type=\"button\"\n                                    id=\"dropDownMenuButton\"\n                                    data-toggle=\"dropdown\"\n                                    aria-aria-haspopup=\"true\"\n                                    aria-expanded=\"false\">\n                                        {user && user.name}\n                                    </Link>\n                                    <div className=\"dropdown-menu\" aria-aria-labelledby=\"dropDownMenuButton\">\n                                        <Link className=\"dropdown-item\" to=\"/dashboard\">\n                                            Dashboard\n                                        </Link>\n                                        <Link className=\"dropdown-item\" to=\"/me\">\n                                                My Profile\n                                            </Link>\n                                        {user && user.role !== 'admin' ? (\n                                            <Link className=\"dropdown-item\" to=\"/register\">\n                                                Register New Users\n                                            </Link>\n                                        ) : (\n                                            <Link></Link>\n                                        )}\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </div>\n                                \n                            ) : !loading && <Link to=\"/login\">\n                                <div></div>\n                            </Link>}\n                    </ul> \n                </div>\n            </div>\n        </nav>\n        </Fragment>\n    )\n}\n\nexport default Header;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/ForgotPassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdateProfile.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Login.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Dashboard.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListInquiries.js",["236"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/quotations')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Inquiry ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    id: inquiry._id,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Inquiries'}/>\n            <div className=\"row\">\n                <div className=\"col-4 col-md-2\">\n                    <Sidebar/>\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                    <h1 className='mt-5'>Inbox - Inquiry</h1>\n                    {loading? <Loader/> : (\n                        <MDBDataTable\n                            data={setInquiries()}\n                            className='px-3 ml-10'\n                            bordered\n                            striped\n                            hover\n                            entries={5}\n                        />\n                    )}\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListOthers.js",["237"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/others')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Inquiry ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    id: inquiry._id,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         }) \n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Others'}/>\n            <div className=\"row\">\n                <div className=\"col-4 col-md-2\">\n                    <Sidebar/>\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                    <h1 className='mt-5'>Inbox - Others</h1>\n                    {loading? <Loader/> : (\n                        <MDBDataTable\n                            data={setInquiries()}\n                            className='px-3 ml-10'\n                            bordered\n                            striped\n                            hover\n                            entries={5}\n                        />\n                    )}\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Contact.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListQuotations.js",["238"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/quotations')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Inquiry ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    id: inquiry._id,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Quotations'}/>\n            <div className=\"row\">\n                <div className=\"col-4 col-md-2\">\n                    <Sidebar/>\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                    <h1 className='mt-5'>Inbox - Quotations</h1>\n                    {loading? <Loader/> : (\n                        <MDBDataTable\n                            data={setInquiries()}\n                            className='px-3 ml-10'\n                            bordered\n                            striped\n                             hover\n                            entries={5}\n                        />\n                    )}\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Register.js",["239"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { register, clearErrors } from './../../actions/userActions'\n\nconst Register = ( { history } ) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        contactNumber: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { name, email, contactNumber, password, confirmPassword } = user;\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\n    const [useDefaultImage, setDefaultImage] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/')\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n        formData.set('contactNumber', contactNumber);\n        formData.set('avatar', avatar);\n        formData.set('useDefaultImage', useDefaultImage)\n\n        dispatch(register(formData));\n    }\n\n    const onChange = e => {\n        \n        if(e.target.name === 'avatar') {\n\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if(reader.readyState === 2){\n                    setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n\n        } else if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked == true) {\n                setDefaultImage(true)\n            }\n            else{\n                setDefaultImage(false)\n            }\n        }\n        else {\n            setUser({\n                ...user,\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Register'}/>\n            <div className=\"login-clean\">\n                <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'>\n                    <h2 className=\"sr-only\">Register New User</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">Register New User</h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Name</h6>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"name\"\n                            value={name}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Email</h6>\n                        <input \n                            type=\"email\" \n                            className=\"form-control\" \n                            name=\"email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Contact Number</h6>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            name=\"contactNumber\" \n                            value={contactNumber}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Password</h6>\n                        <input \n                            type=\"password\" \n                            className=\"form-control\" \n                            name=\"password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Confirm Password</h6>\n                        <input \n                            type=\"password\" \n                            className=\"form-control\" \n                            name=\"confirmPassword\"\n                            value={confirmPassword}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input \n                            type='checkbox'\n                            id='useDefaultImage'\n                            name='useDefaultImage'\n                            value={useDefaultImage}\n                            onChange={onChange}/>\n                            &nbsp;Use default image\n                        <h6>Avatar</h6>\n                        <figure className='mr-3 item-rtl'>\n                            <img \n                                src={avatarPreview}\n                                className='rounded-circle small-avatar'\n                                alt='Avatar Preview'\n                            />\n                        </figure>\n                        <input \n                            type=\"file\" \n                            id=\"avatar\" \n                            name=\"avatar\" \n                            accept=\"images/*\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            type=\"submit\"\n                            disabled={ loading ? true : false}\n                        >Register</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/NewPassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/userActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/NewProduct.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateProduct.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ProductsList.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Sidebar.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/websiteConstants.js",[],["240","241"],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDisplay.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateInquiry.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListArchives.js",["242"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst ListArchives = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Inquiry status has been updated successfully.');\n            history.push('/admin/archives')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Inquiry ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Concern Type',\n                    field: 'concernType',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Resolved'){\n                data.rows.push({\n                    id: inquiry._id,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\n                                    <i className='fa fa-undo'></i>\n                                </button>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Archives'}/>\n            <div className=\"row\">\n                <div className=\"col-4 col-md-2\">\n                    <Sidebar/>\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                    <h1 className='mt-5'>Archives</h1>\n                    {loading? <Loader/> : (\n                        <MDBDataTable\n                            data={setInquiries()}\n                            className='px-3 ml-10'\n                            bordered\n                            striped\n                            hover\n                            entries={5}\n                        />\n                    )}\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListArchives","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListTrash.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateHome.js",["243","244","245","246","247","248","249","250","251","252","253","254"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\n\nconst UpdateHome = ({history}) => {\n    \n    const [productDescription, setProductDescription] = useState('')\n    const [servicesDescription, setServicesDescription] = useState('')\n    const [titleBackground, setTitleBackground] = useState('')\n    const [servicesBackground, setServicesBackground] = useState('')\n    const [productImageLeft, setProductImageLeft] = useState('')\n    const [productImageRight, setProductImageRight] = useState('')\n    \n    //image previews\n    const [titleBgPreview, setTitleBgPreview] = useState('')\n    const [servicesBgPreview, setServicesBgPreview] = useState('')\n    const [prodImgLeftPreview, setProdImgLeftPreview] = useState('')\n    const [prodImgRightPreview, setProdImgRightPreview] = useState('')\n    \n    //old images\n    const [oldTitleBg, setOldTitleBg] = useState('')\n    const [oldServicesBg, setOldServicesBg] = useState('')\n    const [oldProdImageLeft, setOldProdImageLeft] = useState('')\n    const [oldProdImageRight, setOldProdImageRight] = useState('')\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, homePage } = useSelector(state => state.homeDetails) \n    const { loading, error: updateError, isUpdated } = useSelector(state => state.home)\n\n    let var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight = \"\"\n\n    if(homePage.titleBackground){\n        var_titleBackground = homePage.titleBackground.url\n    } else {\n        var_titleBackground = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\n    }\n\n    if(homePage.servicesBackground){\n        var_servicesBackground = homePage.servicesBackground.url\n    } else {\n        var_servicesBackground = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\n    }\n\n    if(homePage.productImageLeft){\n        var_productImageLeft = homePage.productImageLeft.url\n    } else {\n        var_productImageLeft = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\n    }\n\n    if(homePage.productImageRight){\n        var_productImageRight = homePage.productImageRight.url\n    } else {\n        var_productImageRight = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\n    }\n\n    useEffect(() => {\n\n        if(homePage){\n            setProductDescription(homePage.productDescription)\n            setServicesDescription(homePage.servicesDescription)\n            setTitleBgPreview(var_titleBackground)\n            setServicesBgPreview(var_servicesBackground)\n            setProdImgLeftPreview(var_productImageLeft)\n            setProdImgRightPreview(var_productImageRight)\n        }\n\n        if(error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if(updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated) {\n            history.push('/dashboard')\n            alert.success('Home updated successfully.');\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, updateError, isUpdated, homePage])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('productDescription', productDescription);\n        formData.set('servicesDescription', servicesDescription);\n        formData.set('titleBackground', titleBackground);\n        formData.set('servicesBackground', servicesBackground);\n        formData.set('productImageLeft', productImageLeft);\n        formData.set('productImageRight', productImageRight);\n\n        dispatch(updateHome(formData));\n    }\n\n    const changeTitleBg = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setTitleBgPreview(reader.result)\n                setTitleBackground(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n    \n    const changeProdImgLeft = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setProdImgLeftPreview(reader.result)\n                setProductImageLeft(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    const changeProdImgRight = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setProdImgRightPreview(reader.result)\n                setProductImageRight(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    const changeServicesBg = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setServicesBgPreview(reader.result)\n                setServicesBackground(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Home'}/>\n            <div className=\"\">\n                {loading ? <Loader/> : (\n                    <Fragment>\n                    <div className=\"login-clean\">\n                        <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{width: '90%'}}>\n                            <h2 className=\"sr-only\">Update Homepage</h2>\n                            <div className=\"div-forgot-password\">\n                                <h3 className=\"forgot-password-heading\">Update Homepage </h3>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Main Background</h6>\n                                <figure className='mr-3 item-rtl'>\n                                    <img \n                                        src={titleBgPreview}\n                                        className='small-avatar'\n                                        alt='Main Background Preview'\n                                    />\n                                </figure>\n                                <input \n                                    type=\"file\" \n                                    id=\"titleBackground\" \n                                    name=\"titleBackground\" \n                                    accept=\"images/*\"\n                                    onChange={changeTitleBg}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Product Description</h6>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"productDescription\" \n                                    name=\"productDescription\" \n                                    value={productDescription}\n                                    onChange={(e) => setProductDescription(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Product Image (Left)</h6>\n                                <figure className='mr-3 item-rtl'>\n                                    <img \n                                        src={prodImgLeftPreview}\n                                        className='small-avatar'\n                                        alt='Product Image Left Preview'\n                                    />\n                                </figure>\n                                <input \n                                    type=\"file\" \n                                    id=\"productImageLeft\" \n                                    name=\"productImageLeft\" \n                                    accept=\"images/*\"\n                                    onChange={changeProdImgLeft}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Product Image (Right)</h6>\n                                <figure className='mr-3 item-rtl'>\n                                    <img \n                                        src={prodImgRightPreview}\n                                        className='small-avatar'\n                                        alt='Avatar Preview'\n                                    />\n                                </figure>\n                                <input \n                                    type=\"file\" \n                                    id=\"productImageRight\" \n                                    name=\"productImageRight\" \n                                    accept=\"images/*\"\n                                    onChange={changeProdImgRight}\n                                />\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <h6>Services Description</h6>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"servicesDescription\" \n                                    name=\"servicesDescription\" \n                                    value={servicesDescription}\n                                    onChange={(e) => setServicesDescription(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Services Background</h6>\n                                <figure className='mr-3 item-rtl'>\n                                    <img \n                                        src={servicesBgPreview}\n                                        className='small-avatar'\n                                        alt='Avatar Preview'\n                                    />\n                                </figure>\n                                <input \n                                    type=\"file\" \n                                    id=\"servicesBackground\" \n                                    name=\"servicesBackground\" \n                                    accept=\"images/*\"\n                                    onChange={changeServicesBg}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <button \n                                    className=\"btn btn-primary btn-block\" \n                                    type=\"submit\"\n                                    disabled={loading ? true : false}\n                                >\n                                    Update Home\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </Fragment>\n                )}\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateHome\n",{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":53,"column":8,"nodeType":"261","endLine":53,"endColumn":32,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":63,"column":140,"nodeType":"265","messageId":"266","endLine":63,"endColumn":141},{"ruleId":"263","severity":1,"message":"264","line":63,"column":161,"nodeType":"265","messageId":"266","endLine":63,"endColumn":162},{"ruleId":"263","severity":1,"message":"264","line":81,"column":84,"nodeType":"265","messageId":"266","endLine":81,"endColumn":85},{"ruleId":"263","severity":1,"message":"264","line":81,"column":106,"nodeType":"265","messageId":"266","endLine":81,"endColumn":107},{"ruleId":"263","severity":1,"message":"264","line":84,"column":84,"nodeType":"265","messageId":"266","endLine":84,"endColumn":85},{"ruleId":"263","severity":1,"message":"264","line":84,"column":107,"nodeType":"265","messageId":"266","endLine":84,"endColumn":108},{"ruleId":"263","severity":1,"message":"264","line":90,"column":121,"nodeType":"265","messageId":"266","endLine":90,"endColumn":122},{"ruleId":"263","severity":1,"message":"264","line":90,"column":145,"nodeType":"265","messageId":"266","endLine":90,"endColumn":146},{"ruleId":"267","severity":1,"message":"268","line":69,"column":61,"nodeType":"269","endLine":69,"endColumn":64},{"ruleId":"270","severity":1,"message":"271","line":32,"column":17,"nodeType":"269","endLine":32,"endColumn":154},{"ruleId":"272","severity":1,"message":"273","line":49,"column":37,"nodeType":"274","endLine":49,"endColumn":62},{"ruleId":"272","severity":1,"message":"275","line":53,"column":68,"nodeType":"274","endLine":53,"endColumn":109},{"ruleId":"276","severity":1,"message":"277","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":46},{"ruleId":"276","severity":1,"message":"277","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":46},{"ruleId":"276","severity":1,"message":"277","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":46},{"ruleId":"280","severity":1,"message":"281","line":72,"column":31,"nodeType":"265","messageId":"282","endLine":72,"endColumn":33},{"ruleId":"255","replacedBy":"283"},{"ruleId":"257","replacedBy":"284"},{"ruleId":"276","severity":1,"message":"277","line":1,"column":39,"nodeType":"278","messageId":"279","endLine":1,"endColumn":47},{"ruleId":"276","severity":1,"message":"285","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":15},{"ruleId":"276","severity":1,"message":"286","line":7,"column":22,"nodeType":"278","messageId":"279","endLine":7,"endColumn":36},{"ruleId":"276","severity":1,"message":"287","line":26,"column":12,"nodeType":"278","messageId":"279","endLine":26,"endColumn":22},{"ruleId":"276","severity":1,"message":"288","line":26,"column":24,"nodeType":"278","messageId":"279","endLine":26,"endColumn":37},{"ruleId":"276","severity":1,"message":"289","line":27,"column":12,"nodeType":"278","messageId":"279","endLine":27,"endColumn":25},{"ruleId":"276","severity":1,"message":"290","line":27,"column":27,"nodeType":"278","messageId":"279","endLine":27,"endColumn":43},{"ruleId":"276","severity":1,"message":"291","line":28,"column":12,"nodeType":"278","messageId":"279","endLine":28,"endColumn":28},{"ruleId":"276","severity":1,"message":"292","line":28,"column":30,"nodeType":"278","messageId":"279","endLine":28,"endColumn":49},{"ruleId":"276","severity":1,"message":"293","line":29,"column":12,"nodeType":"278","messageId":"279","endLine":29,"endColumn":29},{"ruleId":"276","severity":1,"message":"294","line":29,"column":31,"nodeType":"278","messageId":"279","endLine":29,"endColumn":51},{"ruleId":"259","severity":1,"message":"295","line":93,"column":8,"nodeType":"261","endLine":93,"endColumn":75,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":204,"column":37,"nodeType":"269","endLine":208,"endColumn":39},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'homePage.titleBackground'. Either include it or remove the dependency array.","ArrayExpression",["301"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","unexpected",["299"],["300"],"'Sidebar' is defined but never used.","'getHomeDetails' is defined but never used.","'oldTitleBg' is assigned a value but never used.","'setOldTitleBg' is assigned a value but never used.","'oldServicesBg' is assigned a value but never used.","'setOldServicesBg' is assigned a value but never used.","'oldProdImageLeft' is assigned a value but never used.","'setOldProdImageLeft' is assigned a value but never used.","'oldProdImageRight' is assigned a value but never used.","'setOldProdImageRight' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'var_productImageLeft', 'var_productImageRight', 'var_servicesBackground', and 'var_titleBackground'. Either include them or remove the dependency array.",["302"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [dispatch, alert, error, homePage.titleBackground]",{"range":"307","text":"308"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",{"range":"309","text":"310"},[1771,1795],"[dispatch, alert, error, homePage.titleBackground]",[3599,3666],"[dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]"]