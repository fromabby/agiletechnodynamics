[{"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/index.js":"1","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/store.js":"2","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/App.js":"3","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/productReducers.js":"4","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Home.js":"6","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Products.js":"7","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutHistory.js":"8","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutCompany.js":"9","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutObjectives.js":"10","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutScope.js":"11","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutMissionVision.js":"12","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Login.js":"13","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Header.js":"14","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Contact.js":"15","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDetails.js":"16","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Footer.js":"17","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Services.js":"18","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Register.js":"19","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdatePassword.js":"20","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdateProfile.js":"21","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/ConfirmationPage.js":"22","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/route/ProtectedRoute.js":"23","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/userActions.js":"24","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/NewPassword.js":"25","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Profile.js":"26","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/ForgotPassword.js":"27","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/productActions.js":"28","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/MetaData.js":"29","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/productConstants.js":"30","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Loader.js":"31","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/userConstants.js":"32","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/EmailSent.js":"33","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/inquiryReducers.js":"34","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateHome.js":"35","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Dashboard.js":"36","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListInquiries.js":"37","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDisplay.js":"38","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/inquiryActions.js":"39","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Sidebar.js":"40","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/inquiryConstants.js":"41","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ProductsList.js":"42","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListOthers.js":"43","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListQuotations.js":"44"},{"size":586,"mtime":1610487705946,"results":"45","hashOfConfig":"46"},{"size":978,"mtime":1612780973720,"results":"47","hashOfConfig":"46"},{"size":3970,"mtime":1612780973107,"results":"48","hashOfConfig":"46"},{"size":2099,"mtime":1612780973677,"results":"49","hashOfConfig":"46"},{"size":4534,"mtime":1612780973718,"results":"50","hashOfConfig":"46"},{"size":4043,"mtime":1612780973161,"results":"51","hashOfConfig":"46"},{"size":4550,"mtime":1612780973163,"results":"52","hashOfConfig":"46"},{"size":2869,"mtime":1610906564669,"results":"53","hashOfConfig":"46"},{"size":2227,"mtime":1610906561668,"results":"54","hashOfConfig":"46"},{"size":2776,"mtime":1610905336459,"results":"55","hashOfConfig":"46"},{"size":2453,"mtime":1610906571957,"results":"56","hashOfConfig":"46"},{"size":2345,"mtime":1610906567091,"results":"57","hashOfConfig":"46"},{"size":2668,"mtime":1611640041244,"results":"58","hashOfConfig":"46"},{"size":4253,"mtime":1612780973169,"results":"59","hashOfConfig":"46"},{"size":7758,"mtime":1612780973151,"results":"60","hashOfConfig":"46"},{"size":2291,"mtime":1611081889872,"results":"61","hashOfConfig":"46"},{"size":4039,"mtime":1612671991733,"results":"62","hashOfConfig":"46"},{"size":4052,"mtime":1610906578503,"results":"63","hashOfConfig":"46"},{"size":5688,"mtime":1612763056121,"results":"64","hashOfConfig":"46"},{"size":3170,"mtime":1612700555531,"results":"65","hashOfConfig":"46"},{"size":4993,"mtime":1611639927506,"results":"66","hashOfConfig":"46"},{"size":1036,"mtime":1612780973115,"results":"67","hashOfConfig":"46"},{"size":920,"mtime":1612780973171,"results":"68","hashOfConfig":"46"},{"size":6038,"mtime":1612780973113,"results":"69","hashOfConfig":"46"},{"size":2828,"mtime":1612780973227,"results":"70","hashOfConfig":"46"},{"size":1889,"mtime":1611320948806,"results":"71","hashOfConfig":"46"},{"size":2386,"mtime":1612780973173,"results":"72","hashOfConfig":"46"},{"size":2043,"mtime":1612780973112,"results":"73","hashOfConfig":"46"},{"size":270,"mtime":1610903258521,"results":"74","hashOfConfig":"46"},{"size":587,"mtime":1612780973486,"results":"75","hashOfConfig":"46"},{"size":160,"mtime":1610486856658,"results":"76","hashOfConfig":"46"},{"size":1669,"mtime":1612780973671,"results":"77","hashOfConfig":"46"},{"size":1034,"mtime":1612780973160,"results":"78","hashOfConfig":"46"},{"size":1636,"mtime":1612780973673,"results":"79","hashOfConfig":"46"},{"size":3831,"mtime":1612780973167,"results":"80","hashOfConfig":"46"},{"size":2494,"mtime":1612780973163,"results":"81","hashOfConfig":"46"},{"size":3309,"mtime":1612780973164,"results":"82","hashOfConfig":"46"},{"size":472,"mtime":1612780975030,"results":"83","hashOfConfig":"46"},{"size":2322,"mtime":1612780973110,"results":"84","hashOfConfig":"46"},{"size":2453,"mtime":1612780973166,"results":"85","hashOfConfig":"46"},{"size":356,"mtime":1612780973229,"results":"86","hashOfConfig":"46"},{"size":3174,"mtime":1612780973166,"results":"87","hashOfConfig":"46"},{"size":3302,"mtime":1612780973164,"results":"88","hashOfConfig":"46"},{"size":3323,"mtime":1612780973165,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"bpi0ip",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"92"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"92"},"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/index.js",[],["204","205"],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/store.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/App.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/userReducers.js",["206","207","208","209","210"],"import { STATES } from 'mongoose'\nimport { defaultMaxListeners } from 'nodemailer/lib/mailer'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    INQUIRY_REQUEST,\n    INQUIRY_SUCCESS,\n    INQUIRY_FAIL,\n    UPDATE_HOME_REQUEST,\n    UPDATE_HOME_SUCCESS,\n    UPDATE_HOME_FAIL,\n    UPDATE_HOME_RESET,\n    CLEAR_ERRORS\n} from './../constants/userConstants'\n\nexport const authReducer = ( state = { user: {} }, action) => {\n    switch(action.type){\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true, \n                isAuthenticated: false\n            }\n\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n        \n        case CLEAR_ERRORS:\n            return { \n                ...state,\n                error: null\n            }\n        \n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state = {}, action) => {\n    switch(action.type){\n\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_HOME_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_HOME_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_HOME_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n            \n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_HOME_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        \n        case CLEAR_ERRORS:\n            return { \n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const forgotPasswordReducer = (state = {}, action) => {\n    switch(action.type){\n\n        case FORGOT_PASSWORD_REQUEST:\n        case NEW_PASSWORD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n\n        case FORGOT_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                message: action.payload\n            }\n\n        case NEW_PASSWORD_SUCCESS:\n            return {   \n                ...state,\n                success: action.payload\n            }\n\n        case FORGOT_PASSWORD_FAIL:\n        case NEW_PASSWORD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        \n        case CLEAR_ERRORS:\n            return { \n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Home.js",["211","212","213"],"import React, { Fragment, useEffect } from 'react'\nimport '../styles.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getProducts());\n    }, [dispatch]);\n\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                <section className=\"section1 welcome\" style={{height: \"100%\", width: \"100%\"}}>\n                <div\n                    className=\"welcome-container\"\n                    style={{\n                        background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url('https://res.cloudinary.com/agiletech3itf/image/upload/v1610472389/welcome-bg_agacxj.png') center / auto no-repeat\", \n                        backgroundSize: \"cover\", \n                        width: \"100%\", \n                        height: \"100%\"}\n                    }>\n                    <img className=\"agile-logo-small\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\"/>\n                    <h1 className=\"agile-name font-weight-bold\">AGILE TECHNODYNAMICS</h1>\n                </div>\n            </section>\n            <div className=\"row\">\n                <div className=\"col-md-auto description-container\">\n                    <div>\n                        <h1 className=\"font-weight-bold\">Our Products</h1>\n                        <h6 className=\"product-description\">Suspendisse blandit ornare pellentesque. Sed quis magna nibh. Sed a sem eros. Sed scelerisque felis condimentum, iaculis purus sed, lobortis mi. Donec leo dui, rhoncus nec enim eu, vulputate sodales ante. Maecenas convallis iaculis arcu sed bibendum. Vestibulum tincidunt dui velit, eget interdum massa scelerisque nec. Suspendisse commodo fringilla rutrum.&nbsp;</h6>\n                    </div>\n                    <h6></h6><a href=\"product.html\">See Products&nbsp;<i className=\"fa fa-angle-right\"></i></a>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"product\" style={{background: \"url('https://res.cloudinary.com/agiletech3itf/image/upload/v1609921524/samples/products/12v-hybrid-gel-front-access-battery_d7maov.png') center / auto no-repeat\"}}></div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"product\" style={{background: \"url('https://res.cloudinary.com/agiletech3itf/image/upload/v1609921523/samples/products/2v-agm-battery_qtplaq.png') center / auto no-repeat\"}}></div>\n                </div>\n            </div>\n            <div \n                className=\"row our-services our-services-column description-container our-services-photo\" \n                style={{\n                    background: 'linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/service-bg_lbwajk.jpg\") no-repeat', \n                    backgroundSize: \"cover\", \n                    backgroundPosition: \"right\"\n                    }}\n                >\n                <div className=\"col\">\n                    <div className=\"div-our-services\">\n                        <h1 className=\"our-services font-weight-bold\">Our Services</h1>\n                        <h6 className=\"description\">Suspendisse blandit ornare pellentesque. Sed quis magna nibh. Sed a sem eros. Sed scelerisque felis condimentum, iaculis purus sed, lobortis mi. Donec leo dui, rhoncus nec enim eu, vulputate sodales ante. Maecenas convallis iaculis arcu sed bibendum. Vestibulum tincidunt dui velit, eget interdum massa scelerisque nec. Suspendisse commodo fringilla rutrum.&nbsp;</h6><a className=\"services-link\" href=\"services.html\">See Services&nbsp;<i className=\"fa fa-angle-right\"></i></a>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Home;\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Products.js",["214"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../products.css'\nimport '../bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\n\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\n\n\nconst Products = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setCategory] = useState('');\n\n    const categories = [\n        'Category1',\n        'Category2',\n        'Category3',\n        'Category4',\n        'Category5',\n        'Category6',\n        'Category7'\n    ]\n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category));\n    }, [dispatch, alert, error, currentPage, category]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        <MetaData title={'Our Products'}/>\n                        <section id=\"products\" className=\"product-section\">\n                            <div className=\"our-products\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div classNme=\"mt-5\">\n                                            <ul className=\"pl-0\">\n                                                {categories.map( category => (\n                                                    \n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\n                                                        key={category}\n                                                        onClick={() => {setCurrentPageNo(1); setCategory(category)}}>\n                                                            <a>{category}</a>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                            {resPerPage >= count && (\n                                                <a href='/our-products'>View All Products</a>\n                                            )}\n                                        </div>\n                                    </div>\n                                    {products && products.map( product => (\n                                        <ProductDisplay key={product._id} product={product}/>\n                                    ))}\n                                </div>\n                            </div>\n                        </section>\n\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )} \n                        \n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default Products;\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutHistory.js",["215","216"],"import React, { Fragment, useEffect } from 'react'\nimport '../about.css'\nimport '../products.css'\nimport '../bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\n\nconst AboutHistory = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getProducts());\n    }, [dispatch]);\n\n    return (\n            <Fragment>\n                <MetaData title={'The History'}/>\n                <div className=\"product-section\">\n                <div className=\"container\">\n                    <div className=\"row about-us\">\n                        <div className=\"col-md-4 about-us-menu\">\n                            <h5>About Us</h5>\n                            <ul className=\"sidebar-menu\">\n                                    <li><a href=\"/about-company\">The Company</a></li>\n                                    <li><a href=\"/about-objectives\">Objectives</a></li>\n                                    <li><a href=\"/about-scope-of-activities\">Scope of Activities</a></li>\n                                    <li><a href=\"/about-mission-vision\">Mission and Vision</a></li>\n                                    <li><a href=\"/about-history\">History</a></li>\n                                </ul>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <h1>Our History</h1>\n                            <hr />\n                            <p className=\"text-justify\">AGILE TECHNODYNAMICS, INC. came into being as the only direction for professional improvement of the main proponents to face higher and stiffer challenges with their long years of service as Managers, Engineers and Technicians of prestigious companies serving the Water, Power and Industrial Sectors of the Philippine Industry.<br /><br />Incorporated in October 1997, the venture was anchored on the supply and contracting services for the same and lucrative sectors of the industry wherein the established experience and capability of the proponents have been recognized and appreciated for quality and integrity by our loyal clientele.<br /><br />Through the years, we have added Product Lines and expanded our contracting abilities as we establish a new clientele base. <br /><br />Likewise, our relatioinships with out international partners have become more closely-knitted resulting in higher customer satisfaction.<br /><br />Thus, the footprint legacy of AGILE TECHNODYNAMICS, INC. has been preserved to date and onwards.<br /></p><img className=\"about-us-image\" src=\"#\" alt=\"image of company building and logo\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </Fragment>\n    )\n}\n\nexport default AboutHistory;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutCompany.js",["217","218"],"import React, { Fragment, useEffect } from 'react'\nimport '../about.css'\nimport '../products.css'\nimport '../bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\n\nconst AboutCompany = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getProducts());\n    }, [dispatch]);\n\n    return (\n            <Fragment>\n                <MetaData title={'The Company'}/>\n                <div className=\"product-section\">\n                <div className=\"container\">\n                    <div className=\"row about-us\">\n                        <div className=\"col-md-4 about-us-menu\">\n                            <h5>About Us</h5>\n                            <ul className=\"sidebar-menu\">\n                                    <li><a href=\"/about-company\">The Company</a></li>\n                                    <li><a href=\"/about-objectives\">Objectives</a></li>\n                                    <li><a href=\"/about-scope-of-activities\">Scope of Activities</a></li>\n                                    <li><a href=\"/about-mission-vision\">Mission and Vision</a></li>\n                                    <li><a href=\"/about-history\">History</a></li>\n                                </ul>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <h1>Our Company</h1>\n                            <hr />\n                            <p className=\"text-justify\">AGILE TECHNODYNAMICS, INC. is a duly registered company with the Securities and Exchange Commission (SEC). The company was organized from the Engineering background of its main incorporator with the aim of consolidating its resources under one roof and to gain expertise for its Construction and Services whose ultimate goal is supreme clientele satisfaction.<br /></p>\n                            <img className=\"about-us-image\" src=\"#\" alt=\"image of company building and logo\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </Fragment>\n    )\n}\n\nexport default AboutCompany;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutObjectives.js",["219","220"],"import React, { Fragment, useEffect } from 'react'\nimport '../about.css'\nimport '../products.css'\nimport '../bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\n\nconst AboutObjectives = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getProducts());\n    }, [dispatch]);\n\n    return (\n            <Fragment>\n                <MetaData title={'The Objectives'}/>\n                <div className=\"product-section\">\n                    <div className=\"container\">\n                        <div className=\"row about-us\">\n                            <div className=\"col-md-4 about-us-menu\">\n                                <h5>About Us</h5>\n                                <ul className=\"sidebar-menu\">\n                                    <li><a href=\"/about-company\">The Company</a></li>\n                                    <li><a href=\"/about-objectives\">Objectives</a></li>\n                                    <li><a href=\"/about-scope-of-activities\">Scope of Activities</a></li>\n                                    <li><a href=\"/about-mission-vision\">Mission and Vision</a></li>\n                                    <li><a href=\"/about-history\">History</a></li>\n                                </ul>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <h1>The Objectives</h1>\n                                <hr />\n                                <p className=\"text-justify\">&bull; Bring into the consciousness of every clientele the availability of ISO Standard Quality Products from around the world, in their doorsteps.</p>\n                                <p className=\"text-justify\">&bull; Provide Construction and Services at competitive price levels without detriment to quality and efficiency.</p>\n                                <p className=\"text-justify\">&bull; Enter into contracts for Commercial, Engineering, and Industrial Projects - Civil, Electrical in scope - adopting the latest technology available and tapping local technical expertise and environmental impact for the welfare of Filipino people.</p>\n                                <p className=\"text-justify\">&bull; To fully support all government initiative and economic activities in the attainment of the National Goal for Philippines 2008 and onwards.</p>\n                <br /><img className=\"about-us-image\" src=\"#\" alt=\"image of company building and logo\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n    )\n}\n\nexport default AboutObjectives;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutScope.js",["221","222"],"import React, { Fragment, useEffect } from 'react'\nimport '../about.css'\nimport '../products.css'\nimport '../bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\n\nconst AboutScope = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getProducts());\n    }, [dispatch]);\n\n    return (\n            <Fragment>\n                <MetaData title={'Scope of Activities'}/>\n                <div class=\"product-section\">\n                    <div class=\"container\">\n                        <div class=\"row about-us\">\n                            <div class=\"col-md-4 about-us-menu\">\n                                <h5>About Us</h5>\n                                <ul className=\"sidebar-menu\">\n                                    <li><a href=\"/about-company\">The Company</a></li>\n                                    <li><a href=\"/about-objectives\">Objectives</a></li>\n                                    <li><a href=\"/about-scope-of-activities\">Scope of Activities</a></li>\n                                    <li><a href=\"/about-mission-vision\">Mission and Vision</a></li>\n                                    <li><a href=\"/about-history\">History</a></li>\n                                </ul>\n                            </div>\n                            <div class=\"col-md-8\">\n                                <h1>Scope of Activities</h1>\n                                <hr />\n                                <p class=\"text-justify\">AGILE TECHNODYNAMICS, INC.'s general thrust is to engage in Trading and Contracting primarily within its established line of expertise and professional background of its manpower base then enter into related fields as it improves and expands its capabilities.</p>\n                                <p class=\"text-justify\">AGILE TECHNODYNAMICS, INC. is composed of engineers, architects, technicians, and workers highly qualified and experienced in their fields of endeavors; always ready to face the challenge and undertake activities mandated by the company.</p>\n                <br /><img class=\"about-us-image\" src=\"#\" alt=\"image of company building and logo\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n    )\n}\n\nexport default AboutScope;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutMissionVision.js",["223","224"],"import React, { Fragment, useEffect } from 'react'\nimport '../about.css'\nimport '../products.css'\nimport '../bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\n\nconst AboutMissionVision = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getProducts());\n    }, [dispatch]);\n\n    return (\n            <Fragment>\n                <MetaData title={'Mission and Vision'}/>\n                <div className=\"product-section\">\n                    <div className=\"container\">\n                        <div className=\"row about-us\">\n                            <div className=\"col-xs-12 col-md-4 about-us-menu\">\n                                <h5>About Us</h5>\n                                <ul className=\"sidebar-menu\">\n                                    <li><a href=\"/about-company\">The Company</a></li>\n                                    <li><a href=\"/about-objectives\">Objectives</a></li>\n                                    <li><a href=\"/about-scope-of-activities\">Scope of Activities</a></li>\n                                    <li><a href=\"/about-mission-vision\">Mission and Vision</a></li>\n                                    <li><a href=\"/about-history\">History</a></li>\n                                </ul>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <h1>Our Mission</h1>\n                                <hr />\n                                <p className=\"text-justify\">To be aligned with the best Product Suppliers and Engineering Services providers in the country.<br /><br /><br /></p>\n                                \n                                <h1>Our Vision</h1>\n                                <hr />\n                                <p className=\"text-justify\">To supply products and provide Services with the seal and mark of Quality and Performance<br /></p>\n                            <img className=\"about-us-image\" src=\"#\" alt=\"image of company building and logo\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n    )\n}\n\nexport default AboutMissionVision;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Login.js",["225"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { login, clearErrors } from './../../actions/userActions'\nimport './../../forms.css'\n\nconst Login = ( { history }) => {\n\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        if(isAuthenticated) {\n            history.push('/')\n        }\n\n        if(error){\n\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader/> : (\n                <Fragment>\n                    <MetaData title={'Login'}/>\n                    <div className=\"login-clean\">\n                        <form onSubmit={submitHandler}>\n                            <h2 className=\"sr-only\">Login Form</h2>\n                            <div className=\"illustration\">\n                                <img className=\"login-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\">Log In</button>\n                            </div>\n                            <Link className=\"forgot\" to=\"/password/forgot\">Forgot your password?</Link>\n                            <Link className=\"forgot\" to=\"/register\">Register</Link>\n                        </form>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Header.js",["226","227","228"],"import React from 'react'\nimport { Fragment } from 'react'\nimport '../../styles.css'\nimport '../../bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\n\nconst Header = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    return (\n        <Fragment>\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top\">\n            <div className=\"container\">\n                <button data-toggle=\"collapse\" data-target=\"#navcol-1\" className=\"navbar-toggler\">\n                    <span className=\"sr-only\">Toggle navigation</span>\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n            <Link to=\"/\">\n                <img className=\"agile-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\n            </Link>\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\n                    <ul className=\"nav navbar-nav flex-grow-1 justify-content-between\">\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"#\"></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-company\"><strong>About Us</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-products\"><strong>Products</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\n                        {user ? (\n                                <div className=\"ml-4 dropdown d-inline\">\n                                <Link\n                                    className=\"btn dropdown-toggle text-black mr-4\"\n                                    type=\"button\"\n                                    id=\"dropDownMenuButton\"\n                                    data-toggle=\"dropdown\"\n                                    aria-aria-haspopup=\"true\"\n                                    aria-expanded=\"false\">\n                                        {user && user.name}\n                                    </Link>\n                                    <div className=\"dropdown-menu\" aria-aria-labelledby=\"dropDownMenuButton\">\n                                        <Link className=\"dropdown-item\" to=\"/dashboard\">\n                                            Dashboard\n                                        </Link>\n                                        <Link className=\"dropdown-item\" to=\"/me\">\n                                                My Profile\n                                            </Link>\n                                        {user && user.role !== 'admin' ? (\n                                            <Link className=\"dropdown-item\" to=\"/register\">\n                                                Register New Users\n                                            </Link>\n                                        ) : (\n                                            <Link></Link>\n                                        )}\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </div>\n                                \n                            ) : !loading && <Link to=\"/login\">\n                                <div></div>\n                            </Link>}\n                    </ul> \n                </div>\n            </div>\n        </nav>\n        </Fragment>\n    )\n}\n\nexport default Header;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Contact.js",["229"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from './layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { createInquiry, clearErrors } from './../actions/inquiryActions'\n\nimport '../contact.css'\n\nconst Contact = ( { history } ) => {\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [customerEmail, setCustomerEmail] = useState('');\n    const [companyName, setCompanyName] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [position, setPosition] = useState('');\n    const [concernType, setConcernType] = useState('');\n    const [customerMessage, setCustomerMessage] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { success, error, loading } = useSelector(state => state.newInquiry);\n\n    useEffect(() => {\n        if(success){\n            history.push('/confirmation')\n        }\n        else\n        {\n            alert.error('Please complete the form');\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, success, error, loading, history])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('firstName', firstName);\n        formData.set('lastName', lastName);\n        formData.set('customerEmail', customerEmail);\n        formData.set('companyName', companyName);\n        formData.set('position', position);\n        formData.set('contactNumber', contactNumber);\n        formData.set('concernType', concernType);\n        formData.set('customerMessage', customerMessage);\n        dispatch(createInquiry(formData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Contact Us'}/>\n            <Fragment>\n                <form method='post' onSubmit={submitHandler} encType='application/json'>\n                    <div className=\"contact-container\">\n                        <div className=\"contact-header\">\n                            <h1 style={{textAlign: 'center'}}>Contact Us</h1>\n                        </div>\n                        <div className=\"labelname\">\n                            <label>Your Name</label>\n                        </div>\n                        <div className=\"firstname\">\n                            <input \n                                name=\"firstname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"First Name\" \n                                value={firstName}\n                                onChange={(e) => setFirstName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"lastname\">\n                            <input \n                                name=\"lastname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Last Name\" \n                                value={lastName}\n                                onChange={(e) => setLastName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelcompany\">\n                            <label>Your Company Name</label>\n                        </div>\n                        <div className=\"companyname\">\n                            <input \n                                name=\"companyname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Company Name\" \n                                value={companyName}\n                                onChange={(e) => setCompanyName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelposition\">\n                            <label>Your Position in Company</label>\n                        </div>\n                        <div className=\"position\">\n                            <input \n                                name=\"position\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Position\" \n                                value={position}\n                                onChange={(e) => setPosition(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelemail\">\n                            <label>Your Email</label>\n                        </div>\n                        <div className=\"email\">\n                            <input \n                                name=\"email\" \n                                type=\"email\" \n                                className=\"feedback-input\" \n                                placeholder=\"Email\" \n                                value={customerEmail}\n                                onChange={(e) => setCustomerEmail(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelcontact\">\n                            <label>Your Contact Number</label>\n                        </div>\n                        <div className=\"contact\">\n                            <input \n                                name=\"contactnumber\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Contact Number\" \n                                value={contactNumber}\n                                onChange={(e) => setContactNumber(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelconcern\">\n                            <label>Your Concern Type</label>\n                        </div>\n                        <div className=\"concern\">\n                            <select \n                                name=\"concern\" \n                                className=\"concern-dropdown\" \n                                value={concernType}\n                                onChange={(e) => setConcernType(e.target.value)}\n                            >\n                                <option>         -        </option>\n                                <option value=\"Inquiry\">Inquiry</option>\n                                <option value=\"Appointment\">Appointment</option>\n                                <option value=\"Others\">Others</option>\n                            </select>\n                        </div>\n                        <div className=\"labelmessage\">\n                            <label>Your Message</label>\n                        </div>\n                        <div className=\"message\">\n                            <textarea \n                                name=\"message\" \n                                className=\"feedback-input\" \n                                placeholder=\"Message\" \n                                value={customerMessage}\n                                onChange={(e) => setCustomerMessage(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"submit\">\n                            <input \n                                type=\"submit\" \n                                value=\"SUBMIT\" \n                                disabled={ loading ? true : false}\n                            />\n                        </div>\n                    </div>\n                </form>\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Contact","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDetails.js",["230"],"import React, { Fragment, useEffect} from 'react'\nimport '../../individual-product.css'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { getProductDetails, clearErrors } from '../../actions/productActions'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport MetaData from '../layout/MetaData'\nimport {Carousel} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst ProductDetails = ( { match }) => {\n\n    const dispatch = useDispatch();\n    const { loading, error, product } = useSelector(state => state.productDetails)\n    const alert = useAlert();\n\n    useEffect(() => {\n\n        dispatch(getProductDetails(match.params.id));\n\n        if(error){\n\n            alert.error(error)\n            dispatch(clearErrors())\n\n        }\n\n    }, [dispatch, alert, error, match.params.id])\n\n    return (\n        <Fragment>\n            {loading ? <Loader/> : (\n                <Fragment>\n                    <MetaData title={product.name}/>\n                    <section className=\"individual-product-section\">\n                        <div className=\"row individual-products\">\n                            <div className=\"col-sm-5 col-md-5 col-lg-5 offset-lg-0\">\n                                <Carousel pause='hover'>\n                                    {product.images && product.images.map( image => (\n                                        <Carousel.Item key={image.public_id}>\n                                            <img className=\"product-image\" src={image.url} alt={`image of ${product.name}`}/>\n                                        </Carousel.Item>\n                                    ))}\n                                </Carousel>\n                            </div>\n                            <div className=\"col-sm-7 col-md-7 col-lg-7 offset-lg-0\">\n                                <h3 className=\"individual-product-name\">{product.name}</h3>\n                                <Link className=\"link-back\" to=\"/our-products\">Back to Products <i className=\"fa fa-angle-right\"></i>&nbsp;\n                                </Link>\n                            </div>\n                        </div>\n                    </section>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProductDetails\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Services.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Register.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdatePassword.js",["231"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updatePassword, clearErrors } from './../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\n\nconst UpdatePassword = ( { history }) => {\n    \n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user);\n    \n    useEffect(() => {\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n\n        if(isUpdated){\n            alert.success('Password updated successfully');\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('newPassword', newPassword);\n\n        dispatch(updatePassword(formData));\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'}/>\n            <div className=\"login-clean\">\n                <form method=\"post\" onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">New Password</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">New Password</h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Old Password</h6>\n                        <input \n                            type=\"password\" \n                            className=\"form-control\" \n                            name=\"oldPassword\"\n                            value={oldPassword}\n                            onChange={(e) => setOldPassword(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>New Password</h6>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"newPassword\"\n                            value={newPassword}\n                            onChange={(e) => setNewPassword(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            type=\"submit\"\n                            disabled={ loading ? true : false}\n                        >Update Password</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdateProfile.js",["232"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateProfile, loadUser, clearErrors } from './../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user);\n    \n    useEffect(() => {\n        if(user) {\n            setName(user.name);\n            setEmail(user.email);\n            setContactNumber(user.contactNumber);\n            setAvatarPreview(user.avatar.url);\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n\n        if(isUpdated){\n            alert.success('User updated successfully');\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('contactNumber', contactNumber);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData));\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'}/>\n            <div className=\"login-clean\">\n                <form method=\"post\" onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">Update Profile</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">Update Profile</h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Name</h6>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            name=\"name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Email</h6>\n                        <input \n                            type=\"email\" \n                            className=\"form-control\" \n                            name=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Contact Number</h6>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            name=\"contactNumber\"\n                            value={contactNumber}\n                            onChange={(e) => setContactNumber(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Avatar</h6>\n                        <figure className='mr-3 item-rtl'>\n                            <img \n                                src={avatarPreview}\n                                className='rounded-circle small-avatar'\n                                alt='Avatar Preview'\n                            />\n                        </figure>\n                        <input \n                            type=\"file\" \n                            id=\"avatar\" \n                            name=\"avatar\" \n                            accept=\"images/*\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            type=\"submit\"\n                            disabled={ loading ? true : false}\n                        >Update Profile</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/ConfirmationPage.js",["233"],"import React, { Fragment, useEffect } from 'react'\nimport '../confirmationpage.css'\nimport '../contact.css'\nimport '../bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\n\nimport MetaData from './layout/MetaData'\n\nconst ConfirmationPage = () => {\n    return (\n        <Fragment>\n            <MetaData title={'Form Sent!'}/>\n            <Fragment>\n                <section className=\"contact-form-section\">\n                    <h1>\n                        <i className=\"fa fa-check-circle confirm-icon\"></i>\n                    </h1>\n                    <h1>Form Sent!</h1>\n                    <h6 className=\"congratulations-text\">\n                        Congratulations! Your inquiry has been sent. A copy of your was sent to your e-mail. We will get back to you soon!<br/>\n                    </h6>\n                    <a className=\"back-to-home\" href=\"/\">Back to Home&nbsp;<i className=\"fa fa-angle-right\"></i></a>\n                </section>\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default ConfirmationPage\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/route/ProtectedRoute.js",["234"],"import React, { Fragment } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth);\n\n    return (\n        <Fragment>\n            {loading === false && (\n                <Route \n                    {...rest}\n                    render={props => {\n                        if(isAuthenticated === false) {\n                            return <Redirect to='/login' />\n                        }\n\n                        if(isAdmin == true && user.role !== 'admin') {\n                            return <Redirect to='/' />\n                        }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProtectedRoute\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/userActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/NewPassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Profile.js",["235"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport MetaData from './../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../profile.css'\n\nconst Profile = () => {\n    \n    const { user, loading } = useSelector(state => state.auth)\n    \n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'My Profile'} />\n                    <section className=\"profile-section\">\n                        <h1>My Profile</h1>\n                        <div className=\"profile-container\">\n                            <div className=\"image-container small-width\">\n                                <img className=\"profile-picture\" src={user.avatar.url}/>\n                            </div>\n                            <div className=\"info-container small-width\">\n                                <h3>Full name</h3>\n                                <h5>{user.name}</h5>\n                                <h3>Role</h3>\n                                <h5>{user.role}</h5>\n                                <h3>Email Address</h3>\n                                <h5>{user.email}</h5>\n                                <h3>Contact No.</h3>\n                                <h5>{user.contactNumber}</h5>\n                            </div>\n                            <div className=\"button-container small-width\">\n                                <Link className=\"btn btn-primary\" type=\"button\" to=\"/me/edit-profile\">Edit Profile</Link>\n                                <Link className=\"btn btn-primary\" type=\"button\" to=\"/password/update\">Change Password</Link>\n                            </div>\n                        </div>\n                    </section>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/ForgotPassword.js",["236"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { forgotPassword, clearErrors } from './../../actions/userActions'\n\nconst ForgotPassword = ( { history } ) => {\n\n    const [email, setEmail] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword);\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n\n        if(message){\n            //alert.success(message);\n            history.push('/email-sent')\n        }\n\n    }, [dispatch, alert, error, message, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData));\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'}/>\n            <div className=\"login-clean\">\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">Forgot Password</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">Forgot password</h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Enter email</h6>\n                        <input \n                            className=\"form-control\" \n                            type=\"email\" \n                            name=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            type=\"submit\"\n                            disabled={ loading ? true : false}\n                        >Send Email</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/EmailSent.js",["237"],"import React, { Fragment, useEffect } from 'react'\nimport '../confirmationpage.css'\nimport '../contact.css'\nimport '../bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\n\nimport MetaData from './layout/MetaData'\n\nconst ConfirmationPage = () => {\n    return (\n        <Fragment>\n            <MetaData title={'Email Sent!'}/>\n            <Fragment>\n                <section className=\"contact-form-section\">\n                    <h1>\n                        <i className=\"fa fa-check-circle confirm-icon\"></i>\n                    </h1>\n                    <h1>Email Sent!</h1>\n                    <h6 className=\"congratulations-text\">\n                        Check your email for the link to reset your password. If you can't find it, you might have to check your spam.<br/>\n                    </h6>\n                    <a className=\"back-to-home\" href=\"/\">Back to Home&nbsp;<i className=\"fa fa-angle-right\"></i></a>\n                </section>\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default ConfirmationPage\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateHome.js",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateHome = ( { history } ) => {\n\n    const [titleBackground, setTitleBackground] = useState('');\n    const [productDescription, setProductDescription] = useState('');\n    const [productImage1, setProductImage1] = useState('');\n    const [productImage2, setProductImage2] = useState('');\n    const [servicesDescription, setServicesDescription] = useState('');\n    const [servicesBackground, setServicesBackground] = useState('');\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user);\n    \n    useEffect(() => {\n        console.log(user)\n        if(user) {\n            \n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n\n        if(isUpdated){\n            alert.success('User updated successfully');\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n\n        dispatch(updateProfile(formData));\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Home'}/>\n            <Fragment>\n                <div class=\"login-clean\">\n                    <form method=\"post\">\n                        <h2 class=\"sr-only\">Update Homepage</h2>\n                        <div class=\"div-forgot-password\">\n                            <h3 class=\"forgot-password-heading\">Update Homepage </h3>\n                        </div>\n                        <div class=\"form-group\">\n                            <h6>Main Background</h6><input type=\"file\" id=\"user_avatar\" name=\"user_avatar\" accept=\"image/*\"/>\n                        </div>\n                        <div class=\"form-group\">\n                            <h6>Product Description</h6><input type=\"text\" class=\"form-control\" name=\"user_fullname\" placeholder />\n                        </div>\n                        <div class=\"form-group\">\n                            <h6>Product Image (Left)</h6><input type=\"file\" id=\"user_avatar\" name=\"user_avatar\" accept=\"image/*\"/>\n                        </div>\n                        <div class=\"form-group\">\n                            <h6>Product Image (Right)</h6><input type=\"file\" id=\"user_avatar\" name=\"user_avatar\" accept=\"image/*\"/>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <h6>Services Description</h6><input type=\"text\" class=\"form-control\" name=\"user_fullname\" placeholder />\n                        </div>\n                        <div class=\"form-group\">\n                            <h6>Services Background</h6><input type=\"file\" id=\"user_avatar\" name=\"user_avatar\" accept=\"image/*\"/>\n                        </div>\n                        <div class=\"form-group\"><button class=\"btn btn-primary btn-block\" type=\"submit\">Update Home</button></div>\n                    </form>\n                </div>\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default UpdateHome\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Dashboard.js",["254","255"],"import React, { Fragment, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from './../layout/MetaData'\nimport Loader from './../layout/Loader'\nimport Sidebar from './Sidebar'\nimport '../../dashboard.css'\nimport '../../bootstrap.min.css'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts } from '../../actions/productActions'\nimport { listInquiry } from '../../actions/inquiryActions'\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n\n    const { products } = useSelector(state => state.products)\n    const { inquiries } = useSelector(state => state.listInquiry)\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n    }, [dispatch])\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Dashboard'}/>\n            <Fragment>\n                <div className='row'>\n                    <div className='col-4 col-md-2 '>\n                        <Sidebar/>\n                    </div>\n                    <section className=\"dashboard-section col-8\">\n                        <h1>Dashboard</h1>\n                        <div className=\"dashboard-container\">\n                            <div className=\"inbox-container small-width\">\n                                <h3>Inbox</h3>\n                                <h5>\n                                    {inquiries && inquiries.length}\n                                </h5>\n                                <hr/><Link to=\"/admin/inquiries\">View messages&nbsp;<i className=\"fa fa-angle-right\"></i></Link>\n                            </div>\n                            <div className=\"products-container small-width\">\n                                <h3>Products</h3>\n                                <h5>\n                                    {products && products.length}\n                                </h5>\n                                <hr/><Link to=\"/admin/products\">View details&nbsp;<i className=\"fa fa-angle-right\"></i></Link>\n                            </div>\n                            <div className=\"users-container small-width\">\n                                <h3>Users</h3>\n                                <h5>3</h5>\n                                <hr/><Link to=\"/admin/users\">View details&nbsp;<i className=\"fa fa-angle-right\"></i></Link>\n                            </div>\n                        </div>\n                    </section>\n                </div>   \n            </Fragment>\n        </Fragment>\n\n    )\n}\n\nexport default Dashboard\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListInquiries.js",["256"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listInquiry, clearErrors } from '../../actions/inquiryActions'\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Inquiry ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType=='Inquiry'){\n                data.rows.push({\n                    id: inquiry._id,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: String(inquiry.inquiryStatus),\n                    actions:   <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                 })\n             }\n         })\n\n         return data\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Inquiries'}/>\n            <div className=\"row\">\n                <div className=\"col-4 col-md-2\">\n                    <Sidebar/>\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                    <h1 className='mt-5'>Inbox - Inquiry</h1>\n                    {loading? <Loader/> : (\n                        <MDBDataTable\n                            data={setInquiries()}\n                            className='px-3 ml-10'\n                            bordered\n                            striped\n                            hover\n                            entries={5}\n                        />\n                    )}\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDisplay.js",["257"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ProductList = ({ product }) => {\n    return (\n        <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 product-display-container\">\n                <img className=\"product-image center\" src={product.images[0].url}/>\n                <Link to={`/our-products/${product._id}`}><h6 className=\"product-section-h5\">{product.name}</h6></Link>\n        </div>\n    )\n}\n\nexport default ProductList\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Sidebar.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ProductsList.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListOthers.js",["258"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listOthers, clearErrors } from '../../actions/inquiryActions'\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n\n    useEffect(() => {\n        dispatch(listOthers());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Inquiry ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType=='Others'){\n                data.rows.push({\n                    id: inquiry._id,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: String(inquiry.inquiryStatus),\n                    actions:   <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                 })\n             }\n         })\n\n         return data\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Others'}/>\n            <div className=\"row\">\n                <div className=\"col-4 col-md-2\">\n                    <Sidebar/>\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                    <h1 className='mt-5'>Inbox - Others</h1>\n                    {loading? <Loader/> : (\n                        <MDBDataTable\n                            data={setInquiries()}\n                            className='px-3 ml-10'\n                            bordered\n                            striped\n                            hover\n                            entries={5}\n                        />\n                    )}\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListQuotations.js",["259"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listQuotations, clearErrors } from '../../actions/inquiryActions'\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n\n    useEffect(() => {\n        dispatch(listQuotations());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Inquiry ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType=='Appointment'){\n                data.rows.push({\n                    id: inquiry._id,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: String(inquiry.inquiryStatus),\n                    actions:   <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                 })\n             }\n         })\n\n         return data\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Quotations'}/>\n            <div className=\"row\">\n                <div className=\"col-4 col-md-2\">\n                    <Sidebar/>\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                    <h1 className='mt-5'>Inbox - Quotations</h1>\n                    {loading? <Loader/> : (\n                        <MDBDataTable\n                            data={setInquiries()}\n                            className='px-3 ml-10'\n                            bordered\n                            striped\n                            hover\n                            entries={5}\n                        />\n                    )}\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders",{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":16},{"ruleId":"264","severity":1,"message":"268","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":29},{"ruleId":"264","severity":1,"message":"269","line":29,"column":5,"nodeType":"266","messageId":"267","endLine":29,"endColumn":20},{"ruleId":"264","severity":1,"message":"270","line":30,"column":5,"nodeType":"266","messageId":"267","endLine":30,"endColumn":20},{"ruleId":"264","severity":1,"message":"271","line":31,"column":5,"nodeType":"266","messageId":"267","endLine":31,"endColumn":17},{"ruleId":"264","severity":1,"message":"272","line":4,"column":23,"nodeType":"266","messageId":"267","endLine":4,"endColumn":34},{"ruleId":"273","severity":1,"message":"274","line":27,"column":21,"nodeType":"275","endLine":27,"endColumn":150},{"ruleId":"276","severity":1,"message":"277","line":37,"column":21,"nodeType":"275","endLine":37,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":68,"column":61,"nodeType":"275","endLine":68,"endColumn":64},{"ruleId":"264","severity":1,"message":"272","line":7,"column":23,"nodeType":"266","messageId":"267","endLine":7,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":37,"column":1097,"nodeType":"275","endLine":37,"endColumn":1179},{"ruleId":"264","severity":1,"message":"272","line":7,"column":23,"nodeType":"266","messageId":"267","endLine":7,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":38,"column":29,"nodeType":"275","endLine":38,"endColumn":111},{"ruleId":"264","severity":1,"message":"272","line":7,"column":23,"nodeType":"266","messageId":"267","endLine":7,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":41,"column":23,"nodeType":"275","endLine":41,"endColumn":105},{"ruleId":"264","severity":1,"message":"272","line":7,"column":23,"nodeType":"266","messageId":"267","endLine":7,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":39,"column":23,"nodeType":"275","endLine":39,"endColumn":101},{"ruleId":"264","severity":1,"message":"272","line":7,"column":23,"nodeType":"266","messageId":"267","endLine":7,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":42,"column":29,"nodeType":"275","endLine":42,"endColumn":111},{"ruleId":"273","severity":1,"message":"274","line":48,"column":33,"nodeType":"275","endLine":48,"endColumn":156},{"ruleId":"273","severity":1,"message":"274","line":32,"column":17,"nodeType":"275","endLine":32,"endColumn":154},{"ruleId":"282","severity":1,"message":"283","line":49,"column":37,"nodeType":"284","endLine":49,"endColumn":62},{"ruleId":"282","severity":1,"message":"285","line":53,"column":68,"nodeType":"284","endLine":53,"endColumn":109},{"ruleId":"286","severity":1,"message":"287","line":35,"column":8,"nodeType":"288","endLine":35,"endColumn":52,"suggestions":"289"},{"ruleId":"280","severity":1,"message":"281","line":41,"column":45,"nodeType":"275","endLine":41,"endColumn":126},{"ruleId":"264","severity":1,"message":"290","line":49,"column":11,"nodeType":"266","messageId":"267","endLine":49,"endColumn":19},{"ruleId":"286","severity":1,"message":"291","line":47,"column":8,"nodeType":"288","endLine":47,"endColumn":52,"suggestions":"292"},{"ruleId":"264","severity":1,"message":"293","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"295","line":20,"column":36,"nodeType":"296","messageId":"297","endLine":20,"endColumn":38},{"ruleId":"273","severity":1,"message":"274","line":21,"column":33,"nodeType":"275","endLine":21,"endColumn":89},{"ruleId":"264","severity":1,"message":"290","line":39,"column":11,"nodeType":"266","messageId":"267","endLine":39,"endColumn":19},{"ruleId":"264","severity":1,"message":"293","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"298","line":10,"column":12,"nodeType":"266","messageId":"267","endLine":10,"endColumn":27},{"ruleId":"264","severity":1,"message":"299","line":10,"column":29,"nodeType":"266","messageId":"267","endLine":10,"endColumn":47},{"ruleId":"264","severity":1,"message":"300","line":11,"column":12,"nodeType":"266","messageId":"267","endLine":11,"endColumn":30},{"ruleId":"264","severity":1,"message":"301","line":11,"column":32,"nodeType":"266","messageId":"267","endLine":11,"endColumn":53},{"ruleId":"264","severity":1,"message":"302","line":12,"column":12,"nodeType":"266","messageId":"267","endLine":12,"endColumn":25},{"ruleId":"264","severity":1,"message":"303","line":12,"column":27,"nodeType":"266","messageId":"267","endLine":12,"endColumn":43},{"ruleId":"264","severity":1,"message":"304","line":13,"column":12,"nodeType":"266","messageId":"267","endLine":13,"endColumn":25},{"ruleId":"264","severity":1,"message":"305","line":13,"column":27,"nodeType":"266","messageId":"267","endLine":13,"endColumn":43},{"ruleId":"264","severity":1,"message":"306","line":14,"column":12,"nodeType":"266","messageId":"267","endLine":14,"endColumn":31},{"ruleId":"264","severity":1,"message":"307","line":14,"column":33,"nodeType":"266","messageId":"267","endLine":14,"endColumn":55},{"ruleId":"264","severity":1,"message":"308","line":15,"column":12,"nodeType":"266","messageId":"267","endLine":15,"endColumn":30},{"ruleId":"264","severity":1,"message":"309","line":15,"column":32,"nodeType":"266","messageId":"267","endLine":15,"endColumn":53},{"ruleId":"264","severity":1,"message":"310","line":21,"column":31,"nodeType":"266","messageId":"267","endLine":21,"endColumn":38},{"ruleId":"286","severity":1,"message":"291","line":46,"column":8,"nodeType":"288","endLine":46,"endColumn":52,"suggestions":"311"},{"ruleId":"264","severity":1,"message":"312","line":48,"column":11,"nodeType":"266","messageId":"267","endLine":48,"endColumn":24},{"ruleId":"264","severity":1,"message":"290","line":56,"column":11,"nodeType":"266","messageId":"267","endLine":56,"endColumn":19},{"ruleId":"264","severity":1,"message":"313","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":14},{"ruleId":"264","severity":1,"message":"314","line":12,"column":10,"nodeType":"266","messageId":"267","endLine":12,"endColumn":21},{"ruleId":"294","severity":1,"message":"295","line":65,"column":36,"nodeType":"296","messageId":"297","endLine":65,"endColumn":38},{"ruleId":"273","severity":1,"message":"274","line":7,"column":17,"nodeType":"275","endLine":7,"endColumn":84},{"ruleId":"294","severity":1,"message":"295","line":65,"column":36,"nodeType":"296","messageId":"297","endLine":65,"endColumn":38},{"ruleId":"294","severity":1,"message":"295","line":65,"column":36,"nodeType":"296","messageId":"297","endLine":65,"endColumn":38},"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"no-unused-vars","'STATES' is defined but never used.","Identifier","unusedVar","'defaultMaxListeners' is defined but never used.","'INQUIRY_REQUEST' is defined but never used.","'INQUIRY_SUCCESS' is defined but never used.","'INQUIRY_FAIL' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.","ArrayExpression",["317"],"'onChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["318"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'titleBackground' is assigned a value but never used.","'setTitleBackground' is assigned a value but never used.","'productDescription' is assigned a value but never used.","'setProductDescription' is assigned a value but never used.","'productImage1' is assigned a value but never used.","'setProductImage1' is assigned a value but never used.","'productImage2' is assigned a value but never used.","'setProductImage2' is assigned a value but never used.","'servicesDescription' is assigned a value but never used.","'setServicesDescription' is assigned a value but never used.","'servicesBackground' is assigned a value but never used.","'setServicesBackground' is assigned a value but never used.","'loading' is assigned a value but never used.",["319"],"'submitHandler' is assigned a value but never used.","'Loader' is defined but never used.","'listInquiry' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"322","fix":"324"},"Update the dependencies array to be: [dispatch, success, error, loading, history, alert]",{"range":"325","text":"326"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"327","text":"328"},{"range":"329","text":"328"},[1157,1201],"[dispatch, success, error, loading, history, alert]",[1435,1479],"[dispatch, alert, error, history, isUpdated, user]",[1431,1475]]