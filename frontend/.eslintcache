[{"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\index.js":"1","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\App.js":"2","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\store.js":"3","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutMissionVision.js":"4","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutHistory.js":"5","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutCompany.js":"6","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Products.js":"7","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutObjectives.js":"8","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Services.js":"9","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\ConfirmationPage.js":"10","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\EmailSent.js":"11","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Contact.js":"12","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutScope.js":"13","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Footer.js":"14","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Header.js":"15","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListInquiries.js":"16","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Dashboard.js":"17","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListOthers.js":"18","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListTrash.js":"19","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListArchives.js":"20","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\NewProduct.js":"21","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListQuotations.js":"22","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateInquiry.js":"23","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ProductsList.js":"24","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Login.js":"25","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Profile.js":"26","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateProduct.js":"27","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\ForgotPassword.js":"28","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdateProfile.js":"29","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdatePassword.js":"30","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDetails.js":"31","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\route\\ProtectedRoute.js":"32","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Register.js":"33","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\NewPassword.js":"34","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\userReducers.js":"35","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\userActions.js":"36","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\websiteReducers.js":"37","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\productReducers.js":"38","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\inquiryReducers.js":"39","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Home.js":"40","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateHome.js":"41","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\MetaData.js":"42","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Loader.js":"43","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDisplay.js":"44","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Sidebar.js":"45","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\productActions.js":"46","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\inquiryActions.js":"47","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\inquiryConstants.js":"48","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\websiteConstants.js":"49","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\userConstants.js":"50","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\productConstants.js":"51","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\websiteActions.js":"52"},{"size":609,"mtime":1611641854875,"results":"53","hashOfConfig":"54"},{"size":5098,"mtime":1613288915366,"results":"55","hashOfConfig":"54"},{"size":1368,"mtime":1613288915461,"results":"56","hashOfConfig":"54"},{"size":2385,"mtime":1612925533724,"results":"57","hashOfConfig":"54"},{"size":2998,"mtime":1612925533713,"results":"58","hashOfConfig":"54"},{"size":2263,"mtime":1612925533694,"results":"59","hashOfConfig":"54"},{"size":4671,"mtime":1612925533814,"results":"60","hashOfConfig":"54"},{"size":2827,"mtime":1612925533736,"results":"61","hashOfConfig":"54"},{"size":4113,"mtime":1612925533828,"results":"62","hashOfConfig":"54"},{"size":1066,"mtime":1612925533763,"results":"63","hashOfConfig":"54"},{"size":1050,"mtime":1612925533784,"results":"64","hashOfConfig":"54"},{"size":7947,"mtime":1612925533778,"results":"65","hashOfConfig":"54"},{"size":2490,"mtime":1612925533749,"results":"66","hashOfConfig":"54"},{"size":4121,"mtime":1612925533916,"results":"67","hashOfConfig":"54"},{"size":4344,"mtime":1612925533936,"results":"68","hashOfConfig":"54"},{"size":4793,"mtime":1613288915406,"results":"69","hashOfConfig":"54"},{"size":3033,"mtime":1613201379150,"results":"70","hashOfConfig":"54"},{"size":4786,"mtime":1613288915406,"results":"71","hashOfConfig":"54"},{"size":5306,"mtime":1613288915415,"results":"72","hashOfConfig":"54"},{"size":4705,"mtime":1613288915388,"results":"73","hashOfConfig":"54"},{"size":6699,"mtime":1613201379187,"results":"74","hashOfConfig":"54"},{"size":4804,"mtime":1613288915407,"results":"75","hashOfConfig":"54"},{"size":5563,"mtime":1613201379196,"results":"76","hashOfConfig":"54"},{"size":4240,"mtime":1613201379196,"results":"77","hashOfConfig":"54"},{"size":2758,"mtime":1612925533987,"results":"78","hashOfConfig":"54"},{"size":1949,"mtime":1612925533993,"results":"79","hashOfConfig":"54"},{"size":7964,"mtime":1613201379204,"results":"80","hashOfConfig":"54"},{"size":2332,"mtime":1612925533980,"results":"81","hashOfConfig":"54"},{"size":5142,"mtime":1612925534005,"results":"82","hashOfConfig":"54"},{"size":3135,"mtime":1612925533999,"results":"83","hashOfConfig":"54"},{"size":2348,"mtime":1613201379213,"results":"84","hashOfConfig":"54"},{"size":953,"mtime":1612925533973,"results":"85","hashOfConfig":"54"},{"size":6625,"mtime":1613201379221,"results":"86","hashOfConfig":"54"},{"size":2908,"mtime":1612781583507,"results":"87","hashOfConfig":"54"},{"size":4328,"mtime":1612925534041,"results":"88","hashOfConfig":"54"},{"size":5552,"mtime":1612847822105,"results":"89","hashOfConfig":"54"},{"size":1858,"mtime":1613288915452,"results":"90","hashOfConfig":"54"},{"size":4729,"mtime":1613201379234,"results":"91","hashOfConfig":"54"},{"size":4047,"mtime":1613211887938,"results":"92","hashOfConfig":"54"},{"size":5247,"mtime":1613300197194,"results":"93","hashOfConfig":"54"},{"size":12002,"mtime":1613300197201,"results":"94","hashOfConfig":"54"},{"size":283,"mtime":1611641854863,"results":"95","hashOfConfig":"54"},{"size":170,"mtime":1611641854862,"results":"96","hashOfConfig":"54"},{"size":503,"mtime":1612925533959,"results":"97","hashOfConfig":"54"},{"size":3068,"mtime":1612925533891,"results":"98","hashOfConfig":"54"},{"size":4354,"mtime":1613201379121,"results":"99","hashOfConfig":"54"},{"size":3482,"mtime":1613201379110,"results":"100","hashOfConfig":"54"},{"size":1054,"mtime":1613201379222,"results":"101","hashOfConfig":"54"},{"size":442,"mtime":1613201379234,"results":"102","hashOfConfig":"54"},{"size":1483,"mtime":1612847822178,"results":"103","hashOfConfig":"54"},{"size":1320,"mtime":1612847822177,"results":"104","hashOfConfig":"54"},{"size":1577,"mtime":1613288915372,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1ep5qhl",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\index.js",[],["220","221"],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\App.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\store.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutMissionVision.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutHistory.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutCompany.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Products.js",["222"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\n\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\n\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setCategory] = useState('');\r\n\r\n    const categories = [\r\n        'Category1',\r\n        'Category2',\r\n        'Category3',\r\n        'Category4',\r\n        'Category5',\r\n        'Category6',\r\n        'Category7'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category));\r\n    }, [dispatch, alert, error, currentPage, category]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\">\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {categories.map( category => (\r\n                                                    \r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setCategory(category)}}>\r\n                                                            <a>{category}</a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {resPerPage >= count && (\r\n                                                <a href='/our-products'>View All Products</a>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutObjectives.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Services.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\ConfirmationPage.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\EmailSent.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Contact.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutScope.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Header.js",["223","224","225"],"import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport '../../css/styles.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Header = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top\">\r\n            <div className=\"container\">\r\n                <button data-toggle=\"collapse\" data-target=\"#navcol-1\" className=\"navbar-toggler\">\r\n                    <span className=\"sr-only\">Toggle navigation</span>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n            <Link to=\"/\">\r\n                <img className=\"agile-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\r\n            </Link>\r\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\r\n                    <ul className=\"nav navbar-nav flex-grow-1 justify-content-between\">\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"#\"></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-company\"><strong>About Us</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-products\"><strong>Products</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\r\n                        {user ? (\r\n                                <div className=\"ml-4 dropdown d-inline\">\r\n                                <Link\r\n                                    className=\"btn dropdown-toggle text-black mr-4\"\r\n                                    type=\"button\"\r\n                                    id=\"dropDownMenuButton\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\">\r\n                                        {user && user.name}\r\n                                    </Link>\r\n                                    <div className=\"dropdown-menu\" aria-aria-labelledby=\"dropDownMenuButton\">\r\n                                        <Link className=\"dropdown-item\" to=\"/dashboard\">\r\n                                            Dashboard\r\n                                        </Link>\r\n                                        <Link className=\"dropdown-item\" to=\"/me\">\r\n                                                My Profile\r\n                                            </Link>\r\n                                        {user && user.role !== 'admin' ? (\r\n                                            <Link className=\"dropdown-item\" to=\"/register\">\r\n                                                Register New Users\r\n                                            </Link>\r\n                                        ) : (\r\n                                            <Link></Link>\r\n                                        )}\r\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                            Log out\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            ) : !loading && <Link to=\"/login\">\r\n                                <div></div>\r\n                            </Link>}\r\n                    </ul> \r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListInquiries.js",["226"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/quotations')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Inquiry ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    id: inquiry._id,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Inquiries'}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-4 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                    <h1 className='mt-5'>Inbox - Inquiry</h1>\r\n                    {loading? <Loader/> : (\r\n                        <MDBDataTable\r\n                            data={setInquiries()}\r\n                            className='px-3 ml-10'\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                            entries={5}\r\n                        />\r\n                    )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Dashboard.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListOthers.js",["227"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/others')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Inquiry ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    id: inquiry._id,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         }) \r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Others'}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-4 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                    <h1 className='mt-5'>Inbox - Others</h1>\r\n                    {loading? <Loader/> : (\r\n                        <MDBDataTable\r\n                            data={setInquiries()}\r\n                            className='px-3 ml-10'\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                            entries={5}\r\n                        />\r\n                    )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListTrash.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListArchives.js",["228"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListArchives = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Inquiry status has been updated successfully.');\r\n            history.push('/admin/archives')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Inquiry ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Concern Type',\r\n                    field: 'concernType',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Resolved'){\r\n                data.rows.push({\r\n                    id: inquiry._id,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\r\n                                    <i className='fa fa-undo'></i>\r\n                                </button>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Archives'}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-4 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                    <h1 className='mt-5'>Archives</h1>\r\n                    {loading? <Loader/> : (\r\n                        <MDBDataTable\r\n                            data={setInquiries()}\r\n                            className='px-3 ml-10'\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                            entries={5}\r\n                        />\r\n                    )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListArchives","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\NewProduct.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListQuotations.js",["229"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/quotations')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Inquiry ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    id: inquiry._id,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Quotations'}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-4 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                    <h1 className='mt-5'>Inbox - Quotations</h1>\r\n                    {loading? <Loader/> : (\r\n                        <MDBDataTable\r\n                            data={setInquiries()}\r\n                            className='px-3 ml-10'\r\n                            bordered\r\n                            striped\r\n                             hover\r\n                            entries={5}\r\n                        />\r\n                    )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateInquiry.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ProductsList.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Login.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Profile.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdateProfile.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Register.js",["230"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { register, clearErrors } from './../../actions/userActions'\r\n\r\nconst Register = ( { history } ) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        contactNumber: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const { name, email, contactNumber, password, confirmPassword } = user;\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n    const [useDefaultImage, setDefaultImage] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n\r\n        }\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('avatar', avatar);\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        dispatch(register(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        \r\n        if(e.target.name === 'avatar') {\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if(reader.readyState === 2){\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) {\r\n                setDefaultImage(true)\r\n            }\r\n            else{\r\n                setDefaultImage(false)\r\n            }\r\n        }\r\n        else {\r\n            setUser({\r\n                ...user,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Register'}/>\r\n            <div className=\"login-clean\">\r\n                <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                    <h2 className=\"sr-only\">Register New User</h2>\r\n                    <div className=\"div-forgot-password\">\r\n                        <h3 className=\"forgot-password-heading\">Register New User</h3>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Name</h6>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Email</h6>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\" \r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Contact Number</h6>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"contactNumber\" \r\n                            value={contactNumber}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Password</h6>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Confirm Password</h6>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            name=\"confirmPassword\"\r\n                            value={confirmPassword}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type='checkbox'\r\n                            id='useDefaultImage'\r\n                            name='useDefaultImage'\r\n                            value={useDefaultImage}\r\n                            onChange={onChange}/>\r\n                            &nbsp;Use default image\r\n                        <h6>Avatar</h6>\r\n                        <figure className='mr-3 item-rtl'>\r\n                            <img \r\n                                src={avatarPreview}\r\n                                className='rounded-circle small-avatar'\r\n                                alt='Avatar Preview'\r\n                            />\r\n                        </figure>\r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"avatar\" \r\n                            name=\"avatar\" \r\n                            accept=\"images/*\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button\r\n                            className=\"btn btn-primary btn-block\"\r\n                            type=\"submit\"\r\n                            disabled={ loading ? true : false}\r\n                        >Register</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\userActions.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\websiteReducers.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\inquiryReducers.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Home.js",["231","232","233","234","235","236","237","238"],"import React, { Fragment, useEffect } from 'react'\r\nimport '../css/styles.css'\r\nimport MetaData from './layout/MetaData'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getHomeDetails, clearErrors } from '../actions/websiteActions'\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, homePage } = useSelector(state => state.homeDetails)\r\n\r\n    let titleBackground, servicesBackground, productImageLeft, productImageRight = \"\"\r\n\r\n    \r\n    if(homePage.titleBackground){\r\n        titleBackground = homePage.titleBackground.url\r\n    } else {\r\n        titleBackground = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\r\n    }\r\n\r\n    if(homePage.servicesBackground){\r\n        servicesBackground = homePage.servicesBackground.url\r\n    } else {\r\n        servicesBackground = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\r\n    }\r\n\r\n    if(homePage.productImageLeft){\r\n        productImageLeft = homePage.productImageLeft.url\r\n    } else {\r\n        productImageLeft = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\r\n    }\r\n\r\n    if(homePage.productImageRight){\r\n        productImageRight = homePage.productImageRight.url\r\n    } else {\r\n        productImageRight = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomeDetails())\r\n        \r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={'Home'}/>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <section className=\"section1 welcome\" style={{height: \"100%\", width: \"100%\"}}>\r\n                            <div\r\n                                className=\"welcome-container\"\r\n                                style={{\r\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \r\n                                    backgroundSize: \"cover\", \r\n                                    width: \"100%\", \r\n                                    height: \"100%\"}\r\n                                }>\r\n                                <img className=\"agile-logo-small\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\" alt=\"company logo\"/>\r\n                                <h1 className=\"agile-name font-weight-bold\">AGILE TECHNODYNAMICS</h1>\r\n                            </div>\r\n                        </section>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-auto description-container\">\r\n                                <div>\r\n                                    <h1 className=\"font-weight-bold\">Our Products</h1>\r\n                                    <h6 className=\"product-description\">{homePage.productDescription}&nbsp;</h6>\r\n                                </div>\r\n                                <a href=\"product.html\">See Products&nbsp;<i className=\"fa fa-angle-right\"></i></a>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\"}}></div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\"}}></div>\r\n                            </div>\r\n                        </div>\r\n                        <div \r\n                            className=\"row our-services our-services-column description-container our-services-photo\" \r\n                            style={{\r\n                                background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \r\n                                backgroundSize: \"cover\", \r\n                                backgroundPosition: \"right\"\r\n                                }}\r\n                            >\r\n                            <div className=\"col\">\r\n                                <div className=\"div-our-services\">\r\n                                    <h1 className=\"our-services font-weight-bold\">Our Services</h1>\r\n                                    <h6 className=\"description\">{homePage.servicesDescription}&nbsp;</h6><a className=\"services-link\" href=\"services.html\">See Services&nbsp;<i className=\"fa fa-angle-right\"></i></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateHome.js",["239","240","241","242","243","244","245","246","247","248","249","250"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\r\n\r\nconst UpdateHome = ({history}) => {\r\n    \r\n    const [productDescription, setProductDescription] = useState('')\r\n    const [servicesDescription, setServicesDescription] = useState('')\r\n    const [titleBackground, setTitleBackground] = useState('')\r\n    const [servicesBackground, setServicesBackground] = useState('')\r\n    const [productImageLeft, setProductImageLeft] = useState('')\r\n    const [productImageRight, setProductImageRight] = useState('')\r\n    \r\n    //image previews\r\n    const [titleBgPreview, setTitleBgPreview] = useState('')\r\n    const [servicesBgPreview, setServicesBgPreview] = useState('')\r\n    const [prodImgLeftPreview, setProdImgLeftPreview] = useState('')\r\n    const [prodImgRightPreview, setProdImgRightPreview] = useState('')\r\n    \r\n    //old images\r\n    const [oldTitleBg, setOldTitleBg] = useState('')\r\n    const [oldServicesBg, setOldServicesBg] = useState('')\r\n    const [oldProdImageLeft, setOldProdImageLeft] = useState('')\r\n    const [oldProdImageRight, setOldProdImageRight] = useState('')\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, homePage } = useSelector(state => state.homeDetails) \r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.home)\r\n\r\n    let var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight = \"\"\r\n\r\n    if(homePage.titleBackground){\r\n        var_titleBackground = homePage.titleBackground.url\r\n    } \r\n    // else {\r\n    //     var_titleBackground = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\r\n    // }\r\n\r\n    if(homePage.servicesBackground){\r\n        var_servicesBackground = homePage.servicesBackground.url\r\n    } \r\n    // else {\r\n    //     var_servicesBackground = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\r\n    // }\r\n\r\n    if(homePage.productImageLeft){\r\n        var_productImageLeft = homePage.productImageLeft.url\r\n    } \r\n    // else {\r\n    //     var_productImageLeft = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\r\n    // }\r\n\r\n    if(homePage.productImageRight){\r\n        var_productImageRight = homePage.productImageRight.url\r\n    } \r\n    // else {\r\n    //     var_productImageRight = \"https://res.cloudinary.com/agiletech3itf/image/upload/v1613009941/avatars/y0k3r3kes5wovvrefnvw.jpg\"\r\n    // }\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(homePage){\r\n            setProductDescription(homePage.productDescription)\r\n            setServicesDescription(homePage.servicesDescription)\r\n            setTitleBgPreview(var_titleBackground)\r\n            setServicesBgPreview(var_servicesBackground)\r\n            setProdImgLeftPreview(var_productImageLeft)\r\n            setProdImgRightPreview(var_productImageRight)\r\n        }else{\r\n            dispatch(getHomeDetails())\r\n        }\r\n\r\n        if(error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(updateError) {\r\n            alert.error(updateError);\r\n\r\n            history.push('/dashboard')\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/dashboard')\r\n            alert.success('Home updated successfully.');\r\n\r\n            dispatch({\r\n                type: UPDATE_HOME_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, updateError, isUpdated, homePage])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('productDescription', productDescription);\r\n        formData.set('servicesDescription', servicesDescription);\r\n        formData.set('titleBackground', titleBackground);\r\n        formData.set('servicesBackground', servicesBackground);\r\n        formData.set('productImageLeft', productImageLeft);\r\n        formData.set('productImageRight', productImageRight);\r\n\r\n        dispatch(updateHome(formData));\r\n    }\r\n\r\n    const changeTitleBg = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setTitleBgPreview(reader.result)\r\n                setTitleBackground(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    \r\n    const changeProdImgLeft = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setProdImgLeftPreview(reader.result)\r\n                setProductImageLeft(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    const changeProdImgRight = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setProdImgRightPreview(reader.result)\r\n                setProductImageRight(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    const changeServicesBg = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setServicesBgPreview(reader.result)\r\n                setServicesBackground(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Home'}/>\r\n                <Fragment>\r\n                    <div className=\"login-clean\">\r\n                        <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{width: '90%'}}>\r\n                            <h2 className=\"sr-only\">Update Homepage</h2>\r\n                            <div className=\"div-forgot-password\">\r\n                                <h3 className=\"forgot-password-heading\">Update Homepage </h3>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Main Background</h6>\r\n                                <figure className='mr-3 item-rtl'>\r\n                                    <img \r\n                                        src={titleBgPreview}\r\n                                        className='small-avatar'\r\n                                        alt='Main Background Preview'\r\n                                    />\r\n                                </figure>\r\n                                <input \r\n                                    type=\"file\" \r\n                                    id=\"titleBackground\" \r\n                                    name=\"titleBackground\" \r\n                                    accept=\"images/*\"\r\n                                    onChange={changeTitleBg}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Product Description</h6>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    id=\"productDescription\" \r\n                                    name=\"productDescription\" \r\n                                    value={productDescription}\r\n                                    onChange={(e) => setProductDescription(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Product Image (Left)</h6>\r\n                                <figure className='mr-3 item-rtl'>\r\n                                    <img \r\n                                        src={prodImgLeftPreview}\r\n                                        className='small-avatar'\r\n                                        alt='Product Image Left Preview'\r\n                                    />\r\n                                </figure>\r\n                                <input \r\n                                    type=\"file\" \r\n                                    id=\"productImageLeft\" \r\n                                    name=\"productImageLeft\" \r\n                                    accept=\"images/*\"\r\n                                    onChange={changeProdImgLeft}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Product Image (Right)</h6>\r\n                                <figure className='mr-3 item-rtl'>\r\n                                    <img \r\n                                        src={prodImgRightPreview}\r\n                                        className='small-avatar'\r\n                                        alt='Avatar Preview'\r\n                                    />\r\n                                </figure>\r\n                                <input \r\n                                    type=\"file\" \r\n                                    id=\"productImageRight\" \r\n                                    name=\"productImageRight\" \r\n                                    accept=\"images/*\"\r\n                                    onChange={changeProdImgRight}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <h6>Services Description</h6>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    id=\"servicesDescription\" \r\n                                    name=\"servicesDescription\" \r\n                                    value={servicesDescription}\r\n                                    onChange={(e) => setServicesDescription(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Services Background</h6>\r\n                                <figure className='mr-3 item-rtl'>\r\n                                    <img \r\n                                        src={servicesBgPreview}\r\n                                        className='small-avatar'\r\n                                        alt='Avatar Preview'\r\n                                    />\r\n                                </figure>\r\n                                <input \r\n                                    type=\"file\" \r\n                                    id=\"servicesBackground\" \r\n                                    name=\"servicesBackground\" \r\n                                    accept=\"images/*\"\r\n                                    onChange={changeServicesBg}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button \r\n                                    className=\"btn btn-primary btn-block\" \r\n                                    type=\"submit\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    Update Home\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateHome\r\n","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDisplay.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\productActions.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\inquiryActions.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\inquiryConstants.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\websiteConstants.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\userConstants.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\productConstants.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\websiteActions.js",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":69,"column":61,"nodeType":"257","endLine":69,"endColumn":64},{"ruleId":"258","severity":1,"message":"259","line":32,"column":17,"nodeType":"257","endLine":32,"endColumn":154},{"ruleId":"260","severity":1,"message":"261","line":49,"column":37,"nodeType":"262","endLine":49,"endColumn":62},{"ruleId":"260","severity":1,"message":"263","line":53,"column":68,"nodeType":"262","endLine":53,"endColumn":109},{"ruleId":"264","severity":1,"message":"265","line":1,"column":38,"nodeType":"266","messageId":"267","endLine":1,"endColumn":46},{"ruleId":"264","severity":1,"message":"265","line":1,"column":38,"nodeType":"266","messageId":"267","endLine":1,"endColumn":46},{"ruleId":"264","severity":1,"message":"265","line":1,"column":39,"nodeType":"266","messageId":"267","endLine":1,"endColumn":47},{"ruleId":"264","severity":1,"message":"265","line":1,"column":38,"nodeType":"266","messageId":"267","endLine":1,"endColumn":46},{"ruleId":"268","severity":1,"message":"269","line":72,"column":31,"nodeType":"270","messageId":"271","endLine":72,"endColumn":33},{"ruleId":"272","severity":1,"message":"273","line":61,"column":140,"nodeType":"270","messageId":"274","endLine":61,"endColumn":141},{"ruleId":"272","severity":1,"message":"273","line":61,"column":161,"nodeType":"270","messageId":"274","endLine":61,"endColumn":162},{"ruleId":"272","severity":1,"message":"273","line":79,"column":84,"nodeType":"270","messageId":"274","endLine":79,"endColumn":85},{"ruleId":"272","severity":1,"message":"273","line":79,"column":106,"nodeType":"270","messageId":"274","endLine":79,"endColumn":107},{"ruleId":"272","severity":1,"message":"273","line":82,"column":84,"nodeType":"270","messageId":"274","endLine":82,"endColumn":85},{"ruleId":"272","severity":1,"message":"273","line":82,"column":107,"nodeType":"270","messageId":"274","endLine":82,"endColumn":108},{"ruleId":"272","severity":1,"message":"273","line":88,"column":121,"nodeType":"270","messageId":"274","endLine":88,"endColumn":122},{"ruleId":"272","severity":1,"message":"273","line":88,"column":145,"nodeType":"270","messageId":"274","endLine":88,"endColumn":146},{"ruleId":"264","severity":1,"message":"275","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"276","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":15},{"ruleId":"264","severity":1,"message":"277","line":26,"column":12,"nodeType":"266","messageId":"267","endLine":26,"endColumn":22},{"ruleId":"264","severity":1,"message":"278","line":26,"column":24,"nodeType":"266","messageId":"267","endLine":26,"endColumn":37},{"ruleId":"264","severity":1,"message":"279","line":27,"column":12,"nodeType":"266","messageId":"267","endLine":27,"endColumn":25},{"ruleId":"264","severity":1,"message":"280","line":27,"column":27,"nodeType":"266","messageId":"267","endLine":27,"endColumn":43},{"ruleId":"264","severity":1,"message":"281","line":28,"column":12,"nodeType":"266","messageId":"267","endLine":28,"endColumn":28},{"ruleId":"264","severity":1,"message":"282","line":28,"column":30,"nodeType":"266","messageId":"267","endLine":28,"endColumn":49},{"ruleId":"264","severity":1,"message":"283","line":29,"column":12,"nodeType":"266","messageId":"267","endLine":29,"endColumn":29},{"ruleId":"264","severity":1,"message":"284","line":29,"column":31,"nodeType":"266","messageId":"267","endLine":29,"endColumn":51},{"ruleId":"285","severity":1,"message":"286","line":102,"column":8,"nodeType":"287","endLine":102,"endColumn":75,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":211,"column":37,"nodeType":"257","endLine":215,"endColumn":39},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Loader' is defined but never used.","'Sidebar' is defined but never used.","'oldTitleBg' is assigned a value but never used.","'setOldTitleBg' is assigned a value but never used.","'oldServicesBg' is assigned a value but never used.","'setOldServicesBg' is assigned a value but never used.","'oldProdImageLeft' is assigned a value but never used.","'setOldProdImageLeft' is assigned a value but never used.","'oldProdImageRight' is assigned a value but never used.","'setOldProdImageRight' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'var_productImageLeft', 'var_productImageRight', 'var_servicesBackground', and 'var_titleBackground'. Either include them or remove the dependency array.","ArrayExpression",["293"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",{"range":"296","text":"297"},[3855,3922],"[dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]"]