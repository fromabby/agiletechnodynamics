[{"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/index.js":"1","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/App.js":"2","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/store.js":"3","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutMissionVision.js":"4","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutScope.js":"5","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutObjectives.js":"6","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Contact.js":"7","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Services.js":"8","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutHistory.js":"9","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutCompany.js":"10","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/EmailSent.js":"11","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateAbout.js":"12","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListInquiries.js":"13","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListQuotations.js":"14","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Settings.js":"15","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Header.js":"16","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListOthers.js":"17","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListTrash.js":"18","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Dashboard.js":"19","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListAbout.js":"20","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDetails.js":"21","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Register.js":"22","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ProductsList.js":"23","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateInquiry.js":"24","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Login.js":"25","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/ForgotPassword.js":"26","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/ConfirmationPage.js":"27","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/userActions.js":"28","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/route/ProtectedRoute.js":"29","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/NewPassword.js":"30","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListArchives.js":"31","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Products.js":"32","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/NewProduct.js":"33","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/inquiryReducers.js":"34","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Home.js":"35","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/productReducers.js":"36","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateProduct.js":"37","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/userReducers.js":"38","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Footer.js":"39","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateHome.js":"40","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateFooter.js":"41","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/websiteReducers.js":"42","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/productActions.js":"43","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/MissionVision.js":"44","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDisplay.js":"45","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/MetaData.js":"46","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/websiteActions.js":"47","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/inquiryActions.js":"48","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Loader.js":"49","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/inquiryConstants.js":"50","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/productConstants.js":"51","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/userConstants.js":"52","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/websiteConstants.js":"53","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/dashboardReducers.js":"54","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/dashboardConstants.js":"55","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateProfile.js":"56","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Profile.js":"57","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdatePassword.js":"58"},{"size":586,"mtime":1610487705946,"results":"59","hashOfConfig":"60"},{"size":5862,"mtime":1613817236555,"results":"61","hashOfConfig":"60"},{"size":1642,"mtime":1613647810342,"results":"62","hashOfConfig":"60"},{"size":2305,"mtime":1613557246582,"results":"63","hashOfConfig":"60"},{"size":2385,"mtime":1613562513657,"results":"64","hashOfConfig":"60"},{"size":2420,"mtime":1613562417108,"results":"65","hashOfConfig":"60"},{"size":8104,"mtime":1613557468650,"results":"66","hashOfConfig":"60"},{"size":4089,"mtime":1613557206169,"results":"67","hashOfConfig":"60"},{"size":2394,"mtime":1613562550884,"results":"68","hashOfConfig":"60"},{"size":2306,"mtime":1613562533535,"results":"69","hashOfConfig":"60"},{"size":1050,"mtime":1613557473383,"results":"70","hashOfConfig":"60"},{"size":6180,"mtime":1613648889753,"results":"71","hashOfConfig":"60"},{"size":6298,"mtime":1613649015985,"results":"72","hashOfConfig":"60"},{"size":6147,"mtime":1613648985325,"results":"73","hashOfConfig":"60"},{"size":6881,"mtime":1613753493739,"results":"74","hashOfConfig":"60"},{"size":4079,"mtime":1613816745654,"results":"75","hashOfConfig":"60"},{"size":6129,"mtime":1613648995553,"results":"76","hashOfConfig":"60"},{"size":7573,"mtime":1613648974558,"results":"77","hashOfConfig":"60"},{"size":10509,"mtime":1613819221362,"results":"78","hashOfConfig":"60"},{"size":4748,"mtime":1613649051883,"results":"79","hashOfConfig":"60"},{"size":2351,"mtime":1613476523286,"results":"80","hashOfConfig":"60"},{"size":7067,"mtime":1613574254699,"results":"81","hashOfConfig":"60"},{"size":5753,"mtime":1613648939527,"results":"82","hashOfConfig":"60"},{"size":6184,"mtime":1613648855227,"results":"83","hashOfConfig":"60"},{"size":2718,"mtime":1613573882389,"results":"84","hashOfConfig":"60"},{"size":2290,"mtime":1613573891332,"results":"85","hashOfConfig":"60"},{"size":1066,"mtime":1613557460817,"results":"86","hashOfConfig":"60"},{"size":5312,"mtime":1613397580615,"results":"87","hashOfConfig":"60"},{"size":921,"mtime":1613397580795,"results":"88","hashOfConfig":"60"},{"size":2857,"mtime":1613573875039,"results":"89","hashOfConfig":"60"},{"size":6077,"mtime":1613649029247,"results":"90","hashOfConfig":"60"},{"size":4586,"mtime":1613635633301,"results":"91","hashOfConfig":"60"},{"size":8312,"mtime":1613648957700,"results":"92","hashOfConfig":"60"},{"size":3992,"mtime":1613456679931,"results":"93","hashOfConfig":"60"},{"size":4809,"mtime":1613648335956,"results":"94","hashOfConfig":"60"},{"size":4538,"mtime":1613397580866,"results":"95","hashOfConfig":"60"},{"size":9910,"mtime":1613648798221,"results":"96","hashOfConfig":"60"},{"size":4194,"mtime":1613458470048,"results":"97","hashOfConfig":"60"},{"size":4060,"mtime":1613631141504,"results":"98","hashOfConfig":"60"},{"size":13905,"mtime":1613648842991,"results":"99","hashOfConfig":"60"},{"size":9329,"mtime":1613648877468,"results":"100","hashOfConfig":"60"},{"size":4682,"mtime":1613647642130,"results":"101","hashOfConfig":"60"},{"size":4167,"mtime":1613397580613,"results":"102","hashOfConfig":"60"},{"size":572,"mtime":1613562580771,"results":"103","hashOfConfig":"60"},{"size":490,"mtime":1613632330057,"results":"104","hashOfConfig":"60"},{"size":270,"mtime":1610903258521,"results":"105","hashOfConfig":"60"},{"size":6910,"mtime":1613631141471,"results":"106","hashOfConfig":"60"},{"size":3335,"mtime":1613455635465,"results":"107","hashOfConfig":"60"},{"size":160,"mtime":1612789451971,"results":"108","hashOfConfig":"60"},{"size":1077,"mtime":1613454334893,"results":"109","hashOfConfig":"60"},{"size":1292,"mtime":1613397580839,"results":"110","hashOfConfig":"60"},{"size":1450,"mtime":1613397580840,"results":"111","hashOfConfig":"60"},{"size":1459,"mtime":1613631141505,"results":"112","hashOfConfig":"60"},{"size":468,"mtime":1613647754436,"results":"113","hashOfConfig":"60"},{"size":123,"mtime":1613647542931,"results":"114","hashOfConfig":"60"},{"size":11704,"mtime":1613816745323,"results":"115","hashOfConfig":"60"},{"size":8570,"mtime":1613806110109,"results":"116","hashOfConfig":"60"},{"size":3073,"mtime":1613803022661,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"bpi0ip",{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"120"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"120"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/index.js",[],["257","258"],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/App.js",["259","260"],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/store.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutMissionVision.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutScope.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutObjectives.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Contact.js",["261","262"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from './layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { createInquiry, clearErrors } from './../actions/inquiryActions'\nimport { INQUIRY_RESET } from './../constants/inquiryConstants'\nimport '../css/contact.css'\n\nconst Contact = ( { history } ) => {\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [customerEmail, setCustomerEmail] = useState('');\n    const [companyName, setCompanyName] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [position, setPosition] = useState('');\n    const [concernType, setConcernType] = useState('');\n    const [customerMessage, setCustomerMessage] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { success, error, loading } = useSelector(state => state.newInquiry);\n\n    var errorCount = 0;\n    var loopCount = 0; \n\n    useEffect(() => {\n        if(success){\n            history.push('/confirmation')\n\n            dispatch({\n                type: INQUIRY_RESET\n            })\n        } \n\n        if(error){ //in reducer, error: true instead of error: action.payload\n            alert.error('Please complete the form.');\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, success, error, loading, alert, history])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('firstName', firstName);\n        formData.set('lastName', lastName);\n        formData.set('customerEmail', customerEmail);\n        formData.set('companyName', companyName);\n        formData.set('position', position);\n        formData.set('contactNumber', contactNumber);\n        formData.set('concernType', concernType);\n        formData.set('customerMessage', customerMessage);\n\n        dispatch(createInquiry(formData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Contact Us'}/>\n            <Fragment>\n                <form method='post' onSubmit={submitHandler} encType='application/json'>\n                    <div className=\"contact-container\" style={{paddingTop: '65px'}}>\n                        <div className=\"contact-header\">\n                            <h1 style={{textAlign: 'center'}}>Contact Us</h1>\n                        </div>\n                        <div className=\"labelname\">\n                            <label>Your Name</label>\n                        </div>\n                        <div className=\"firstname\">\n                            <input \n                                name=\"firstname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"First Name\" \n                                value={firstName}\n                                onChange={(e) => setFirstName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"lastname\">\n                            <input \n                                name=\"lastname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Last Name\" \n                                value={lastName}\n                                onChange={(e) => setLastName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelcompany\">\n                            <label>Your Company Name</label>\n                        </div>\n                        <div className=\"companyname\">\n                            <input \n                                name=\"companyname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Company Name\" \n                                value={companyName}\n                                onChange={(e) => setCompanyName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelposition\">\n                            <label>Your Position in Company</label>\n                        </div>\n                        <div className=\"position\">\n                            <input \n                                name=\"position\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Position\" \n                                value={position}\n                                onChange={(e) => setPosition(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelemail\">\n                            <label>Your Email</label>\n                        </div>\n                        <div className=\"email\">\n                            <input \n                                name=\"email\" \n                                type=\"email\" \n                                className=\"feedback-input\" \n                                placeholder=\"Email\" \n                                value={customerEmail}\n                                onChange={(e) => setCustomerEmail(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelcontact\">\n                            <label>Your Contact Number</label>\n                        </div>\n                        <div className=\"contact\">\n                            <input \n                                name=\"contactnumber\" \n                                type=\"tel\" \n                                className=\"feedback-input\" \n                                placeholder=\"xxxx-xxx-xxxx\" \n                                pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\n                                value={contactNumber}\n                                onChange={(e) => setContactNumber(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelconcern\">\n                            <label>Your Concern Type</label>\n                        </div>\n                        <div className=\"concern\">\n                            <select \n                                name=\"concern\" \n                                className=\"concern-dropdown\" \n                                value={concernType}\n                                onChange={(e) => setConcernType(e.target.value)}\n                            >\n                                <option>         -        </option>\n                                <option value=\"Inquiry\">Inquiry</option>\n                                <option value=\"Appointment\">Appointment</option>\n                                <option value=\"Others\">Others</option>\n                            </select>\n                        </div>\n                        <div className=\"labelmessage\">\n                            <label>Your Message</label>\n                        </div>\n                        <div className=\"message\">\n                            <textarea \n                                name=\"message\" \n                                className=\"feedback-input\" \n                                placeholder=\"Message\" \n                                value={customerMessage}\n                                onChange={(e) => setCustomerMessage(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"submit\">\n                            <input \n                                type=\"submit\" \n                                value=\"SUBMIT\" \n                                disabled={ loading ? true : false}\n                            />\n                        </div>\n                    </div>\n                </form>\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Contact","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Services.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutHistory.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutCompany.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateAbout.js",["263"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateAbout, getSingleAbout, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateAbout = ({ match, history }) => {\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, about } = useSelector(state => state.aboutDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\n\n    const aboutId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n\n        if(about && about._id !== aboutId) {\n            dispatch(getSingleAbout(aboutId))\n        }\n        else { \n            setTitle(about.title)\n            setDescription(about.description)\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/about');\n            alert.success('Information updated successfully.')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, about, aboutId, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('title', title);\n        formData.set('description', description);\n\n        dispatch(updateAbout(about._id, formData));\n    }\n\n\n    return (<Fragment>\n        <MetaData title={'Update About'}/>\n            <div id=\"wrapper\" style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <Fragment>\n                        <div className=\"login-clean\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px'}}>\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                            </a>\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\n                                <h2 className=\"sr-only\">Update About \"{about.title}\"</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update About \"{about.title}\"</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"title\"\n                                        value={title}\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"description\"\n                                        value={description}\n                                        style={{width: '100%', height: '250px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                        <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                        disabled={loading ? true : false}\n                                    >\n                                        Update Information\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n    </Fragment>\n)\n}\n\nexport default UpdateAbout\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListInquiries.js",["264"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n// import \"mdbreact/dist/css/mdb.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    \n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/inquiries')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Inquiries'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <h1 className='mt-3 mb-3'>Inbox - Inquiry</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListQuotations.js",["265"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/quotations')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Appointments'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <h1 className='mt-3 mb-3'>Inbox - Appointments</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Settings.js",["266","267","268","269","270"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from './../layout/MetaData'\nimport Loader from './../layout/Loader'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\n\nimport { useDispatch } from 'react-redux'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\n\nconst Settings = () => {\n\n    const dispatch = useDispatch();\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    })\n    return (\n        <Fragment>\n            <MetaData title={'Settings'}/>\n            <Fragment>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                                    <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                                    <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                                    <li> <Link to=\"/admin/products\">Products</Link></li>\n                                    <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                                    </a>\n                                    <div className=\"main-section\">\n                                        <div className=\"dashbord\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                <small>Update Home</small>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/update-home\">Go to Update Home<i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord dashbord-green\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                <small>Update About Page</small>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/about\">Go to Update About<i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord dashbord-orange\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                <small>Update Footer</small>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/update-footer\">Go to Update Footer<i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord dashbord-blue\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-tasks\" aria-hidden=\"true\"></i><br/>\n                                                <small>Task</small>\n                                                <p>8</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <a href=\"#\">More Info </a>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord dashbord-red\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i><br/>\n                                                <small>Cart</small>\n                                                <p>$ 24</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <a href=\"#\">More Info </a>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord dashbord-skyblue\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-comments\" aria-hidden=\"true\"></i><br/>\n                                                <small>Mentions</small>\n                                                <p>96</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <a href=\"#\">More Info </a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Settings\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Header.js",["271","272"],"import React from 'react'\nimport { Fragment } from 'react'\nimport '../../css/styles.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\n\nconst Header = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n    \n\n    return (\n        <Fragment>\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top\">\n            <div className=\"container\">\n                <button data-toggle=\"collapse\" data-target=\"#navcol-1\" className=\"navbar-toggler\">\n                    <span className=\"sr-only\">Toggle navigation</span>\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n            <Link to=\"/\">\n                <img className=\"agile-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\n            </Link>\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\n                    <ul className=\"nav navbar-nav flex-grow-1 justify-content-between\">\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"#\"></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-company\"><strong>About Us</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-products\"><strong>Products</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\n                        {user ? (\n                                <div className=\"ml-4 dropdown d-inline\">\n                                <Link\n                                    className=\"btn dropdown-toggle text-black mr-4\"\n                                    type=\"button\"\n                                    id=\"dropDownMenuButton\"\n                                    data-toggle=\"dropdown\"\n                                    aria-aria-haspopup=\"true\"\n                                    aria-expanded=\"false\">\n                                        {user && user.name}\n                                    </Link>\n                                    <div className=\"dropdown-menu\" aria-aria-labelledby=\"dropDownMenuButton\">\n                                        <Link className=\"dropdown-item\" to=\"/admin/dashboard\">\n                                            Dashboard\n                                        </Link>\n                                        {user && user.role !== 'admin' ? (\n                                            <Link className=\"dropdown-item\" to=\"/register\">\n                                                Register New Users\n                                            </Link>\n                                        ) : (\n                                            <Link></Link>\n                                        )}\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </div>\n                                \n                            ) : !loading && <Link to=\"/login\">\n                                <div></div>\n                            </Link>}\n                    </ul> \n                </div>\n            </div>\n        </nav>\n        </Fragment>\n    )\n}\n\nexport default Header;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListOthers.js",["273"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/others')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         }) \n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Others'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li><Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <h1 className='mt-3 mb-3'>Inbox - Others</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListTrash.js",["274","275","276"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\n\nconst ListTrash = ( { history} ) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\n\n    let deleteAll = false\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been updated successfully.');\n            history.push('/admin/trash')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        if(isDeleted && deleteAll){\n            alert.success('Inquiry has been deleted successfully.');\n            history.push('/admin/trash')\n\n            dispatch({\n                type: DELETE_INQUIRY_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Deleted'){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\n                                    <i className='fa fa-undo'></i>\n                                </button>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteInquiryHandler(inquiry._id)}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const deleteInquiryHandler = (id) => {\n\n        if(window.confirm(\"Are you sure you want to delete this message? This cannot be undone.\")){\n            dispatch(deleteInquiry(id))\n        }\n    }\n\n    const emptyTrash = () => {\n        if(window.confirm(\"Are you sure you want to delete ALL messages? This cannot be undone.\")){\n            deleteAll = true \n\n            let deletedInquiryCount = 0\n\n            inquiries.forEach(inquiry => {\n\n                if(inquiry.inquiryStatus === 'Deleted') {\n                    deletedInquiryCount += 1\n                    dispatch(deleteInquiry(inquiry._id))\n                    deletedInquiryCount -= 1\n                }\n            })\n\n            if(deletedInquiryCount == 0){\n                alert.success('Trash has been emptied.'); //this is working\n            }\n        }   \n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Trash'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <h1 className='mt-3 mb-3'>Trash</h1>\n                        <Link>\n                            <button className='btn btn-dark btn-sm text-capitalize mb-5' onClick={emptyTrash}>\n                                Empty Trash\n                            </button>\n                        </Link>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListTrash","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Dashboard.js",["277","278"],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListAbout.js",["279"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\n\nconst ListAbout = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, abouts } = useSelector(state => state.abouts)\n    const { isUpdated } = useSelector(state => state.website)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n        dispatch(getAboutDetails());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('About Us information has been updated successfully.');\n            history.push('/admin/about')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setAboutData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         abouts.forEach(about => {\n            data.rows.push({\n                title: about.title,\n                description: about.description,\n                actions:   <Fragment>\n                            <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                        </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All About Us'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <h1 className='mt-3 mb-3'>Update About Us</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setAboutData()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAbout\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDetails.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Register.js",["280"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { register, clearErrors } from './../../actions/userActions'\n\nconst Register = ( { history } ) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        contactNumber: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { name, email, contactNumber, password, confirmPassword, } = user;\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading, success } = useSelector(state => state.auth);\n\n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/')\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(success){\n            alert.success('Account has been created successfully.')\n        }\n    }, [dispatch, alert, isAuthenticated, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n        formData.set('contactNumber', contactNumber);\n        formData.set('avatar', avatar);\n        formData.set('useDefaultImage', useDefaultImage)\n\n        dispatch(register(formData));\n    }\n\n    const onChange = e => {\n        \n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked == true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n\n        } else {\n            if(e.target.name === 'avatar') {\n\n                const reader = new FileReader();\n    \n                reader.onload = () => {\n                    if(reader.readyState === 2){\n                        setAvatarPreview(reader.result)\n                        setAvatar(reader.result)\n                    }\n                }\n    \n                reader.readAsDataURL(e.target.files[0])\n    \n            }\n            else {\n                setUser({\n                    ...user,\n                    [e.target.name]: e.target.value\n                })\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Register'}/>\n            <div className=\"login-clean\" style={{paddingTop: '65px'}}>\n                <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'>\n                    <h2 className=\"sr-only\">Register New User</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">Register New User</h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Name</h6>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"name\"\n                            value={name}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Email</h6>\n                        <input \n                            type=\"email\" \n                            className=\"form-control\" \n                            name=\"email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Contact Number (format: xxxx-xxx-xxxx)</h6>\n                        <input \n                            type=\"tel\" \n                            className=\"form-control\" \n                            name=\"contactNumber\" \n                            value={contactNumber}\n                            pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Password</h6>\n                        <input \n                            type=\"password\" \n                            className=\"form-control\" \n                            name=\"password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Confirm Password</h6>\n                        <input \n                            type=\"password\" \n                            className=\"form-control\" \n                            name=\"confirmPassword\"\n                            value={confirmPassword}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input \n                            type='checkbox'\n                            id='useDefaultImage'\n                            name='useDefaultImage'\n                            value={useDefaultImage}\n                            onChange={onChange}\n                            onClick={checkboxCheck}/>\n                            &nbsp;Use default image\n                        <h6>Avatar</h6>\n                        <figure className='mr-3 item-rtl'>\n                            <img \n                                src={avatarPreview}\n                                className='rounded-circle small-avatar'\n                                alt='Avatar Preview'\n                            />\n                        </figure>\n                        <input \n                            type=\"file\" \n                            id=\"avatar\" \n                            name=\"avatar\" \n                            accept=\"images/*\"\n                            onChange={onChange}\n                            disabled={isChecked ? false : true}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            type=\"submit\"\n                            disabled={ loading ? true : false}\n                        >Register</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ProductsList.js",["281"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\n\nconst ProductsList = ( {history} ) => {\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(state => state.products)\n    const { deleteError, isDeleted } = useSelector(state => state.product)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isDeleted){\n            alert.success('Product has been deleted successfully.');\n            history.push('/admin/products')\n\n            dispatch({\n                type: DELETE_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isDeleted, deleteError])\n\n    const setProducts = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Product ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Product Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Category',\n                    field: 'category',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         products.forEach(product => {\n             data.rows.push({\n                id: product._id,\n                name: product.name,\n                category: product.category,\n                actions: <Fragment>\n                            <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\n                                <i className='fa fa-pencil'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </Fragment>\n             })\n         })\n         return data\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id))\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'All Products'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                            <h1 className=\"mt-3 mb-3\">\n                                All Products\n                            </h1>\n                            <Link to='/admin/newProduct'>\n                                <button className='btn btn-dark btn-sm text-capitalize mb-5'>\n                                    Add New Product\n                                </button>\n                            </Link>\n                            {loading ? <Loader/> : (\n                                <MDBDataTable\n                                    data={setProducts()}\n                                    className='px-10 table-sm'\n                                    bordered\n                                    striped\n                                    hover\n                                    entries={5}\n                                />\n                            )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ProductsList\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateInquiry.js",["282"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateInquiry = ( { match, history } ) => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, inquiry } = useSelector(state => state.inquiryDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.inquiry);\n\n    const inquiryId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    useEffect(() => { \n        if(inquiry && inquiry._id !== inquiryId) {\n            dispatch(getInquiryDetails(inquiryId))\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/dashboard');\n            alert.success('Inquiry updated successfully.')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'View Message'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                    </a>\n                    <Fragment>\n                        {loading ? <Loader/> : (\n                            <section className=\"process-section\">\n                                <div className=\"m-5 concern-info-container\">\n                                    <h3>{inquiry.concernType} sent on {inquiry.createdAt}</h3>\n                                    <hr/>\n                                    <p style={{fontSize: '25px'}}><strong>Sender Information</strong></p>\n                                    <p><strong>From: </strong>{inquiry.firstName} {inquiry.lastName}, {inquiry.position} at {inquiry.companyName} </p>\n                                    <p><strong>Email: </strong>{inquiry.customerEmail}</p>\n                                    <p><strong>Contact No.: </strong>{inquiry.contactNumber}</p>\n                                    <hr/>\n                                    <p style={{fontSize: '20px'}}>{inquiry.customerMessage}</p>\n                                </div>\n                                <div className=\"m-5\">\n                                    {(inquiry.inquiryStatus === 'Resolved') ? (\n                                        <Fragment>\n                                            <button \n                                                className=\"btn btn-primary update-status-button\" \n                                                type=\"button\"\n                                                onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved')}\n                                                style={{marginBottom: '65px'}}>\n                                                Restore message back to {inquiry.concernType}\n                                            </button>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <button \n                                                className=\"btn btn-primary update-status-button\" \n                                                type=\"button\"\n                                                onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\n                                                style={{marginBottom: '65px'}}>\n                                                Mark this message as 'Resolved'\n                                            </button>\n                                        </Fragment>\n                                    )}\n                                </div>\n                            </section>\n                        )}\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateInquiry\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Login.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/ForgotPassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/userActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/NewPassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListArchives.js",["283"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst ListArchives = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Inquiry status has been updated successfully.');\n            history.push('/admin/archives')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Resolved'){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\n                                    <i className='fa fa-undo'></i>\n                                </button>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Archives'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <h1 className='mt-3 mb-3'>Archives</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListArchives","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Products.js",["284"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\n\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\n\n\nconst Products = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setCategory] = useState('');\n\n    const categories = [\n        'Category1',\n        'Category2',\n        'Category3',\n        'Category4',\n        'Category5',\n        'Category6',\n        'Category7'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category));\n    }, [dispatch, alert, error, currentPage, category]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        <MetaData title={'Our Products'}/>\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\n                            <div className=\"our-products\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div classNme=\"mt-5\">\n                                            <ul className=\"pl-0\">\n                                                {categories.map( category => (\n                                                    \n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\n                                                        key={category}\n                                                        onClick={() => {setCurrentPageNo(1); setCategory(category)}}>\n                                                            <a>{category}</a>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                            {category && (\n                                                <a href='/our-products'>View All Products</a>\n                                            )}\n                                        </div>\n                                    </div>\n                                    {products && products.map( product => (\n                                        <ProductDisplay key={product._id} product={product}/>\n                                    ))}\n                                </div>\n                            </div>\n                        </section>\n\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )} \n                        \n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default Products;\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/NewProduct.js",["285"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\n\nconst NewProduct = ( { history } ) => {\n    \n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [images, setImages] = useState([]);\n    const [category, setCategory] = useState('');\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        ' - ',\n        'Category1',\n        'Category2',\n        'Category3',\n        'Category4',\n        'Category5',\n        'Category6',\n        'Category7'\n    ]\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully.')\n\n            dispatch({\n                type: NEW_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('category', category);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        });\n\n        dispatch(newProduct(formData));\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if(reader.readyState === 2){\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <Fragment>\n                    <div className=\"login-clean\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px'}}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\n                            <h2 className=\"sr-only\">New Product</h2>\n                            <div className=\"div-forgot-password\">\n                                <h3 className=\"forgot-password-heading\">New Product</h3>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Name</h6>\n                                <textarea \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    name=\"product_name\"\n                                    value={name}\n                                    style={{width: '100%'}}\n                                    onChange={(e) => setName(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Description</h6>\n                                <textarea\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    name=\"product_name\"\n                                    style={{width: '100%', height: '150px'}}\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"category\" \n                                        className=\"product-dropdown\" \n                                        id=\"category\"\n                                        value={category}\n                                        onChange={(e) => setCategory(e.target.value)}\n                                    >\n                                        {categories.map(category => (\n                                            <option key={category} value={category}>{category}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Images</h6>\n                                <input \n                                    type=\"file\" \n                                    name=\"product_images\" \n                                    onChange={onChange}\n                                    multiple\n                                />\n                            </div>\n                            \n                            {imagesPreview.map(img => (\n                                <img \n                                    src={img} \n                                    key={img} \n                                    alt='Images Preview'\n                                    className='mt-3 mr-2' \n                                    width='55' \n                                    height='52'\n                                />\n                            ))}\n\n                            <div className=\"form-group\">\n                                    <button \n                                    className=\"btn btn-primary btn-block\" \n                                    type=\"submit\"\n                                    disabled={loading ? true : false}\n                                >\n                                    Create\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Home.js",["286","287","288","289","290","291","292","293"],"import React, { Fragment, useEffect } from 'react'\nimport '../css/styles.css'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomeDetails, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, homePage } = useSelector(state => state.homeDetails)\n\n    let titleBackground, servicesBackground, productImageLeft, productImageRight = \"\"\n    \n    if(homePage.titleBackground){\n        titleBackground = homePage.titleBackground.url\n    } \n\n    if(homePage.servicesBackground){\n        servicesBackground = homePage.servicesBackground.url\n    } \n\n    if(homePage.productImageLeft){\n        productImageLeft = homePage.productImageLeft.url\n    } \n\n    if(homePage.productImageRight){\n        productImageRight = homePage.productImageRight.url\n    }\n\n    useEffect(() => {\n        dispatch(getHomeDetails())\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <section className=\"section1 welcome\" style={{height: \"100%\", width: \"100%\"}}>\n                            <div\n                                className=\"welcome-container\"\n                                style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                <img className=\"agile-logo-small\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\" alt=\"company logo\"/>\n                                <h1 className=\"agile-name font-weight-bold\">AGILE TECHNODYNAMICS</h1>\n                            </div>\n                        </section>\n                        <div className=\"row\">\n                            <div className=\"col-md-auto description-container\">\n                                <div>\n                                    <h1 className=\"font-weight-bold\">Our Products</h1>\n                                    <h6 className=\"product-description\">{homePage.productDescription}&nbsp;</h6>\n                                </div>\n                                <Link to=\"/our-products\">See Products&nbsp;<i className=\"fa fa-angle-right\"></i></Link>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\"}}></div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\"}}></div>\n                            </div>\n                        </div>\n                        <div \n                            className=\"row our-services our-services-column description-container our-services-photo\" \n                            style={{\n                                background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                backgroundSize: \"cover\", \n                                backgroundPosition: \"right\"\n                                }}\n                            >\n                            <div className=\"col\">\n                                <div className=\"div-our-services\">\n                                    <h1 className=\"our-services font-weight-bold\">Our Services</h1>\n                                    <h6 className=\"description\">{homePage.servicesDescription}&nbsp;</h6>\n                                    <Link className=\"services-link\" to=\"/our-services\">See Services&nbsp;<i className=\"fa fa-angle-right\"></i></Link>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateProduct.js",["294"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateProduct = ( { match, history } ) => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [images, setImages] = useState([]);\n    const [category, setCategory] = useState('');\n    const [imagesPreview, setImagesPreview] = useState([])\n    const [oldImages, setOldImages] = useState([]);\n    \n    const categories = [\n        'Category1',\n        'Category2',\n        'Category3',\n        'Category4',\n        'Category5',\n        'Category6',\n        'Category7'\n    ]\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\n\n    const productId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n\n        if(product && product._id !== productId) {\n            dispatch(getProductDetails(productId))\n        }\n        else { \n            setName(product.name)\n            setDescription(product.description)\n            setCategory(product.category)\n            setOldImages(product.images)\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated successfully.')\n\n            dispatch({\n                type: UPDATE_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, product, productId, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('category', category);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        });\n\n        dispatch(updateProduct(product._id, formData));\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n        setOldImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if(reader.readyState === 2){\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <div className=\"login-clean\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px'}}>\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                            </a>\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\n                                <h2 className=\"sr-only\">Update Product</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Product</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"product_name\"\n                                        value={name}\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"product_name\"\n                                        value={description}\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Category</h6>\n                                    <div className=\"dropdown show\">\n                                        <select \n                                            name=\"category\" \n                                            className=\"product-dropdown\" \n                                            id=\"category\"\n                                            value={category}\n                                            onChange={(e) => setCategory(e.target.value)}\n                                        >\n                                            {categories.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Images</h6>\n                                    <input \n                                        type=\"file\" \n                                        name=\"product_images\" \n                                        onChange={onChange}\n                                        multiple\n                                    />\n                                </div>\n                                \n                                {oldImages && oldImages.map(img => (\n                                    <img \n                                        className='mt-3 mr-2'\n                                        src={img.url}\n                                        alt={img.url}\n                                        key={img}\n                                        width='55' \n                                        height='52'\n                                    />\n\n                                ))}\n\n                                {imagesPreview.map(img => (\n                                    <img \n                                        src={img} \n                                        key={img} \n                                        alt='Images Preview'\n                                        className='mt-3 mr-2' \n                                        width='110' \n                                        height='104'\n                                    />\n                                ))}\n\n                                <div className=\"form-group\">\n                                        <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                        disabled={loading ? true : false}\n                                    >\n                                        Update Product\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateHome.js",["295","296","297"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateHome = ({history}) => {\n    \n    const [productDescription, setProductDescription] = useState('')\n    const [servicesDescription, setServicesDescription] = useState('')\n    const [titleBackground, setTitleBackground] = useState('')\n    const [servicesBackground, setServicesBackground] = useState('')\n    const [productImageLeft, setProductImageLeft] = useState('')\n    const [productImageRight, setProductImageRight] = useState('')\n    \n    //image previews\n    const [titleBgPreview, setTitleBgPreview] = useState('')\n    const [servicesBgPreview, setServicesBgPreview] = useState('')\n    const [prodImgLeftPreview, setProdImgLeftPreview] = useState('')\n    const [prodImgRightPreview, setProdImgRightPreview] = useState('')\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, homePage } = useSelector(state => state.homeDetails) \n    const { loading: updateLoading, error: updateError, isUpdated } = useSelector(state => state.website)\n\n    let var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight = \"\"\n\n    if(homePage.titleBackground){\n        var_titleBackground = homePage.titleBackground.url\n    } \n\n    if(homePage.servicesBackground){\n        var_servicesBackground = homePage.servicesBackground.url\n    } \n\n    if(homePage.productImageLeft){\n        var_productImageLeft = homePage.productImageLeft.url\n    } \n\n    if(homePage.productImageRight){\n        var_productImageRight = homePage.productImageRight.url\n    }\n    \n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n\n        dispatch(getHomeDetails())\n\n        if(homePage){\n            setProductDescription(homePage.productDescription)\n            setServicesDescription(homePage.servicesDescription)\n            setTitleBgPreview(var_titleBackground)\n            setServicesBgPreview(var_servicesBackground)\n            setProdImgLeftPreview(var_productImageLeft)\n            setProdImgRightPreview(var_productImageRight)\n        }\n\n        if(error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if(updateError) {\n            alert.error(updateError);\n\n            history.push('/dashboard')\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated) {\n            history.push('/dashboard')\n            alert.success('Home updated successfully.');\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, updateError, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('productDescription', productDescription);\n        formData.set('servicesDescription', servicesDescription);\n        formData.set('titleBackground', titleBackground);\n        formData.set('servicesBackground', servicesBackground);\n        formData.set('productImageLeft', productImageLeft);\n        formData.set('productImageRight', productImageRight);\n\n        dispatch(updateHome(formData));\n    }\n\n    const changeTitleBg = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setTitleBgPreview(reader.result)\n                setTitleBackground(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n    \n    const changeProdImgLeft = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setProdImgLeftPreview(reader.result)\n                setProductImageLeft(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    const changeProdImgRight = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setProdImgRightPreview(reader.result)\n                setProductImageRight(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    const changeServicesBg = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setServicesBgPreview(reader.result)\n                setServicesBackground(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Home'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    {loading ? <Loader/> : (\n                        <Fragment>\n                            <div className=\"login-clean\">\n                                <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px'}}>\n                                    <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                                </a>\n                                <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{maxWidth: '500px'}}>\n                                    <h2 className=\"sr-only\">Update Homepage</h2>\n                                    <div className=\"div-forgot-password\">\n                                        <h3 className=\"forgot-password-heading\">Update Homepage </h3>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Main Background</h6>\n                                        <figure className='mr-3 item-rtl'>\n                                            <img \n                                                src={titleBgPreview}\n                                                className='small-avatar'\n                                                alt='Main Background Preview'\n                                            />\n                                        </figure>\n                                        <input \n                                            type=\"file\" \n                                            id=\"titleBackground\" \n                                            name=\"titleBackground\" \n                                            accept=\"images/*\"\n                                            onChange={changeTitleBg}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Product Description</h6>\n                                        <textarea \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"productDescription\" \n                                            name=\"productDescription\" \n                                            placeholder={productDescription}\n                                            value={productDescription}\n                                            style={{width: '100%', height: '150px'}}\n                                            onChange={(e) => setProductDescription(e.target.value)}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Product Image (Left)</h6>\n                                        <figure className='mr-3 item-rtl'>\n                                            <img \n                                                src={prodImgLeftPreview}\n                                                className='small-avatar'\n                                                alt='Product Image Left Preview'\n                                            />\n                                        </figure>\n                                        <input \n                                            type=\"file\" \n                                            id=\"productImageLeft\" \n                                            name=\"productImageLeft\" \n                                            accept=\"images/*\"\n                                            onChange={changeProdImgLeft}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Product Image (Right)</h6>\n                                        <figure className='mr-3 item-rtl'>\n                                            <img \n                                                src={prodImgRightPreview}\n                                                className='small-avatar'\n                                                alt='Avatar Preview'\n                                            />\n                                        </figure>\n                                        <input \n                                            type=\"file\" \n                                            id=\"productImageRight\" \n                                            name=\"productImageRight\" \n                                            accept=\"images/*\"\n                                            onChange={changeProdImgRight}\n                                        />\n                                    </div>\n                                    \n                                    <div className=\"form-group\">\n                                        <h6>Services Description</h6>\n                                        <textarea \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"servicesDescription\" \n                                            name=\"servicesDescription\" \n                                            value={servicesDescription}\n                                            style={{width: '100%', height: '150px'}}\n                                            onChange={(e) => setServicesDescription(e.target.value)}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Services Background</h6>\n                                        <figure className='mr-3 item-rtl'>\n                                            <img \n                                                src={servicesBgPreview}\n                                                className='small-avatar'\n                                                alt='Avatar Preview'\n                                            />\n                                        </figure>\n                                        <input \n                                            type=\"file\" \n                                            id=\"servicesBackground\" \n                                            name=\"servicesBackground\" \n                                            accept=\"images/*\"\n                                            onChange={changeServicesBg}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <button \n                                            className=\"btn btn-primary btn-block\" \n                                            type=\"submit\"\n                                            disabled={updateLoading ? true : false}\n                                        >\n                                            Update Home\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </Fragment>\n                    )}\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateHome\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateFooter.js",["298","299","300"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateFooter, getFooterDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateFooter = ({history}) => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const [footerTitle, setFooterTitle] = useState('')\n    const [footerDescription, setFooterDescription] = useState('')\n    const [addressInfo, setAddressInfo] = useState('')\n    const [phoneInfo, setPhoneInfo] = useState('')\n    const [cellphoneInfo, setCellphoneInfo] = useState('')\n    const [emailInfo, setEmailInfo] = useState('')\n\n    const { error, footerInfo } = useSelector(state => state.footerDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\n\n    const [isToggled, setToggled] = useState('false')\n\n    useEffect(() => {\n        if(footerInfo){\n            setFooterTitle(footerInfo.footerTitle)\n            setFooterDescription(footerInfo.footerDescription)\n            setAddressInfo(footerInfo.addressInfo)\n            setPhoneInfo(footerInfo.phoneInfo)\n            setCellphoneInfo(footerInfo.cellphoneInfo)\n            setEmailInfo(footerInfo.emailInfo)\n        } \n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n        \n        if(isUpdated) {\n            history.push('/admin/settings');\n            alert.success('Footer updated successfully.')\n\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, updateError, isUpdated])\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('footerTitle', footerTitle);\n        formData.set('footerDescription', footerDescription);\n        formData.set('addressInfo', addressInfo);\n        formData.set('phoneInfo', phoneInfo);\n        formData.set('cellphoneInfo', cellphoneInfo);\n        formData.set('emailInfo', emailInfo);\n\n        dispatch(updateFooter(formData));\n    }\n\n    return (<Fragment>\n        <MetaData title={'Update Footer'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <Fragment>\n                        <div className=\"login-clean\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px'}}>\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                            </a>\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\n                                <h2 className=\"sr-only\">Update Footer</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Footer</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Footer Title</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"footerTitle\"\n                                        value={footerTitle}\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setFooterTitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Footer Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"footerDescription\"\n                                        value={footerDescription}\n                                        style={{width: '100%', height: '250px'}}\n                                        onChange={(e) => setFooterDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Address Info</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"addressInfo\"\n                                        value={addressInfo}\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setAddressInfo(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Phone Info</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"phoneInfo\"\n                                        value={phoneInfo}\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setPhoneInfo(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Cellphone Info</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"cellphoneInfo\"\n                                        value={cellphoneInfo}\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setCellphoneInfo(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Email Info</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"emailInfo\"\n                                        value={emailInfo}\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setEmailInfo(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                        <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                        disabled={loading ? true : false}\n                                    >\n                                        Update Footer\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n    </Fragment>\n    )\n}\n\nexport default UpdateFooter","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/MissionVision.js",["301","302"],"import React, { Fragment } from 'react'\nimport { Markup } from 'interweave'\n\nconst MissionVision = ({ about }) => {\n    return (\n        <div>\n            {(about._id == '602905ed5135781774314621' || about._id == '602905e55135781774314620') ? (\n            <Fragment>\n                <h1>{about.title}</h1>\n                <hr />\n                <p className=\"text-justify\">\n                    <Markup content={about.description} />\n                </p>\n            </Fragment>) :\n            (<Fragment></Fragment>)}\n        </div>\n    )\n}\n\nexport default MissionVision\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDisplay.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/dashboardReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/dashboardConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateProfile.js",["303"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateProfile, loadUser, clearErrors } from './../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user);\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        if(user) {\n            setName(user.name);\n            setEmail(user.email);\n            setContactNumber(user.contactNumber);\n            setAvatarPreview(user.avatar.url);\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n\n        if(isUpdated){\n            alert.success('User updated successfully');\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, user, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('contactNumber', contactNumber);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData));\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                        <hr/>\n                        <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                        <hr/>\n                        <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler} style={{color: 'red'}}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <div className=\"container\">\n                            <div className=\"main-body\">\n                                <div className=\"row gutters-sm\">\n                                    <div className=\"col-md-4 mb-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"150\"/>\n                                                    <div className=\"mt-3\">\n                                                    <hr/>\n                                                    <input \n                                                        type=\"file\" \n                                                        id=\"avatar\" \n                                                        name=\"avatar\" \n                                                        accept=\"images/*\"\n                                                        onChange={onChange}\n                                                        style={{width: '90%'}}\n                                                    />\n                                                    <br/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <div className=\"card mb-3\">\n                                            <div className=\"card-body\">\n                                                <form method=\"post\" onSubmit={submitHandler}>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Full Name</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"text\" \n                                                            className=\"form-control\" \n                                                            name=\"name\"\n                                                            value={name}\n                                                            onChange={(e) => setName(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Email</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"email\" \n                                                            className=\"form-control\" \n                                                            name=\"email\"\n                                                            value={email}\n                                                            onChange={(e) => setEmail(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Phone</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"text\" \n                                                            className=\"form-control\" \n                                                            name=\"contactNumber\"\n                                                            value={contactNumber}\n                                                            onChange={(e) => setContactNumber(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Address</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        Bay Area, San Francisco, CA\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <br/>\n                                                        <br/>\n                                                        <button\n                                                            className=\"btn btn-primary btn-block\"\n                                                            type=\"submit\"\n                                                            disabled={ loading ? true : false}\n                                                        >Update Profile</button>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>    \n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Profile.js",["304"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport MetaData from './../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/profile.css'\n\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst Profile = () => {\n    \n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { user, loading } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'My Profile'} />\n                    <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\n                            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/quotations\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                    <hr/>\n                                    <li className=\"text-danger\" onClick={logoutHandler} style={{color: 'red'}}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                                    </a>\n                                    <div className=\"container\">\n                                        <div className=\"main-body\">\n                                            <div className=\"row gutters-sm\">\n                                                <div className=\"col-md-4 mb-3\">\n                                                    <div className=\"card\">\n                                                        <div className=\"card-body\">\n                                                            <div className=\"d-flex flex-column align-items-center text-center\">\n                                                                <img src={user.avatar.url} alt=\"Admin\" className=\"rounded-circle\" width=\"150\"/>\n                                                                <div className=\"mt-3\">\n                                                                <h4>{user.name}</h4>\n                                                                <p className=\"text-secondary mb-1\">{user.role}</p>\n                                                                <Link className=\"btn btn-dark btn-sm ml-3 mt-5\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\n                                                                <Link className=\"btn btn-dark btn-sm ml-3 mt-5\" type=\"button\" to=\"/password/update\">Change Password</Link>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-8\">\n                                                    <div className=\"card mb-3\">\n                                                        <div className=\"card-body\">\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                <h6 className=\"mb-0\">Full Name</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                {user.name}\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                <h6 className=\"mb-0\">Email</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                {user.email}\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                <h6 className=\"mb-0\">Phone</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                {user.contactNumber}\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                <h6 className=\"mb-0\">Address</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                Bay Area, San Francisco, CA\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>    \n                                </div>\n                            </div>\n                        </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdatePassword.js",[],{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","severity":1,"message":"310","line":55,"column":20,"nodeType":"311","messageId":"312","endLine":55,"endColumn":35},{"ruleId":"309","severity":1,"message":"313","line":55,"column":37,"nodeType":"311","messageId":"312","endLine":55,"endColumn":41},{"ruleId":"309","severity":1,"message":"314","line":25,"column":9,"nodeType":"311","messageId":"312","endLine":25,"endColumn":19},{"ruleId":"309","severity":1,"message":"315","line":26,"column":9,"nodeType":"311","messageId":"312","endLine":26,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":97,"column":29,"nodeType":"318","endLine":97,"endColumn":141},{"ruleId":"316","severity":1,"message":"317","line":139,"column":25,"nodeType":"318","endLine":139,"endColumn":107},{"ruleId":"316","severity":1,"message":"317","line":136,"column":25,"nodeType":"318","endLine":136,"endColumn":107},{"ruleId":"309","severity":1,"message":"319","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":14},{"ruleId":"316","severity":1,"message":"317","line":50,"column":37,"nodeType":"318","endLine":50,"endColumn":119},{"ruleId":"316","severity":1,"message":"320","line":88,"column":49,"nodeType":"318","endLine":88,"endColumn":61},{"ruleId":"316","severity":1,"message":"320","line":98,"column":49,"nodeType":"318","endLine":98,"endColumn":61},{"ruleId":"316","severity":1,"message":"320","line":108,"column":49,"nodeType":"318","endLine":108,"endColumn":61},{"ruleId":"316","severity":1,"message":"320","line":30,"column":25,"nodeType":"318","endLine":30,"endColumn":62},{"ruleId":"316","severity":1,"message":"320","line":43,"column":67,"nodeType":"318","endLine":43,"endColumn":161},{"ruleId":"316","severity":1,"message":"317","line":134,"column":25,"nodeType":"318","endLine":134,"endColumn":107},{"ruleId":"321","severity":1,"message":"322","line":66,"column":8,"nodeType":"323","endLine":66,"endColumn":76,"suggestions":"324"},{"ruleId":"325","severity":1,"message":"326","line":156,"column":36,"nodeType":"327","messageId":"328","endLine":156,"endColumn":38},{"ruleId":"316","severity":1,"message":"317","line":181,"column":25,"nodeType":"318","endLine":181,"endColumn":107},{"ruleId":"309","severity":1,"message":"329","line":23,"column":22,"nodeType":"311","messageId":"312","endLine":23,"endColumn":30},{"ruleId":"316","severity":1,"message":"317","line":112,"column":37,"nodeType":"318","endLine":112,"endColumn":119},{"ruleId":"316","severity":1,"message":"317","line":109,"column":25,"nodeType":"318","endLine":109,"endColumn":107},{"ruleId":"325","severity":1,"message":"326","line":68,"column":31,"nodeType":"327","messageId":"328","endLine":68,"endColumn":33},{"ruleId":"316","severity":1,"message":"317","line":125,"column":25,"nodeType":"318","endLine":125,"endColumn":107},{"ruleId":"316","severity":1,"message":"317","line":84,"column":21,"nodeType":"318","endLine":84,"endColumn":103},{"ruleId":"316","severity":1,"message":"317","line":138,"column":25,"nodeType":"318","endLine":138,"endColumn":107},{"ruleId":"316","severity":1,"message":"317","line":70,"column":61,"nodeType":"318","endLine":70,"endColumn":64},{"ruleId":"316","severity":1,"message":"317","line":121,"column":25,"nodeType":"318","endLine":121,"endColumn":137},{"ruleId":"330","severity":1,"message":"331","line":58,"column":140,"nodeType":"327","messageId":"332","endLine":58,"endColumn":141},{"ruleId":"330","severity":1,"message":"331","line":58,"column":161,"nodeType":"327","messageId":"332","endLine":58,"endColumn":162},{"ruleId":"330","severity":1,"message":"331","line":76,"column":84,"nodeType":"327","messageId":"332","endLine":76,"endColumn":85},{"ruleId":"330","severity":1,"message":"331","line":76,"column":106,"nodeType":"327","messageId":"332","endLine":76,"endColumn":107},{"ruleId":"330","severity":1,"message":"331","line":79,"column":84,"nodeType":"327","messageId":"332","endLine":79,"endColumn":85},{"ruleId":"330","severity":1,"message":"331","line":79,"column":107,"nodeType":"327","messageId":"332","endLine":79,"endColumn":108},{"ruleId":"330","severity":1,"message":"331","line":85,"column":121,"nodeType":"327","messageId":"332","endLine":85,"endColumn":122},{"ruleId":"330","severity":1,"message":"331","line":85,"column":145,"nodeType":"327","messageId":"332","endLine":85,"endColumn":146},{"ruleId":"316","severity":1,"message":"317","line":140,"column":29,"nodeType":"318","endLine":140,"endColumn":141},{"ruleId":"321","severity":1,"message":"333","line":97,"column":8,"nodeType":"323","endLine":97,"endColumn":65,"suggestions":"334"},{"ruleId":"316","severity":1,"message":"317","line":187,"column":33,"nodeType":"318","endLine":187,"endColumn":145},{"ruleId":"335","severity":1,"message":"336","line":228,"column":45,"nodeType":"318","endLine":232,"endColumn":47},{"ruleId":"309","severity":1,"message":"337","line":9,"column":24,"nodeType":"311","messageId":"312","endLine":9,"endColumn":40},{"ruleId":"321","severity":1,"message":"338","line":62,"column":8,"nodeType":"323","endLine":62,"endColumn":65,"suggestions":"339"},{"ruleId":"316","severity":1,"message":"317","line":102,"column":29,"nodeType":"318","endLine":102,"endColumn":141},{"ruleId":"325","severity":1,"message":"326","line":7,"column":25,"nodeType":"327","messageId":"328","endLine":7,"endColumn":27},{"ruleId":"325","severity":1,"message":"326","line":7,"column":68,"nodeType":"327","messageId":"328","endLine":7,"endColumn":70},{"ruleId":"316","severity":1,"message":"317","line":120,"column":25,"nodeType":"318","endLine":120,"endColumn":107},{"ruleId":"316","severity":1,"message":"317","line":62,"column":37,"nodeType":"318","endLine":62,"endColumn":119},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'errorCount' is assigned a value but never used.","'loopCount' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Loader' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.","ArrayExpression",["342"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'products' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'homePage', 'var_productImageLeft', 'var_productImageRight', 'var_servicesBackground', and 'var_titleBackground'. Either include them or remove the dependency array.",["343"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'getFooterDetails' is defined but never used.","React Hook useEffect has a missing dependency: 'footerInfo'. Either include it or remove the dependency array.",["344"],"no-global-assign","no-unsafe-negation",{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"351","text":"352"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",{"range":"353","text":"354"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, footerInfo]",{"range":"355","text":"356"},[1947,2015],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",[3264,3321],"[dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",[2141,2198],"[dispatch, alert, error, history, updateError, isUpdated, footerInfo]"]