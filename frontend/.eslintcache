[{"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\index.js":"1","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\store.js":"2","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\App.js":"3","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\productReducers.js":"4","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\websiteReducers.js":"5","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\inquiryReducers.js":"6","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\userReducers.js":"7","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Products.js":"8","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Home.js":"9","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutMissionVision.js":"10","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutCompany.js":"11","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutHistory.js":"12","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Services.js":"13","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutScope.js":"14","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\ConfirmationPage.js":"15","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Header.js":"16","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\EmailSent.js":"17","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Footer.js":"18","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Contact.js":"19","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutObjectives.js":"20","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateHome.js":"21","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListInquiries.js":"22","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListTrash.js":"23","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListQuotations.js":"24","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListOthers.js":"25","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDetails.js":"26","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListArchives.js":"27","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateProduct.js":"28","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\NewProduct.js":"29","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Register.js":"30","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdatePassword.js":"31","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Login.js":"32","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\ForgotPassword.js":"33","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Profile.js":"34","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\route\\ProtectedRoute.js":"35","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdateProfile.js":"36","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\NewPassword.js":"37","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateAbout.js":"38","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListAbout.js":"39","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Dashboard.js":"40","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\userActions.js":"41","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateInquiry.js":"42","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ProductsList.js":"43","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\MetaData.js":"44","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\productActions.js":"45","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDisplay.js":"46","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Loader.js":"47","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\websiteActions.js":"48","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\inquiryActions.js":"49","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Sidebar.js":"50","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\productConstants.js":"51","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\userConstants.js":"52","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\websiteConstants.js":"53","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\inquiryConstants.js":"54","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\MissionVision.js":"55"},{"size":609,"mtime":1611641854875,"results":"56","hashOfConfig":"57"},{"size":1511,"mtime":1613395841758,"results":"58","hashOfConfig":"57"},{"size":5412,"mtime":1613395841654,"results":"59","hashOfConfig":"57"},{"size":4729,"mtime":1613201379234,"results":"60","hashOfConfig":"57"},{"size":3796,"mtime":1613395841748,"results":"61","hashOfConfig":"57"},{"size":4171,"mtime":1613471388834,"results":"62","hashOfConfig":"57"},{"size":4372,"mtime":1613471388846,"results":"63","hashOfConfig":"57"},{"size":4671,"mtime":1612925533814,"results":"64","hashOfConfig":"57"},{"size":4674,"mtime":1613305194290,"results":"65","hashOfConfig":"57"},{"size":2334,"mtime":1613471388717,"results":"66","hashOfConfig":"57"},{"size":2223,"mtime":1613471388703,"results":"67","hashOfConfig":"57"},{"size":2303,"mtime":1613471388711,"results":"68","hashOfConfig":"57"},{"size":4113,"mtime":1612925533828,"results":"69","hashOfConfig":"57"},{"size":2289,"mtime":1613471388742,"results":"70","hashOfConfig":"57"},{"size":1066,"mtime":1612925533763,"results":"71","hashOfConfig":"57"},{"size":4344,"mtime":1612925533936,"results":"72","hashOfConfig":"57"},{"size":1050,"mtime":1612925533784,"results":"73","hashOfConfig":"57"},{"size":4121,"mtime":1612925533916,"results":"74","hashOfConfig":"57"},{"size":8262,"mtime":1613471388755,"results":"75","hashOfConfig":"57"},{"size":2324,"mtime":1613471388731,"results":"76","hashOfConfig":"57"},{"size":11662,"mtime":1613395841715,"results":"77","hashOfConfig":"57"},{"size":5045,"mtime":1613484658763,"results":"78","hashOfConfig":"57"},{"size":5306,"mtime":1613288915415,"results":"79","hashOfConfig":"57"},{"size":5032,"mtime":1613484694756,"results":"80","hashOfConfig":"57"},{"size":5010,"mtime":1613484678418,"results":"81","hashOfConfig":"57"},{"size":2410,"mtime":1613472195716,"results":"82","hashOfConfig":"57"},{"size":4911,"mtime":1613484646000,"results":"83","hashOfConfig":"57"},{"size":7964,"mtime":1613201379204,"results":"84","hashOfConfig":"57"},{"size":6699,"mtime":1613201379187,"results":"85","hashOfConfig":"57"},{"size":7054,"mtime":1613471388812,"results":"86","hashOfConfig":"57"},{"size":3135,"mtime":1612925533999,"results":"87","hashOfConfig":"57"},{"size":2758,"mtime":1612925533987,"results":"88","hashOfConfig":"57"},{"size":2332,"mtime":1612925533980,"results":"89","hashOfConfig":"57"},{"size":1949,"mtime":1612925533993,"results":"90","hashOfConfig":"57"},{"size":953,"mtime":1612925533973,"results":"91","hashOfConfig":"57"},{"size":5142,"mtime":1612925534005,"results":"92","hashOfConfig":"57"},{"size":2908,"mtime":1612781583507,"results":"93","hashOfConfig":"57"},{"size":4178,"mtime":1613471388801,"results":"94","hashOfConfig":"57"},{"size":3214,"mtime":1613471388791,"results":"95","hashOfConfig":"57"},{"size":3047,"mtime":1613471388767,"results":"96","hashOfConfig":"57"},{"size":5552,"mtime":1612847822105,"results":"97","hashOfConfig":"57"},{"size":5543,"mtime":1613480302120,"results":"98","hashOfConfig":"57"},{"size":4199,"mtime":1613480302114,"results":"99","hashOfConfig":"57"},{"size":283,"mtime":1611641854863,"results":"100","hashOfConfig":"57"},{"size":4354,"mtime":1613201379121,"results":"101","hashOfConfig":"57"},{"size":503,"mtime":1612925533959,"results":"102","hashOfConfig":"57"},{"size":170,"mtime":1611641854862,"results":"103","hashOfConfig":"57"},{"size":5829,"mtime":1613395841659,"results":"104","hashOfConfig":"57"},{"size":3482,"mtime":1613201379110,"results":"105","hashOfConfig":"57"},{"size":3061,"mtime":1613395841700,"results":"106","hashOfConfig":"57"},{"size":1320,"mtime":1612847822177,"results":"107","hashOfConfig":"57"},{"size":1483,"mtime":1612847822178,"results":"108","hashOfConfig":"57"},{"size":1062,"mtime":1613395841741,"results":"109","hashOfConfig":"57"},{"size":1100,"mtime":1613471388825,"results":"110","hashOfConfig":"57"},{"size":511,"mtime":1613395841683,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1ep5qhl",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"114"},"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\index.js",[],["232","233"],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\store.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\App.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\websiteReducers.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\inquiryReducers.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Products.js",["234"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\n\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\n\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setCategory] = useState('');\r\n\r\n    const categories = [\r\n        'Category1',\r\n        'Category2',\r\n        'Category3',\r\n        'Category4',\r\n        'Category5',\r\n        'Category6',\r\n        'Category7'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category));\r\n    }, [dispatch, alert, error, currentPage, category]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\">\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {categories.map( category => (\r\n                                                    \r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setCategory(category)}}>\r\n                                                            <a>{category}</a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {resPerPage >= count && (\r\n                                                <a href='/our-products'>View All Products</a>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Home.js",["235","236","237","238","239","240","241","242"],"import React, { Fragment, useEffect } from 'react'\r\nimport '../css/styles.css'\r\nimport MetaData from './layout/MetaData'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getHomeDetails, clearErrors } from '../actions/websiteActions'\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, homePage } = useSelector(state => state.homeDetails)\r\n\r\n    let titleBackground, servicesBackground, productImageLeft, productImageRight = \"\"\r\n    \r\n    if(homePage.titleBackground){\r\n        titleBackground = homePage.titleBackground.url\r\n    } \r\n\r\n    if(homePage.servicesBackground){\r\n        servicesBackground = homePage.servicesBackground.url\r\n    } \r\n\r\n    if(homePage.productImageLeft){\r\n        productImageLeft = homePage.productImageLeft.url\r\n    } \r\n\r\n    if(homePage.productImageRight){\r\n        productImageRight = homePage.productImageRight.url\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomeDetails())\r\n        \r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={'Home'}/>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <section className=\"section1 welcome\" style={{height: \"100%\", width: \"100%\"}}>\r\n                            <div\r\n                                className=\"welcome-container\"\r\n                                style={{\r\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \r\n                                    backgroundSize: \"cover\", \r\n                                    width: \"100%\", \r\n                                    height: \"100%\"}\r\n                                }>\r\n                                <img className=\"agile-logo-small\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\" alt=\"company logo\"/>\r\n                                <h1 className=\"agile-name font-weight-bold\">AGILE TECHNODYNAMICS</h1>\r\n                            </div>\r\n                        </section>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-auto description-container\">\r\n                                <div>\r\n                                    <h1 className=\"font-weight-bold\">Our Products</h1>\r\n                                    <h6 className=\"product-description\">{homePage.productDescription}&nbsp;</h6>\r\n                                </div>\r\n                                <a href=\"product.html\">See Products&nbsp;<i className=\"fa fa-angle-right\"></i></a>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\"}}></div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\"}}></div>\r\n                            </div>\r\n                        </div>\r\n                        <div \r\n                            className=\"row our-services our-services-column description-container our-services-photo\" \r\n                            style={{\r\n                                background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \r\n                                backgroundSize: \"cover\", \r\n                                backgroundPosition: \"right\"\r\n                                }}\r\n                            >\r\n                            <div className=\"col\">\r\n                                <div className=\"div-our-services\">\r\n                                    <h1 className=\"our-services font-weight-bold\">Our Services</h1>\r\n                                    <h6 className=\"description\">{homePage.servicesDescription}&nbsp;</h6><a className=\"services-link\" href=\"services.html\">See Services&nbsp;<i className=\"fa fa-angle-right\"></i></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutMissionVision.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutCompany.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutHistory.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Services.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutScope.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\ConfirmationPage.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Header.js",["243","244","245"],"import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport '../../css/styles.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Header = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top\">\r\n            <div className=\"container\">\r\n                <button data-toggle=\"collapse\" data-target=\"#navcol-1\" className=\"navbar-toggler\">\r\n                    <span className=\"sr-only\">Toggle navigation</span>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n            <Link to=\"/\">\r\n                <img className=\"agile-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\r\n            </Link>\r\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\r\n                    <ul className=\"nav navbar-nav flex-grow-1 justify-content-between\">\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"#\"></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-company\"><strong>About Us</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-products\"><strong>Products</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\r\n                        {user ? (\r\n                                <div className=\"ml-4 dropdown d-inline\">\r\n                                <Link\r\n                                    className=\"btn dropdown-toggle text-black mr-4\"\r\n                                    type=\"button\"\r\n                                    id=\"dropDownMenuButton\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\">\r\n                                        {user && user.name}\r\n                                    </Link>\r\n                                    <div className=\"dropdown-menu\" aria-aria-labelledby=\"dropDownMenuButton\">\r\n                                        <Link className=\"dropdown-item\" to=\"/dashboard\">\r\n                                            Dashboard\r\n                                        </Link>\r\n                                        <Link className=\"dropdown-item\" to=\"/me\">\r\n                                                My Profile\r\n                                            </Link>\r\n                                        {user && user.role !== 'admin' ? (\r\n                                            <Link className=\"dropdown-item\" to=\"/register\">\r\n                                                Register New Users\r\n                                            </Link>\r\n                                        ) : (\r\n                                            <Link></Link>\r\n                                        )}\r\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                            Log out\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            ) : !loading && <Link to=\"/login\">\r\n                                <div></div>\r\n                            </Link>}\r\n                    </ul> \r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\EmailSent.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\Contact.js",["246","247"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from './layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { createInquiry, clearErrors } from './../actions/inquiryActions'\r\nimport { INQUIRY_RESET } from './../constants/inquiryConstants'\r\nimport '../css/contact.css'\r\n\r\nconst Contact = ( { history } ) => {\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [customerEmail, setCustomerEmail] = useState('');\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [concernType, setConcernType] = useState('');\r\n    const [customerMessage, setCustomerMessage] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { success, error, loading } = useSelector(state => state.newInquiry);\r\n\r\n    var errorCount = 0;\r\n    var loopCount = 0; \r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push('/confirmation')\r\n\r\n            dispatch({\r\n                type: INQUIRY_RESET\r\n            })\r\n        } \r\n\r\n        if(error){ //in reducer, error: true instead of error: action.payload\r\n            alert.error('Please complete the form.');\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, success, error, loading, alert, history])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('firstName', firstName);\r\n        formData.set('lastName', lastName);\r\n        formData.set('customerEmail', customerEmail);\r\n        formData.set('companyName', companyName);\r\n        formData.set('position', position);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('concernType', concernType);\r\n        formData.set('customerMessage', customerMessage);\r\n\r\n        dispatch(createInquiry(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Contact Us'}/>\r\n            <Fragment>\r\n                <form method='post' onSubmit={submitHandler} encType='application/json'>\r\n                    <div className=\"contact-container\">\r\n                        <div className=\"contact-header\">\r\n                            <h1 style={{textAlign: 'center'}}>Contact Us</h1>\r\n                        </div>\r\n                        <div className=\"labelname\">\r\n                            <label>Your Name</label>\r\n                        </div>\r\n                        <div className=\"firstname\">\r\n                            <input \r\n                                name=\"firstname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"First Name\" \r\n                                value={firstName}\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"lastname\">\r\n                            <input \r\n                                name=\"lastname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Last Name\" \r\n                                value={lastName}\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelcompany\">\r\n                            <label>Your Company Name</label>\r\n                        </div>\r\n                        <div className=\"companyname\">\r\n                            <input \r\n                                name=\"companyname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Company Name\" \r\n                                value={companyName}\r\n                                onChange={(e) => setCompanyName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelposition\">\r\n                            <label>Your Position in Company</label>\r\n                        </div>\r\n                        <div className=\"position\">\r\n                            <input \r\n                                name=\"position\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Position\" \r\n                                value={position}\r\n                                onChange={(e) => setPosition(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelemail\">\r\n                            <label>Your Email</label>\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <input \r\n                                name=\"email\" \r\n                                type=\"email\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Email\" \r\n                                value={customerEmail}\r\n                                onChange={(e) => setCustomerEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelcontact\">\r\n                            <label>Your Contact Number</label>\r\n                        </div>\r\n                        <div className=\"contact\">\r\n                            <input \r\n                                name=\"contactnumber\" \r\n                                type=\"tel\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"xxxx-xxx-xxxx\" \r\n                                pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\r\n                                value={contactNumber}\r\n                                onChange={(e) => setContactNumber(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelconcern\">\r\n                            <label>Your Concern Type</label>\r\n                        </div>\r\n                        <div className=\"concern\">\r\n                            <select \r\n                                name=\"concern\" \r\n                                className=\"concern-dropdown\" \r\n                                value={concernType}\r\n                                onChange={(e) => setConcernType(e.target.value)}\r\n                            >\r\n                                <option>         -        </option>\r\n                                <option value=\"Inquiry\">Inquiry</option>\r\n                                <option value=\"Appointment\">Appointment</option>\r\n                                <option value=\"Others\">Others</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"labelmessage\">\r\n                            <label>Your Message</label>\r\n                        </div>\r\n                        <div className=\"message\">\r\n                            <textarea \r\n                                name=\"message\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Message\" \r\n                                value={customerMessage}\r\n                                onChange={(e) => setCustomerMessage(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"submit\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                value=\"SUBMIT\" \r\n                                disabled={ loading ? true : false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Contact","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\AboutObjectives.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateHome.js",["248","249","250"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\r\n\r\nconst UpdateHome = ({history}) => {\r\n    \r\n    const [productDescription, setProductDescription] = useState('')\r\n    const [servicesDescription, setServicesDescription] = useState('')\r\n    const [titleBackground, setTitleBackground] = useState('')\r\n    const [servicesBackground, setServicesBackground] = useState('')\r\n    const [productImageLeft, setProductImageLeft] = useState('')\r\n    const [productImageRight, setProductImageRight] = useState('')\r\n    \r\n    //image previews\r\n    const [titleBgPreview, setTitleBgPreview] = useState('')\r\n    const [servicesBgPreview, setServicesBgPreview] = useState('')\r\n    const [prodImgLeftPreview, setProdImgLeftPreview] = useState('')\r\n    const [prodImgRightPreview, setProdImgRightPreview] = useState('')\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, loading, homePage } = useSelector(state => state.homeDetails) \r\n    const { loading: updateLoading, error: updateError, isUpdated } = useSelector(state => state.website)\r\n\r\n    let var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight = \"\"\r\n\r\n    if(homePage.titleBackground){\r\n        var_titleBackground = homePage.titleBackground.url\r\n    } \r\n\r\n    if(homePage.servicesBackground){\r\n        var_servicesBackground = homePage.servicesBackground.url\r\n    } \r\n\r\n    if(homePage.productImageLeft){\r\n        var_productImageLeft = homePage.productImageLeft.url\r\n    } \r\n\r\n    if(homePage.productImageRight){\r\n        var_productImageRight = homePage.productImageRight.url\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        dispatch(getHomeDetails())\r\n\r\n        if(homePage){\r\n            setProductDescription(homePage.productDescription)\r\n            setServicesDescription(homePage.servicesDescription)\r\n            setTitleBgPreview(var_titleBackground)\r\n            setServicesBgPreview(var_servicesBackground)\r\n            setProdImgLeftPreview(var_productImageLeft)\r\n            setProdImgRightPreview(var_productImageRight)\r\n        }\r\n\r\n        if(error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(updateError) {\r\n            alert.error(updateError);\r\n\r\n            history.push('/dashboard')\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/dashboard')\r\n            alert.success('Home updated successfully.');\r\n\r\n            dispatch({\r\n                type: UPDATE_HOME_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, updateError, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('productDescription', productDescription);\r\n        formData.set('servicesDescription', servicesDescription);\r\n        formData.set('titleBackground', titleBackground);\r\n        formData.set('servicesBackground', servicesBackground);\r\n        formData.set('productImageLeft', productImageLeft);\r\n        formData.set('productImageRight', productImageRight);\r\n\r\n        dispatch(updateHome(formData));\r\n    }\r\n\r\n    const changeTitleBg = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setTitleBgPreview(reader.result)\r\n                setTitleBackground(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    \r\n    const changeProdImgLeft = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setProdImgLeftPreview(reader.result)\r\n                setProductImageLeft(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    const changeProdImgRight = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setProdImgRightPreview(reader.result)\r\n                setProductImageRight(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    const changeServicesBg = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setServicesBgPreview(reader.result)\r\n                setServicesBackground(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Home'}/>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{width: '90%'}}>\r\n                                <h2 className=\"sr-only\">Update Homepage</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Homepage </h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Main Background</h6>\r\n                                    <figure className='mr-3 item-rtl'>\r\n                                        <img \r\n                                            src={titleBgPreview}\r\n                                            className='small-avatar'\r\n                                            alt='Main Background Preview'\r\n                                        />\r\n                                    </figure>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        id=\"titleBackground\" \r\n                                        name=\"titleBackground\" \r\n                                        accept=\"images/*\"\r\n                                        onChange={changeTitleBg}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Product Description</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"productDescription\" \r\n                                        name=\"productDescription\" \r\n                                        placeholder={productDescription}\r\n                                        value={productDescription}\r\n                                        onChange={(e) => setProductDescription(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Product Image (Left)</h6>\r\n                                    <figure className='mr-3 item-rtl'>\r\n                                        <img \r\n                                            src={prodImgLeftPreview}\r\n                                            className='small-avatar'\r\n                                            alt='Product Image Left Preview'\r\n                                        />\r\n                                    </figure>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        id=\"productImageLeft\" \r\n                                        name=\"productImageLeft\" \r\n                                        accept=\"images/*\"\r\n                                        onChange={changeProdImgLeft}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Product Image (Right)</h6>\r\n                                    <figure className='mr-3 item-rtl'>\r\n                                        <img \r\n                                            src={prodImgRightPreview}\r\n                                            className='small-avatar'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        id=\"productImageRight\" \r\n                                        name=\"productImageRight\" \r\n                                        accept=\"images/*\"\r\n                                        onChange={changeProdImgRight}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <h6>Services Description</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"servicesDescription\" \r\n                                        name=\"servicesDescription\" \r\n                                        value={servicesDescription}\r\n                                        onChange={(e) => setServicesDescription(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Services Background</h6>\r\n                                    <figure className='mr-3 item-rtl'>\r\n                                        <img \r\n                                            src={servicesBgPreview}\r\n                                            className='small-avatar'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        id=\"servicesBackground\" \r\n                                        name=\"servicesBackground\" \r\n                                        accept=\"images/*\"\r\n                                        onChange={changeServicesBg}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                        disabled={updateLoading ? true : false}\r\n                                    >\r\n                                        Update Home\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateHome\r\n","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListInquiries.js",["251"],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListTrash.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListQuotations.js",["252"],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListOthers.js",["253"],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListArchives.js",["254"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListArchives = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Inquiry status has been updated successfully.');\r\n            history.push('/admin/archives')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Created At',\r\n                    field: 'createdAt',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Inquiry ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Concern Type',\r\n                    field: 'concernType',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Resolved'){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    id: inquiry._id,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\r\n                                    <i className='fa fa-undo'></i>\r\n                                </button>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Archives'}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-4 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                    <h1 className='mt-5'>Archives</h1>\r\n                    {loading? <Loader/> : (\r\n                        <MDBDataTable\r\n                            data={setInquiries()}\r\n                            className='px-3 ml-10'\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                            entries={5}\r\n                        />\r\n                    )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListArchives","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\NewProduct.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Register.js",["255"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { register, clearErrors } from './../../actions/userActions'\r\n\r\nconst Register = ( { history } ) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        contactNumber: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const { name, email, contactNumber, password, confirmPassword, } = user;\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading, success } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(success){\r\n            alert.success('Account has been created successfully.')\r\n        }\r\n    }, [dispatch, alert, isAuthenticated, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('avatar', avatar);\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        dispatch(register(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        \r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n        } else {\r\n            if(e.target.name === 'avatar') {\r\n\r\n                const reader = new FileReader();\r\n    \r\n                reader.onload = () => {\r\n                    if(reader.readyState === 2){\r\n                        setAvatarPreview(reader.result)\r\n                        setAvatar(reader.result)\r\n                    }\r\n                }\r\n    \r\n                reader.readAsDataURL(e.target.files[0])\r\n    \r\n            }\r\n            else {\r\n                setUser({\r\n                    ...user,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Register'}/>\r\n            <div className=\"login-clean\">\r\n                <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                    <h2 className=\"sr-only\">Register New User</h2>\r\n                    <div className=\"div-forgot-password\">\r\n                        <h3 className=\"forgot-password-heading\">Register New User</h3>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Name</h6>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Email</h6>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\" \r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Contact Number (format: xxxx-xxx-xxxx)</h6>\r\n                        <input \r\n                            type=\"tel\" \r\n                            className=\"form-control\" \r\n                            name=\"contactNumber\" \r\n                            value={contactNumber}\r\n                            pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Password</h6>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Confirm Password</h6>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            name=\"confirmPassword\"\r\n                            value={confirmPassword}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type='checkbox'\r\n                            id='useDefaultImage'\r\n                            name='useDefaultImage'\r\n                            value={useDefaultImage}\r\n                            onChange={onChange}/>\r\n                            &nbsp;Use default image\r\n                        <h6>Avatar</h6>\r\n                        <figure className='mr-3 item-rtl'>\r\n                            <img \r\n                                src={avatarPreview}\r\n                                className='rounded-circle small-avatar'\r\n                                alt='Avatar Preview'\r\n                            />\r\n                        </figure>\r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"avatar\" \r\n                            name=\"avatar\" \r\n                            accept=\"images/*\"\r\n                            onChange={onChange}\r\n                            disabled={useDefaultImage ? true : false}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button\r\n                            className=\"btn btn-primary btn-block\"\r\n                            type=\"submit\"\r\n                            disabled={ loading ? true : false}\r\n                        >Register</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Login.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\Profile.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdateProfile.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateAbout.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListAbout.js",["256"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\n\r\nconst ListAbout = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, abouts } = useSelector(state => state.abouts)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAboutDetails());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('About Us information has been updated successfully.');\r\n            history.push('/admin/about')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setAboutData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         abouts.forEach(about => {\r\n            data.rows.push({\r\n                title: about.title,\r\n                description: about.description,\r\n                actions:   <Fragment>\r\n                            <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                        </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All About Us'}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-4 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                    <h1 className='mt-5'>Update About Us</h1>\r\n                    {loading? <Loader/> : (\r\n                        <MDBDataTable\r\n                            data={setAboutData()}\r\n                            className='px-3 ml-10'\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                            entries={5}\r\n                        />\r\n                    )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAbout\r\n","D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Dashboard.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\userActions.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateInquiry.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ProductsList.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\productActions.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDisplay.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\websiteActions.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\actions\\inquiryActions.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\productConstants.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\userConstants.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\websiteConstants.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\constants\\inquiryConstants.js",[],"D:\\Agile Project\\Agile-Testing-Website\\frontend\\src\\components\\MissionVision.js",["257","258"],"import React, { Fragment } from 'react'\r\n\r\nconst MissionVision = ({ about }) => {\r\n    return (\r\n        <div>\r\n            {(about._id == '602905ed5135781774314621' || about._id == '602905e55135781774314620') ? (\r\n            <Fragment>\r\n                <h1>{about.title}</h1>\r\n                <hr />\r\n                <p className=\"text-justify\">{about.description}<br/><br/><br/></p>\r\n            </Fragment>) :\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MissionVision\r\n",{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":69,"column":61,"nodeType":"265","endLine":69,"endColumn":64},{"ruleId":"266","severity":1,"message":"267","line":52,"column":140,"nodeType":"268","messageId":"269","endLine":52,"endColumn":141},{"ruleId":"266","severity":1,"message":"267","line":52,"column":161,"nodeType":"268","messageId":"269","endLine":52,"endColumn":162},{"ruleId":"266","severity":1,"message":"267","line":70,"column":84,"nodeType":"268","messageId":"269","endLine":70,"endColumn":85},{"ruleId":"266","severity":1,"message":"267","line":70,"column":106,"nodeType":"268","messageId":"269","endLine":70,"endColumn":107},{"ruleId":"266","severity":1,"message":"267","line":73,"column":84,"nodeType":"268","messageId":"269","endLine":73,"endColumn":85},{"ruleId":"266","severity":1,"message":"267","line":73,"column":107,"nodeType":"268","messageId":"269","endLine":73,"endColumn":108},{"ruleId":"266","severity":1,"message":"267","line":79,"column":121,"nodeType":"268","messageId":"269","endLine":79,"endColumn":122},{"ruleId":"266","severity":1,"message":"267","line":79,"column":145,"nodeType":"268","messageId":"269","endLine":79,"endColumn":146},{"ruleId":"270","severity":1,"message":"271","line":32,"column":17,"nodeType":"265","endLine":32,"endColumn":154},{"ruleId":"272","severity":1,"message":"273","line":49,"column":37,"nodeType":"274","endLine":49,"endColumn":62},{"ruleId":"272","severity":1,"message":"275","line":53,"column":68,"nodeType":"274","endLine":53,"endColumn":109},{"ruleId":"276","severity":1,"message":"277","line":25,"column":9,"nodeType":"278","messageId":"279","endLine":25,"endColumn":19},{"ruleId":"276","severity":1,"message":"280","line":26,"column":9,"nodeType":"278","messageId":"279","endLine":26,"endColumn":18},{"ruleId":"276","severity":1,"message":"281","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":83,"column":8,"nodeType":"284","endLine":83,"endColumn":65,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":194,"column":41,"nodeType":"265","endLine":198,"endColumn":43},{"ruleId":"276","severity":1,"message":"288","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":46},{"ruleId":"276","severity":1,"message":"288","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":46},{"ruleId":"276","severity":1,"message":"288","line":1,"column":38,"nodeType":"278","messageId":"279","endLine":1,"endColumn":46},{"ruleId":"276","severity":1,"message":"288","line":1,"column":39,"nodeType":"278","messageId":"279","endLine":1,"endColumn":47},{"ruleId":"289","severity":1,"message":"290","line":62,"column":31,"nodeType":"268","messageId":"291","endLine":62,"endColumn":33},{"ruleId":"276","severity":1,"message":"288","line":1,"column":39,"nodeType":"278","messageId":"279","endLine":1,"endColumn":47},{"ruleId":"289","severity":1,"message":"290","line":6,"column":25,"nodeType":"268","messageId":"291","endLine":6,"endColumn":27},{"ruleId":"289","severity":1,"message":"290","line":6,"column":68,"nodeType":"268","messageId":"291","endLine":6,"endColumn":70},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","no-unused-vars","'errorCount' is assigned a value but never used.","Identifier","unusedVar","'loopCount' is assigned a value but never used.","'Sidebar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'homePage', 'var_productImageLeft', 'var_productImageRight', 'var_servicesBackground', and 'var_titleBackground'. Either include them or remove the dependency array.","ArrayExpression",["294"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",{"range":"297","text":"298"},[2943,3000],"[dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]"]