[{"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/index.js":"1","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/store.js":"2","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/App.js":"3","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Products.js":"4","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/inquiryReducers.js":"6","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Home.js":"7","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutScope.js":"8","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/productReducers.js":"9","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutHistory.js":"10","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutMissionVision.js":"11","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutCompany.js":"12","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Contact.js":"13","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateHome.js":"14","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Services.js":"15","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateAbout.js":"16","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/ConfirmationPage.js":"17","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListInquiries.js":"18","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListArchives.js":"19","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListOthers.js":"20","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListQuotations.js":"21","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Dashboard.js":"22","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ProductsList.js":"23","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListTrash.js":"24","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/NewProduct.js":"25","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateProduct.js":"26","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListAbout.js":"27","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Login.js":"28","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/websiteReducers.js":"29","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/ForgotPassword.js":"30","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Profile.js":"31","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/EmailSent.js":"32","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdateProfile.js":"33","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Register.js":"34","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutObjectives.js":"35","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/NewPassword.js":"36","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/route/ProtectedRoute.js":"37","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdatePassword.js":"38","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Footer.js":"39","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Header.js":"40","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/userActions.js":"41","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDetails.js":"42","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateInquiry.js":"43","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/MetaData.js":"44","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDisplay.js":"45","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Loader.js":"46","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/productActions.js":"47","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/inquiryConstants.js":"48","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/websiteActions.js":"49","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/productConstants.js":"50","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/websiteConstants.js":"51","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/userConstants.js":"52","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/inquiryActions.js":"53","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/MissionVision.js":"54","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Settings.js":"55"},{"size":586,"mtime":1610487705946,"results":"56","hashOfConfig":"57"},{"size":1474,"mtime":1613397580868,"results":"58","hashOfConfig":"57"},{"size":5573,"mtime":1613560580952,"results":"59","hashOfConfig":"57"},{"size":4586,"mtime":1613562186654,"results":"60","hashOfConfig":"57"},{"size":4194,"mtime":1613458470048,"results":"61","hashOfConfig":"57"},{"size":3992,"mtime":1613456679931,"results":"62","hashOfConfig":"57"},{"size":4578,"mtime":1613397580635,"results":"63","hashOfConfig":"57"},{"size":2385,"mtime":1613562513657,"results":"64","hashOfConfig":"57"},{"size":4538,"mtime":1613397580866,"results":"65","hashOfConfig":"57"},{"size":2394,"mtime":1613562550884,"results":"66","hashOfConfig":"57"},{"size":2305,"mtime":1613557246582,"results":"67","hashOfConfig":"57"},{"size":2306,"mtime":1613562533535,"results":"68","hashOfConfig":"57"},{"size":8104,"mtime":1613557468650,"results":"69","hashOfConfig":"57"},{"size":13255,"mtime":1613561315579,"results":"70","hashOfConfig":"57"},{"size":4089,"mtime":1613557206169,"results":"71","hashOfConfig":"57"},{"size":5583,"mtime":1613562312486,"results":"72","hashOfConfig":"57"},{"size":1066,"mtime":1613557460817,"results":"73","hashOfConfig":"57"},{"size":5630,"mtime":1613561924005,"results":"74","hashOfConfig":"57"},{"size":5486,"mtime":1613560344726,"results":"75","hashOfConfig":"57"},{"size":5466,"mtime":1613561928811,"results":"76","hashOfConfig":"57"},{"size":5485,"mtime":1613561908570,"results":"77","hashOfConfig":"57"},{"size":4656,"mtime":1613558245662,"results":"78","hashOfConfig":"57"},{"size":5047,"mtime":1613561959628,"results":"79","hashOfConfig":"57"},{"size":6650,"mtime":1613561935090,"results":"80","hashOfConfig":"57"},{"size":7693,"mtime":1613561527749,"results":"81","hashOfConfig":"57"},{"size":9280,"mtime":1613561456328,"results":"82","hashOfConfig":"57"},{"size":4157,"mtime":1613560336879,"results":"83","hashOfConfig":"57"},{"size":2689,"mtime":1613397580834,"results":"84","hashOfConfig":"57"},{"size":3635,"mtime":1613397580867,"results":"85","hashOfConfig":"57"},{"size":2261,"mtime":1613397580816,"results":"86","hashOfConfig":"57"},{"size":1904,"mtime":1613397580836,"results":"87","hashOfConfig":"57"},{"size":1050,"mtime":1613557473383,"results":"88","hashOfConfig":"57"},{"size":4999,"mtime":1613397580838,"results":"89","hashOfConfig":"57"},{"size":6864,"mtime":1613458479416,"results":"90","hashOfConfig":"57"},{"size":2420,"mtime":1613562417108,"results":"91","hashOfConfig":"57"},{"size":2828,"mtime":1613397580835,"results":"92","hashOfConfig":"57"},{"size":921,"mtime":1613397580795,"results":"93","hashOfConfig":"57"},{"size":3044,"mtime":1613397580837,"results":"94","hashOfConfig":"57"},{"size":4047,"mtime":1613397580746,"results":"95","hashOfConfig":"57"},{"size":4267,"mtime":1613560435273,"results":"96","hashOfConfig":"57"},{"size":5312,"mtime":1613397580615,"results":"97","hashOfConfig":"57"},{"size":2351,"mtime":1613476523286,"results":"98","hashOfConfig":"57"},{"size":5613,"mtime":1613559904162,"results":"99","hashOfConfig":"57"},{"size":270,"mtime":1610903258521,"results":"100","hashOfConfig":"57"},{"size":490,"mtime":1613397580792,"results":"101","hashOfConfig":"57"},{"size":160,"mtime":1612789451971,"results":"102","hashOfConfig":"57"},{"size":4167,"mtime":1613397580613,"results":"103","hashOfConfig":"57"},{"size":1077,"mtime":1613454334893,"results":"104","hashOfConfig":"57"},{"size":5570,"mtime":1613397580617,"results":"105","hashOfConfig":"57"},{"size":1292,"mtime":1613397580839,"results":"106","hashOfConfig":"57"},{"size":1040,"mtime":1613397580841,"results":"107","hashOfConfig":"57"},{"size":1450,"mtime":1613397580840,"results":"108","hashOfConfig":"57"},{"size":3335,"mtime":1613455635465,"results":"109","hashOfConfig":"57"},{"size":572,"mtime":1613562580771,"results":"110","hashOfConfig":"57"},{"size":3964,"mtime":1613560376382,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"bpi0ip",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"114"},"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/index.js",[],["237","238"],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/store.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/App.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Products.js",["239"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\n\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\n\n\nconst Products = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setCategory] = useState('');\n\n    const categories = [\n        'Category1',\n        'Category2',\n        'Category3',\n        'Category4',\n        'Category5',\n        'Category6',\n        'Category7'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category));\n    }, [dispatch, alert, error, currentPage, category]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        <MetaData title={'Our Products'}/>\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\n                            <div className=\"our-products\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div classNme=\"mt-5\">\n                                            <ul className=\"pl-0\">\n                                                {categories.map( category => (\n                                                    \n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\n                                                        key={category}\n                                                        onClick={() => {setCurrentPageNo(1); setCategory(category)}}>\n                                                            <a>{category}</a>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                            {category && (\n                                                <a href='/our-products'>View All Products</a>\n                                            )}\n                                        </div>\n                                    </div>\n                                    {products && products.map( product => (\n                                        <ProductDisplay key={product._id} product={product}/>\n                                    ))}\n                                </div>\n                            </div>\n                        </section>\n\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )} \n                        \n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default Products;\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Home.js",["240","241","242","243","244","245","246","247"],"import React, { Fragment, useEffect } from 'react'\nimport '../css/styles.css'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomeDetails, clearErrors } from '../actions/websiteActions'\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, homePage } = useSelector(state => state.homeDetails)\n\n    let titleBackground, servicesBackground, productImageLeft, productImageRight = \"\"\n    \n    if(homePage.titleBackground){\n        titleBackground = homePage.titleBackground.url\n    } \n\n    if(homePage.servicesBackground){\n        servicesBackground = homePage.servicesBackground.url\n    } \n\n    if(homePage.productImageLeft){\n        productImageLeft = homePage.productImageLeft.url\n    } \n\n    if(homePage.productImageRight){\n        productImageRight = homePage.productImageRight.url\n    }\n\n    useEffect(() => {\n        dispatch(getHomeDetails())\n        \n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <section className=\"section1 welcome\" style={{height: \"100%\", width: \"100%\"}}>\n                            <div\n                                className=\"welcome-container\"\n                                style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                <img className=\"agile-logo-small\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\" alt=\"company logo\"/>\n                                <h1 className=\"agile-name font-weight-bold\">AGILE TECHNODYNAMICS</h1>\n                            </div>\n                        </section>\n                        <div className=\"row\">\n                            <div className=\"col-md-auto description-container\">\n                                <div>\n                                    <h1 className=\"font-weight-bold\">Our Products</h1>\n                                    <h6 className=\"product-description\">{homePage.productDescription}&nbsp;</h6>\n                                </div>\n                                <a href=\"product.html\">See Products&nbsp;<i className=\"fa fa-angle-right\"></i></a>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\"}}></div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\"}}></div>\n                            </div>\n                        </div>\n                        <div \n                            className=\"row our-services our-services-column description-container our-services-photo\" \n                            style={{\n                                background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                backgroundSize: \"cover\", \n                                backgroundPosition: \"right\"\n                                }}\n                            >\n                            <div className=\"col\">\n                                <div className=\"div-our-services\">\n                                    <h1 className=\"our-services font-weight-bold\">Our Services</h1>\n                                    <h6 className=\"description\">{homePage.servicesDescription}&nbsp;</h6><a className=\"services-link\" href=\"services.html\">See Services&nbsp;<i className=\"fa fa-angle-right\"></i></a>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutScope.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutHistory.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutMissionVision.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutCompany.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Contact.js",["248","249"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from './layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { createInquiry, clearErrors } from './../actions/inquiryActions'\nimport { INQUIRY_RESET } from './../constants/inquiryConstants'\nimport '../css/contact.css'\n\nconst Contact = ( { history } ) => {\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [customerEmail, setCustomerEmail] = useState('');\n    const [companyName, setCompanyName] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [position, setPosition] = useState('');\n    const [concernType, setConcernType] = useState('');\n    const [customerMessage, setCustomerMessage] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { success, error, loading } = useSelector(state => state.newInquiry);\n\n    var errorCount = 0;\n    var loopCount = 0; \n\n    useEffect(() => {\n        if(success){\n            history.push('/confirmation')\n\n            dispatch({\n                type: INQUIRY_RESET\n            })\n        } \n\n        if(error){ //in reducer, error: true instead of error: action.payload\n            alert.error('Please complete the form.');\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, success, error, loading, alert, history])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('firstName', firstName);\n        formData.set('lastName', lastName);\n        formData.set('customerEmail', customerEmail);\n        formData.set('companyName', companyName);\n        formData.set('position', position);\n        formData.set('contactNumber', contactNumber);\n        formData.set('concernType', concernType);\n        formData.set('customerMessage', customerMessage);\n\n        dispatch(createInquiry(formData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Contact Us'}/>\n            <Fragment>\n                <form method='post' onSubmit={submitHandler} encType='application/json'>\n                    <div className=\"contact-container\" style={{paddingTop: '65px'}}>\n                        <div className=\"contact-header\">\n                            <h1 style={{textAlign: 'center'}}>Contact Us</h1>\n                        </div>\n                        <div className=\"labelname\">\n                            <label>Your Name</label>\n                        </div>\n                        <div className=\"firstname\">\n                            <input \n                                name=\"firstname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"First Name\" \n                                value={firstName}\n                                onChange={(e) => setFirstName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"lastname\">\n                            <input \n                                name=\"lastname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Last Name\" \n                                value={lastName}\n                                onChange={(e) => setLastName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelcompany\">\n                            <label>Your Company Name</label>\n                        </div>\n                        <div className=\"companyname\">\n                            <input \n                                name=\"companyname\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Company Name\" \n                                value={companyName}\n                                onChange={(e) => setCompanyName(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelposition\">\n                            <label>Your Position in Company</label>\n                        </div>\n                        <div className=\"position\">\n                            <input \n                                name=\"position\" \n                                type=\"text\" \n                                className=\"feedback-input\" \n                                placeholder=\"Position\" \n                                value={position}\n                                onChange={(e) => setPosition(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelemail\">\n                            <label>Your Email</label>\n                        </div>\n                        <div className=\"email\">\n                            <input \n                                name=\"email\" \n                                type=\"email\" \n                                className=\"feedback-input\" \n                                placeholder=\"Email\" \n                                value={customerEmail}\n                                onChange={(e) => setCustomerEmail(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelcontact\">\n                            <label>Your Contact Number</label>\n                        </div>\n                        <div className=\"contact\">\n                            <input \n                                name=\"contactnumber\" \n                                type=\"tel\" \n                                className=\"feedback-input\" \n                                placeholder=\"xxxx-xxx-xxxx\" \n                                pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\n                                value={contactNumber}\n                                onChange={(e) => setContactNumber(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"labelconcern\">\n                            <label>Your Concern Type</label>\n                        </div>\n                        <div className=\"concern\">\n                            <select \n                                name=\"concern\" \n                                className=\"concern-dropdown\" \n                                value={concernType}\n                                onChange={(e) => setConcernType(e.target.value)}\n                            >\n                                <option>         -        </option>\n                                <option value=\"Inquiry\">Inquiry</option>\n                                <option value=\"Appointment\">Appointment</option>\n                                <option value=\"Others\">Others</option>\n                            </select>\n                        </div>\n                        <div className=\"labelmessage\">\n                            <label>Your Message</label>\n                        </div>\n                        <div className=\"message\">\n                            <textarea \n                                name=\"message\" \n                                className=\"feedback-input\" \n                                placeholder=\"Message\" \n                                value={customerMessage}\n                                onChange={(e) => setCustomerMessage(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"submit\">\n                            <input \n                                type=\"submit\" \n                                value=\"SUBMIT\" \n                                disabled={ loading ? true : false}\n                            />\n                        </div>\n                    </div>\n                </form>\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Contact","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateHome.js",["250","251"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\n\nconst UpdateHome = ({history}) => {\n    \n    const [productDescription, setProductDescription] = useState('')\n    const [servicesDescription, setServicesDescription] = useState('')\n    const [titleBackground, setTitleBackground] = useState('')\n    const [servicesBackground, setServicesBackground] = useState('')\n    const [productImageLeft, setProductImageLeft] = useState('')\n    const [productImageRight, setProductImageRight] = useState('')\n    \n    //image previews\n    const [titleBgPreview, setTitleBgPreview] = useState('')\n    const [servicesBgPreview, setServicesBgPreview] = useState('')\n    const [prodImgLeftPreview, setProdImgLeftPreview] = useState('')\n    const [prodImgRightPreview, setProdImgRightPreview] = useState('')\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, homePage } = useSelector(state => state.homeDetails) \n    const { loading: updateLoading, error: updateError, isUpdated } = useSelector(state => state.website)\n\n    let var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight = \"\"\n\n    if(homePage.titleBackground){\n        var_titleBackground = homePage.titleBackground.url\n    } \n\n    if(homePage.servicesBackground){\n        var_servicesBackground = homePage.servicesBackground.url\n    } \n\n    if(homePage.productImageLeft){\n        var_productImageLeft = homePage.productImageLeft.url\n    } \n\n    if(homePage.productImageRight){\n        var_productImageRight = homePage.productImageRight.url\n    }\n    \n    useEffect(() => {\n\n        dispatch(getHomeDetails())\n\n        if(homePage){\n            setProductDescription(homePage.productDescription)\n            setServicesDescription(homePage.servicesDescription)\n            setTitleBgPreview(var_titleBackground)\n            setServicesBgPreview(var_servicesBackground)\n            setProdImgLeftPreview(var_productImageLeft)\n            setProdImgRightPreview(var_productImageRight)\n        }\n\n        if(error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if(updateError) {\n            alert.error(updateError);\n\n            history.push('/dashboard')\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated) {\n            history.push('/dashboard')\n            alert.success('Home updated successfully.');\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, updateError, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('productDescription', productDescription);\n        formData.set('servicesDescription', servicesDescription);\n        formData.set('titleBackground', titleBackground);\n        formData.set('servicesBackground', servicesBackground);\n        formData.set('productImageLeft', productImageLeft);\n        formData.set('productImageRight', productImageRight);\n\n        dispatch(updateHome(formData));\n    }\n\n    const changeTitleBg = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setTitleBgPreview(reader.result)\n                setTitleBackground(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n    \n    const changeProdImgLeft = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setProdImgLeftPreview(reader.result)\n                setProductImageLeft(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    const changeProdImgRight = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setProdImgRightPreview(reader.result)\n                setProductImageRight(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    const changeServicesBg = (e) => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setServicesBgPreview(reader.result)\n                setServicesBackground(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Home'}/>\n            <div id=\"wrapper\" style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    {loading ? <Loader/> : (\n                        <Fragment>\n                            <div className=\"login-clean\">\n                                <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{maxWidth: '500px'}}>\n                                    <h2 className=\"sr-only\">Update Homepage</h2>\n                                    <div className=\"div-forgot-password\">\n                                        <h3 className=\"forgot-password-heading\">Update Homepage </h3>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Main Background</h6>\n                                        <figure className='mr-3 item-rtl'>\n                                            <img \n                                                src={titleBgPreview}\n                                                className='small-avatar'\n                                                alt='Main Background Preview'\n                                            />\n                                        </figure>\n                                        <input \n                                            type=\"file\" \n                                            id=\"titleBackground\" \n                                            name=\"titleBackground\" \n                                            accept=\"images/*\"\n                                            onChange={changeTitleBg}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Product Description</h6>\n                                        <textarea \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"productDescription\" \n                                            name=\"productDescription\" \n                                            placeholder={productDescription}\n                                            value={productDescription}\n                                            style={{width: '100%', height: '150px'}}\n                                            onChange={(e) => setProductDescription(e.target.value)}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Product Image (Left)</h6>\n                                        <figure className='mr-3 item-rtl'>\n                                            <img \n                                                src={prodImgLeftPreview}\n                                                className='small-avatar'\n                                                alt='Product Image Left Preview'\n                                            />\n                                        </figure>\n                                        <input \n                                            type=\"file\" \n                                            id=\"productImageLeft\" \n                                            name=\"productImageLeft\" \n                                            accept=\"images/*\"\n                                            onChange={changeProdImgLeft}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Product Image (Right)</h6>\n                                        <figure className='mr-3 item-rtl'>\n                                            <img \n                                                src={prodImgRightPreview}\n                                                className='small-avatar'\n                                                alt='Avatar Preview'\n                                            />\n                                        </figure>\n                                        <input \n                                            type=\"file\" \n                                            id=\"productImageRight\" \n                                            name=\"productImageRight\" \n                                            accept=\"images/*\"\n                                            onChange={changeProdImgRight}\n                                        />\n                                    </div>\n                                    \n                                    <div className=\"form-group\">\n                                        <h6>Services Description</h6>\n                                        <textarea \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"servicesDescription\" \n                                            name=\"servicesDescription\" \n                                            value={servicesDescription}\n                                            style={{width: '100%', height: '150px'}}\n                                            onChange={(e) => setServicesDescription(e.target.value)}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Services Background</h6>\n                                        <figure className='mr-3 item-rtl'>\n                                            <img \n                                                src={servicesBgPreview}\n                                                className='small-avatar'\n                                                alt='Avatar Preview'\n                                            />\n                                        </figure>\n                                        <input \n                                            type=\"file\" \n                                            id=\"servicesBackground\" \n                                            name=\"servicesBackground\" \n                                            accept=\"images/*\"\n                                            onChange={changeServicesBg}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <button \n                                            className=\"btn btn-primary btn-block\" \n                                            type=\"submit\"\n                                            disabled={updateLoading ? true : false}\n                                        >\n                                            Update Home\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </Fragment>\n                    )}\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateHome\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/Services.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateAbout.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListInquiries.js",["252"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n// import \"mdbreact/dist/css/mdb.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/inquiries')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Inquiries'}/>\n            <div id=\"wrapper\"style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <h1 className='mt-5'>Inbox - Inquiry</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListArchives.js",["253"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst ListArchives = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Inquiry status has been updated successfully.');\n            history.push('/admin/archives')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Resolved'){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\n                                    <i className='fa fa-undo'></i>\n                                </button>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Archives'}/>\n            <div id=\"wrapper\"style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <h1 className='mt-5'>Archives</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListArchives","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListOthers.js",["254"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/others')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         }) \n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Others'}/>\n            <div id=\"wrapper\"style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li><Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <h1 className='mt-5'>Inbox - Others</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListQuotations.js",["255"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/quotations')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Appointments'}/>\n            <div id=\"wrapper\"style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <h1 className='mt-5'>Inbox - Appointments</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Dashboard.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ProductsList.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListTrash.js",["256","257"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst ListTrash = ( { history} ) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\n\n    let deleteAll = false\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been updated successfully.');\n            history.push('/admin/trash')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        if(isDeleted && deleteAll){\n            alert.success('Inquiry has been deleted successfully.');\n            history.push('/admin/trash')\n\n            dispatch({\n                type: DELETE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Deleted'){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\n                                    <i className='fa fa-undo'></i>\n                                </button>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteInquiryHandler(inquiry._id)}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const deleteInquiryHandler = (id) => {\n\n        if(window.confirm(\"Are you sure you want to delete this message? This cannot be undone.\")){\n            dispatch(deleteInquiry(id))\n        }\n    }\n\n    const emptyTrash = () => {\n        deleteAll = true \n\n        let deletedInquiryCount = 0\n\n        inquiries.forEach(inquiry => {\n\n            if(inquiry.inquiryStatus === 'Deleted') {\n                deletedInquiryCount += 1\n                dispatch(deleteInquiry(inquiry._id))\n                deletedInquiryCount -= 1\n            }\n        })\n\n        if(deletedInquiryCount == 0){\n            alert.success('Trash has been emptied.'); //this is working\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Trash'}/>\n            <div id=\"wrapper\" style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <h1 className='mt-5'>Trash</h1>\n                        <button className='btn btn-dark btn-sm text-capitalize' onClick={emptyTrash}>\n                            Empty Tash\n                        </button>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setInquiries()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListTrash","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/NewProduct.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateProduct.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/ListAbout.js",["258"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\n\nconst ListAbout = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, abouts } = useSelector(state => state.abouts)\n    const { isUpdated } = useSelector(state => state.website)\n\n    useEffect(() => {\n        dispatch(getAboutDetails());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('About Us information has been updated successfully.');\n            history.push('/admin/about')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setAboutData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         abouts.forEach(about => {\n            data.rows.push({\n                title: about.title,\n                description: about.description,\n                actions:   <Fragment>\n                            <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                        </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All About Us'}/>\n            <div id=\"wrapper\"style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <h1 className='mt-5'>Update About Us</h1>\n                        {loading? <Loader/> : (\n                            <MDBDataTable\n                                data={setAboutData()}\n                                className='px-3 ml-10'\n                                bordered\n                                striped\n                                hover\n                                entries={5}\n                            />\n                        )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAbout\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Login.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/ForgotPassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Profile.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdateProfile.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/Register.js",["259"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { register, clearErrors } from './../../actions/userActions'\n\nconst Register = ( { history } ) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        contactNumber: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { name, email, contactNumber, password, confirmPassword, } = user;\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading, success } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/')\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(success){\n            alert.success('Account has been created successfully.')\n        }\n    }, [dispatch, alert, isAuthenticated, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n        formData.set('contactNumber', contactNumber);\n        formData.set('avatar', avatar);\n        formData.set('useDefaultImage', useDefaultImage)\n\n        dispatch(register(formData));\n    }\n\n    const onChange = e => {\n        \n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked == true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n        } else {\n            if(e.target.name === 'avatar') {\n\n                const reader = new FileReader();\n    \n                reader.onload = () => {\n                    if(reader.readyState === 2){\n                        setAvatarPreview(reader.result)\n                        setAvatar(reader.result)\n                    }\n                }\n    \n                reader.readAsDataURL(e.target.files[0])\n    \n            }\n            else {\n                setUser({\n                    ...user,\n                    [e.target.name]: e.target.value\n                })\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Register'}/>\n            <div className=\"login-clean\">\n                <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'>\n                    <h2 className=\"sr-only\">Register New User</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">Register New User</h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Name</h6>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"name\"\n                            value={name}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Email</h6>\n                        <input \n                            type=\"email\" \n                            className=\"form-control\" \n                            name=\"email\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Contact Number (format: xxxx-xxx-xxxx)</h6>\n                        <input \n                            type=\"tel\" \n                            className=\"form-control\" \n                            name=\"contactNumber\" \n                            value={contactNumber}\n                            pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Password</h6>\n                        <input \n                            type=\"password\" \n                            className=\"form-control\" \n                            name=\"password\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Confirm Password</h6>\n                        <input \n                            type=\"password\" \n                            className=\"form-control\" \n                            name=\"confirmPassword\"\n                            value={confirmPassword}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input \n                            type='checkbox'\n                            id='useDefaultImage'\n                            name='useDefaultImage'\n                            value={useDefaultImage}\n                            onChange={onChange}/>\n                            &nbsp;Use default image\n                        <h6>Avatar</h6>\n                        <figure className='mr-3 item-rtl'>\n                            <img \n                                src={avatarPreview}\n                                className='rounded-circle small-avatar'\n                                alt='Avatar Preview'\n                            />\n                        </figure>\n                        <input \n                            type=\"file\" \n                            id=\"avatar\" \n                            name=\"avatar\" \n                            accept=\"images/*\"\n                            onChange={onChange}\n                            disabled={useDefaultImage ? true : false}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            type=\"submit\"\n                            disabled={ loading ? true : false}\n                        >Register</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/AboutObjectives.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/NewPassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/user/UpdatePassword.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Header.js",["260","261","262"],"import React from 'react'\nimport { Fragment } from 'react'\nimport '../../css/styles.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\n\nconst Header = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    return (\n        <Fragment>\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top\">\n            <div className=\"container\">\n                <button data-toggle=\"collapse\" data-target=\"#navcol-1\" className=\"navbar-toggler\">\n                    <span className=\"sr-only\">Toggle navigation</span>\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n            <Link to=\"/\">\n                <img className=\"agile-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\n            </Link>\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\n                    <ul className=\"nav navbar-nav flex-grow-1 justify-content-between\">\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"#\"></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-company\"><strong>About Us</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-products\"><strong>Products</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\n                        {user ? (\n                                <div className=\"ml-4 dropdown d-inline\">\n                                <Link\n                                    className=\"btn dropdown-toggle text-black mr-4\"\n                                    type=\"button\"\n                                    id=\"dropDownMenuButton\"\n                                    data-toggle=\"dropdown\"\n                                    aria-aria-haspopup=\"true\"\n                                    aria-expanded=\"false\">\n                                        {user && user.name}\n                                    </Link>\n                                    <div className=\"dropdown-menu\" aria-aria-labelledby=\"dropDownMenuButton\">\n                                        <Link className=\"dropdown-item\" to=\"/admin/dashboard\">\n                                            Dashboard\n                                        </Link>\n                                        <Link className=\"dropdown-item\" to=\"/me\">\n                                                My Profile\n                                            </Link>\n                                        {user && user.role !== 'admin' ? (\n                                            <Link className=\"dropdown-item\" to=\"/register\">\n                                                Register New Users\n                                            </Link>\n                                        ) : (\n                                            <Link></Link>\n                                        )}\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </div>\n                                \n                            ) : !loading && <Link to=\"/login\">\n                                <div></div>\n                            </Link>}\n                    </ul> \n                </div>\n            </div>\n        </nav>\n        </Fragment>\n    )\n}\n\nexport default Header;","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/userActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDetails.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/UpdateInquiry.js",["263"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\n\nconst UpdateInquiry = ( { match, history } ) => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, inquiry } = useSelector(state => state.inquiryDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.inquiry);\n\n    const inquiryId = match.params.id\n\n    useEffect(() => { \n        if(inquiry && inquiry._id !== inquiryId) {\n            dispatch(getInquiryDetails(inquiryId))\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/dashboard');\n            alert.success('Inquiry updated successfully.')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'View Message'}/>\n            <div id=\"wrapper\" style={{paddingTop: '65px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <Fragment>\n                        {loading ? <Loader/> : (\n                            <section className=\"process-section\">\n                                <div className=\"m-5 concern-info-container\">\n                                    <h3>{inquiry.concernType} sent on {inquiry.createdAt}</h3>\n                                    <hr/>\n                                    <p style={{fontSize: '25px'}}><strong>Sender Information</strong></p>\n                                    <p><strong>From: </strong>{inquiry.firstName} {inquiry.lastName}, {inquiry.position} at {inquiry.companyName} </p>\n                                    <p><strong>Email: </strong>{inquiry.customerEmail}</p>\n                                    <p><strong>Contact No.: </strong>{inquiry.contactNumber}</p>\n                                    <hr/>\n                                    <p style={{fontSize: '20px'}}>{inquiry.customerMessage}</p>\n                                </div>\n                                <div className=\"m-5\">\n                                    {(inquiry.inquiryStatus === 'Resolved') ? (\n                                        <Fragment>\n                                            <button \n                                                className=\"btn btn-primary update-status-button\" \n                                                type=\"button\"\n                                                onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved')}\n                                                style={{marginBottom: '65px'}}>\n                                                Restore message back to {inquiry.concernType}\n                                            </button>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <button \n                                                className=\"btn btn-primary update-status-button\" \n                                                type=\"button\"\n                                                onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\n                                                style={{marginBottom: '65px'}}>\n                                                Mark this message as 'Resolved'\n                                            </button>\n                                        </Fragment>\n                                    )}\n                                </div>\n                            </section>\n                        )}\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateInquiry\n","/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/product/ProductDisplay.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/MissionVision.js",["264","265"],"/Users/abby/Desktop/Agile-Testing-Website/frontend/src/components/admin/Settings.js",["266","267","268","269","270","271"],"import React, { Fragment, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from './../layout/MetaData'\nimport Loader from './../layout/Loader'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport '../../css/Sidebar-Menu.css'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts } from '../../actions/productActions'\nimport { listInquiry } from '../../actions/inquiryActions'\n\nconst Settings = () => {\n\n    const dispatch = useDispatch();\n\n    return (\n        <Fragment>\n            <MetaData title={'Settings'}/>\n            <Fragment>\n            <div id=\"wrapper\" style={{paddingTop: '65px'}}>\n                            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\n                                    <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\n                                    <li> <Link to=\"/admin/archives\">Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\">Trash</Link></li>\n                                    <li> <Link to=\"/admin/products\">Products</Link></li>\n                                    <li> <Link to=\"/admin/settings\">Settings</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" href=\"#menu-toggle\">\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i></a>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <section className=\"dashboard-section\">\n                                                <div className=\"dashboard-container\">\n                                                    <div className=\"inbox-container small-width\">\n                                                        <h3>Update Home</h3>\n                                                        <hr /><Link to=\"/admin/update-home\">Go to Update Home<i className=\"fa fa-angle-right\"></i></Link>\n                                                    </div>\n                                                    <div className=\"products-container small-width\">\n                                                        <h3>Update About Page</h3>\n                                                        <hr /><Link to=\"/admin/about\">Go to Update About<i className=\"fa fa-angle-right\"></i></Link>\n                                                    </div>\n                                                    <div className=\"users-container small-width\">\n                                                        <h3>Update Footer</h3>\n                                                        <hr /><Link to=\"/admin/update-footer\">Go to Update Footer<i className=\"fa fa-angle-right\"></i></Link>\n                                                    </div>\n                                                </div>\n                                            </section>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Settings\n",{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":70,"column":61,"nodeType":"278","endLine":70,"endColumn":64},{"ruleId":"279","severity":1,"message":"280","line":52,"column":140,"nodeType":"281","messageId":"282","endLine":52,"endColumn":141},{"ruleId":"279","severity":1,"message":"280","line":52,"column":161,"nodeType":"281","messageId":"282","endLine":52,"endColumn":162},{"ruleId":"279","severity":1,"message":"280","line":70,"column":84,"nodeType":"281","messageId":"282","endLine":70,"endColumn":85},{"ruleId":"279","severity":1,"message":"280","line":70,"column":106,"nodeType":"281","messageId":"282","endLine":70,"endColumn":107},{"ruleId":"279","severity":1,"message":"280","line":73,"column":84,"nodeType":"281","messageId":"282","endLine":73,"endColumn":85},{"ruleId":"279","severity":1,"message":"280","line":73,"column":107,"nodeType":"281","messageId":"282","endLine":73,"endColumn":108},{"ruleId":"279","severity":1,"message":"280","line":79,"column":121,"nodeType":"281","messageId":"282","endLine":79,"endColumn":122},{"ruleId":"279","severity":1,"message":"280","line":79,"column":145,"nodeType":"281","messageId":"282","endLine":79,"endColumn":146},{"ruleId":"283","severity":1,"message":"284","line":25,"column":9,"nodeType":"285","messageId":"286","endLine":25,"endColumn":19},{"ruleId":"283","severity":1,"message":"287","line":26,"column":9,"nodeType":"285","messageId":"286","endLine":26,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":85,"column":8,"nodeType":"290","endLine":85,"endColumn":65,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":213,"column":45,"nodeType":"278","endLine":217,"endColumn":47},{"ruleId":"283","severity":1,"message":"294","line":1,"column":38,"nodeType":"285","messageId":"286","endLine":1,"endColumn":46},{"ruleId":"283","severity":1,"message":"294","line":1,"column":39,"nodeType":"285","messageId":"286","endLine":1,"endColumn":47},{"ruleId":"283","severity":1,"message":"294","line":1,"column":38,"nodeType":"285","messageId":"286","endLine":1,"endColumn":46},{"ruleId":"283","severity":1,"message":"294","line":1,"column":38,"nodeType":"285","messageId":"286","endLine":1,"endColumn":46},{"ruleId":"288","severity":1,"message":"295","line":51,"column":8,"nodeType":"290","endLine":51,"endColumn":76,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":140,"column":32,"nodeType":"281","messageId":"299","endLine":140,"endColumn":34},{"ruleId":"283","severity":1,"message":"294","line":1,"column":39,"nodeType":"285","messageId":"286","endLine":1,"endColumn":47},{"ruleId":"297","severity":1,"message":"298","line":62,"column":31,"nodeType":"281","messageId":"299","endLine":62,"endColumn":33},{"ruleId":"300","severity":1,"message":"301","line":32,"column":17,"nodeType":"278","endLine":32,"endColumn":154},{"ruleId":"302","severity":1,"message":"303","line":49,"column":37,"nodeType":"304","endLine":49,"endColumn":62},{"ruleId":"302","severity":1,"message":"305","line":53,"column":68,"nodeType":"304","endLine":53,"endColumn":109},{"ruleId":"283","severity":1,"message":"294","line":1,"column":38,"nodeType":"285","messageId":"286","endLine":1,"endColumn":46},{"ruleId":"297","severity":1,"message":"298","line":7,"column":25,"nodeType":"281","messageId":"299","endLine":7,"endColumn":27},{"ruleId":"297","severity":1,"message":"298","line":7,"column":68,"nodeType":"281","messageId":"299","endLine":7,"endColumn":70},{"ruleId":"283","severity":1,"message":"306","line":1,"column":27,"nodeType":"285","messageId":"286","endLine":1,"endColumn":36},{"ruleId":"283","severity":1,"message":"307","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":14},{"ruleId":"283","severity":1,"message":"308","line":10,"column":23,"nodeType":"285","messageId":"286","endLine":10,"endColumn":34},{"ruleId":"283","severity":1,"message":"309","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":26},{"ruleId":"283","severity":1,"message":"310","line":12,"column":10,"nodeType":"285","messageId":"286","endLine":12,"endColumn":21},{"ruleId":"283","severity":1,"message":"311","line":16,"column":11,"nodeType":"285","messageId":"286","endLine":16,"endColumn":19},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'errorCount' is assigned a value but never used.","Identifier","unusedVar","'loopCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'homePage', 'var_productImageLeft', 'var_productImageRight', 'var_servicesBackground', and 'var_titleBackground'. Either include them or remove the dependency array.","ArrayExpression",["314"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.",["315"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","'useEffect' is defined but never used.","'Loader' is defined but never used.","'useSelector' is defined but never used.","'getAdminProducts' is defined but never used.","'listInquiry' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",{"range":"320","text":"321"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"322","text":"323"},[2942,2999],"[dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",[1545,1613],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]"]