[{"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\index.js":"1","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\store.js":"2","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\App.js":"3","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\reducers\\userReducers.js":"4","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\reducers\\inquiryReducers.js":"5","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\reducers\\websiteReducers.js":"6","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\reducers\\productReducers.js":"7","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\actions\\userActions.js":"8","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Footer.js":"9","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutCompany.js":"10","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutHistory.js":"11","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\Products.js":"12","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutObjectives.js":"13","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\Services.js":"14","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutScope.js":"15","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\Contact.js":"16","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\ConfirmationPage.js":"17","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\EmailSent.js":"18","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Header.js":"19","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateAbout.js":"20","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateHome.js":"21","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Settings.js":"22","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutMissionVision.js":"23","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListInquiries.js":"24","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Dashboard.js":"25","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListArchives.js":"26","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListOthers.js":"27","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListTrash.js":"28","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListQuotations.js":"29","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListAbout.js":"30","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\NewProduct.js":"31","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\Login.js":"32","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ProductsList.js":"33","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateProduct.js":"34","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDetails.js":"35","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdateProfile.js":"36","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\ForgotPassword.js":"37","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdatePassword.js":"38","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\Profile.js":"39","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\NewPassword.js":"40","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\Register.js":"41","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateInquiry.js":"42","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\route\\ProtectedRoute.js":"43","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\Home.js":"44","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\constants\\websiteConstants.js":"45","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\constants\\productConstants.js":"46","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\constants\\userConstants.js":"47","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\constants\\inquiryConstants.js":"48","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\layout\\MetaData.js":"49","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDisplay.js":"50","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Loader.js":"51","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\actions\\productActions.js":"52","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\actions\\websiteActions.js":"53","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\MissionVision.js":"54","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\actions\\inquiryActions.js":"55","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateFooter.js":"56"},{"size":609,"mtime":1613016529880,"results":"57","hashOfConfig":"58"},{"size":1579,"mtime":1613626114681,"results":"59","hashOfConfig":"58"},{"size":5851,"mtime":1613629026059,"results":"60","hashOfConfig":"58"},{"size":4372,"mtime":1613474949665,"results":"61","hashOfConfig":"58"},{"size":4171,"mtime":1613474949652,"results":"62","hashOfConfig":"58"},{"size":4887,"mtime":1613628048726,"results":"63","hashOfConfig":"58"},{"size":4729,"mtime":1613292394142,"results":"64","hashOfConfig":"58"},{"size":5552,"mtime":1613016852633,"results":"65","hashOfConfig":"58"},{"size":4145,"mtime":1613626802001,"results":"66","hashOfConfig":"58"},{"size":2366,"mtime":1613622472159,"results":"67","hashOfConfig":"58"},{"size":2454,"mtime":1613622472160,"results":"68","hashOfConfig":"58"},{"size":4695,"mtime":1613622472163,"results":"69","hashOfConfig":"58"},{"size":2481,"mtime":1613622472161,"results":"70","hashOfConfig":"58"},{"size":4142,"mtime":1613622472164,"results":"71","hashOfConfig":"58"},{"size":2446,"mtime":1613622472161,"results":"72","hashOfConfig":"58"},{"size":8291,"mtime":1613622472162,"results":"73","hashOfConfig":"58"},{"size":1095,"mtime":1613622472161,"results":"74","hashOfConfig":"58"},{"size":1079,"mtime":1613622472162,"results":"75","hashOfConfig":"58"},{"size":4356,"mtime":1613622472207,"results":"76","hashOfConfig":"58"},{"size":6168,"mtime":1613622472192,"results":"77","hashOfConfig":"58"},{"size":14055,"mtime":1613629607751,"results":"78","hashOfConfig":"58"},{"size":4276,"mtime":1613622472192,"results":"79","hashOfConfig":"58"},{"size":2363,"mtime":1613622472160,"results":"80","hashOfConfig":"58"},{"size":6308,"mtime":1613622472179,"results":"81","hashOfConfig":"58"},{"size":5013,"mtime":1613622472164,"results":"82","hashOfConfig":"58"},{"size":6086,"mtime":1613622472178,"results":"83","hashOfConfig":"58"},{"size":6134,"mtime":1613622472184,"results":"84","hashOfConfig":"58"},{"size":7620,"mtime":1613622472188,"results":"85","hashOfConfig":"58"},{"size":6156,"mtime":1613622472186,"results":"86","hashOfConfig":"58"},{"size":4727,"mtime":1613622472165,"results":"87","hashOfConfig":"58"},{"size":8366,"mtime":1613622472190,"results":"88","hashOfConfig":"58"},{"size":2787,"mtime":1613622472247,"results":"89","hashOfConfig":"58"},{"size":5755,"mtime":1613622472191,"results":"90","hashOfConfig":"58"},{"size":9999,"mtime":1613622472207,"results":"91","hashOfConfig":"58"},{"size":2410,"mtime":1613622472246,"results":"92","hashOfConfig":"58"},{"size":5171,"mtime":1613622472257,"results":"93","hashOfConfig":"58"},{"size":2361,"mtime":1613622472247,"results":"94","hashOfConfig":"58"},{"size":3164,"mtime":1613622472255,"results":"95","hashOfConfig":"58"},{"size":1978,"mtime":1613622472249,"results":"96","hashOfConfig":"58"},{"size":2937,"mtime":1613622472248,"results":"97","hashOfConfig":"58"},{"size":7265,"mtime":1613622472253,"results":"98","hashOfConfig":"58"},{"size":6167,"mtime":1613622472206,"results":"99","hashOfConfig":"58"},{"size":953,"mtime":1613016852647,"results":"100","hashOfConfig":"58"},{"size":4674,"mtime":1613359711348,"results":"101","hashOfConfig":"58"},{"size":1490,"mtime":1613627782105,"results":"102","hashOfConfig":"58"},{"size":1320,"mtime":1613016852652,"results":"103","hashOfConfig":"58"},{"size":1483,"mtime":1613016852653,"results":"104","hashOfConfig":"58"},{"size":1100,"mtime":1613474949644,"results":"105","hashOfConfig":"58"},{"size":283,"mtime":1613016529862,"results":"106","hashOfConfig":"58"},{"size":503,"mtime":1613016852646,"results":"107","hashOfConfig":"58"},{"size":170,"mtime":1613016529862,"results":"108","hashOfConfig":"58"},{"size":4354,"mtime":1613292394127,"results":"109","hashOfConfig":"58"},{"size":7230,"mtime":1613628143545,"results":"110","hashOfConfig":"58"},{"size":592,"mtime":1613622472163,"results":"111","hashOfConfig":"58"},{"size":3482,"mtime":1613292394127,"results":"112","hashOfConfig":"58"},{"size":9373,"mtime":1613629723847,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"10ytysr",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\index.js",[],["246","247"],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\store.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\App.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\reducers\\inquiryReducers.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\reducers\\websiteReducers.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\actions\\userActions.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutCompany.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutHistory.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\Products.js",["248"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\n\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\n\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setCategory] = useState('');\r\n\r\n    const categories = [\r\n        'Category1',\r\n        'Category2',\r\n        'Category3',\r\n        'Category4',\r\n        'Category5',\r\n        'Category6',\r\n        'Category7'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category));\r\n    }, [dispatch, alert, error, currentPage, category]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {categories.map( category => (\r\n                                                    \r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setCategory(category)}}>\r\n                                                            <a>{category}</a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {category && (\r\n                                                <a href='/our-products'>View All Products</a>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutObjectives.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\Services.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutScope.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\Contact.js",["249","250"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from './layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { createInquiry, clearErrors } from './../actions/inquiryActions'\r\nimport { INQUIRY_RESET } from './../constants/inquiryConstants'\r\nimport '../css/contact.css'\r\n\r\nconst Contact = ( { history } ) => {\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [customerEmail, setCustomerEmail] = useState('');\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [concernType, setConcernType] = useState('');\r\n    const [customerMessage, setCustomerMessage] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { success, error, loading } = useSelector(state => state.newInquiry);\r\n\r\n    var errorCount = 0;\r\n    var loopCount = 0; \r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push('/confirmation')\r\n\r\n            dispatch({\r\n                type: INQUIRY_RESET\r\n            })\r\n        } \r\n\r\n        if(error){ //in reducer, error: true instead of error: action.payload\r\n            alert.error('Please complete the form.');\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, success, error, loading, alert, history])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('firstName', firstName);\r\n        formData.set('lastName', lastName);\r\n        formData.set('customerEmail', customerEmail);\r\n        formData.set('companyName', companyName);\r\n        formData.set('position', position);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('concernType', concernType);\r\n        formData.set('customerMessage', customerMessage);\r\n\r\n        dispatch(createInquiry(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Contact Us'}/>\r\n            <Fragment>\r\n                <form method='post' onSubmit={submitHandler} encType='application/json'>\r\n                    <div className=\"contact-container\" style={{paddingTop: '65px'}}>\r\n                        <div className=\"contact-header\">\r\n                            <h1 style={{textAlign: 'center'}}>Contact Us</h1>\r\n                        </div>\r\n                        <div className=\"labelname\">\r\n                            <label>Your Name</label>\r\n                        </div>\r\n                        <div className=\"firstname\">\r\n                            <input \r\n                                name=\"firstname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"First Name\" \r\n                                value={firstName}\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"lastname\">\r\n                            <input \r\n                                name=\"lastname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Last Name\" \r\n                                value={lastName}\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelcompany\">\r\n                            <label>Your Company Name</label>\r\n                        </div>\r\n                        <div className=\"companyname\">\r\n                            <input \r\n                                name=\"companyname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Company Name\" \r\n                                value={companyName}\r\n                                onChange={(e) => setCompanyName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelposition\">\r\n                            <label>Your Position in Company</label>\r\n                        </div>\r\n                        <div className=\"position\">\r\n                            <input \r\n                                name=\"position\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Position\" \r\n                                value={position}\r\n                                onChange={(e) => setPosition(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelemail\">\r\n                            <label>Your Email</label>\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <input \r\n                                name=\"email\" \r\n                                type=\"email\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Email\" \r\n                                value={customerEmail}\r\n                                onChange={(e) => setCustomerEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelcontact\">\r\n                            <label>Your Contact Number</label>\r\n                        </div>\r\n                        <div className=\"contact\">\r\n                            <input \r\n                                name=\"contactnumber\" \r\n                                type=\"tel\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"xxxx-xxx-xxxx\" \r\n                                pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\r\n                                value={contactNumber}\r\n                                onChange={(e) => setContactNumber(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelconcern\">\r\n                            <label>Your Concern Type</label>\r\n                        </div>\r\n                        <div className=\"concern\">\r\n                            <select \r\n                                name=\"concern\" \r\n                                className=\"concern-dropdown\" \r\n                                value={concernType}\r\n                                onChange={(e) => setConcernType(e.target.value)}\r\n                            >\r\n                                <option>         -        </option>\r\n                                <option value=\"Inquiry\">Inquiry</option>\r\n                                <option value=\"Appointment\">Appointment</option>\r\n                                <option value=\"Others\">Others</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"labelmessage\">\r\n                            <label>Your Message</label>\r\n                        </div>\r\n                        <div className=\"message\">\r\n                            <textarea \r\n                                name=\"message\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Message\" \r\n                                value={customerMessage}\r\n                                onChange={(e) => setCustomerMessage(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"submit\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                value=\"SUBMIT\" \r\n                                disabled={ loading ? true : false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Contact","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\ConfirmationPage.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\EmailSent.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Header.js",["251","252","253"],"import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport '../../css/styles.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Header = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top\">\r\n            <div className=\"container\">\r\n                <button data-toggle=\"collapse\" data-target=\"#navcol-1\" className=\"navbar-toggler\">\r\n                    <span className=\"sr-only\">Toggle navigation</span>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n            <Link to=\"/\">\r\n                <img className=\"agile-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\r\n            </Link>\r\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\r\n                    <ul className=\"nav navbar-nav flex-grow-1 justify-content-between\">\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"#\"></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-company\"><strong>About Us</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-products\"><strong>Products</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\r\n                        {user ? (\r\n                                <div className=\"ml-4 dropdown d-inline\">\r\n                                <Link\r\n                                    className=\"btn dropdown-toggle text-black mr-4\"\r\n                                    type=\"button\"\r\n                                    id=\"dropDownMenuButton\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\">\r\n                                        {user && user.name}\r\n                                    </Link>\r\n                                    <div className=\"dropdown-menu\" aria-aria-labelledby=\"dropDownMenuButton\">\r\n                                        <Link className=\"dropdown-item\" to=\"/admin/dashboard\">\r\n                                            Dashboard\r\n                                        </Link>\r\n                                        <Link className=\"dropdown-item\" to=\"/me\">\r\n                                                My Profile\r\n                                            </Link>\r\n                                        {user && user.role !== 'admin' ? (\r\n                                            <Link className=\"dropdown-item\" to=\"/register\">\r\n                                                Register New Users\r\n                                            </Link>\r\n                                        ) : (\r\n                                            <Link></Link>\r\n                                        )}\r\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                            Log out\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            ) : !loading && <Link to=\"/login\">\r\n                                <div></div>\r\n                            </Link>}\r\n                    </ul> \r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateAbout.js",["254"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateAbout, getSingleAbout, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\n\r\nconst UpdateAbout = ({ match, history }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, about } = useSelector(state => state.aboutDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\r\n\r\n    const aboutId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(about && about._id !== aboutId) {\r\n            dispatch(getSingleAbout(aboutId))\r\n        }\r\n        else { \r\n            setTitle(about.title)\r\n            setDescription(about.description)\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/about');\r\n            alert.success('Information updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n    }, [dispatch, error, alert, isUpdated, updateError, about, aboutId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('title', title);\r\n        formData.set('description', description);\r\n\r\n        dispatch(updateAbout(about._id, formData));\r\n    }\r\n\r\n\r\n    return (<Fragment>\r\n        <MetaData title={'Update About'}/>\r\n            <div id=\"wrapper\" style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update About \"{about.title}\"</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update About \"{about.title}\"</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"title\"\r\n                                        value={title}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        style={{width: '100%', height: '250px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                        disabled={loading ? true : false}\r\n                                    >\r\n                                        Update Information\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n)\r\n}\r\n\r\nexport default UpdateAbout\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateHome.js",["255","256","257"],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Settings.js",["258","259","260","261","262","263"],"import React, { Fragment, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from './../layout/Loader'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { listInquiry } from '../../actions/inquiryActions'\r\n\r\nconst Settings = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Settings'}/>\r\n            <Fragment>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                                <ul className=\"sidebar-nav\">\r\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                    <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                                    <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                                    <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                                    <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                                    <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                                    <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                                </a>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <section className=\"dashboard-section\">\r\n                                                <div className=\"dashboard-container\">\r\n                                                    <div className=\"inbox-container small-width\">\r\n                                                        <h3>Update Home</h3>\r\n                                                        <hr /><Link to=\"/admin/update-home\">Go to Update Home<i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                    <div className=\"products-container small-width\">\r\n                                                        <h3>Update About Page</h3>\r\n                                                        <hr /><Link to=\"/admin/about\">Go to Update About<i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                    <div className=\"users-container small-width\">\r\n                                                        <h3>Update Footer</h3>\r\n                                                        <hr /><Link to=\"/admin/update-footer\">Go to Update Footer<i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\AboutMissionVision.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListInquiries.js",["264"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n// import \"mdbreact/dist/css/mdb.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/inquiries')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Inquiries'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <h1 className='mt-3 mb-3'>Inbox - Inquiry</h1>\r\n                        {loading? <Loader/> : (\r\n                            <MDBDataTable\r\n                                data={setInquiries()}\r\n                                className='px-3 ml-10'\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                entries={5}\r\n                            />\r\n                        )}\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\Dashboard.js",["265"],"import React, { Fragment, useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from './../layout/Loader'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { listInquiry } from '../../actions/inquiryActions'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, products } = useSelector(state => state.products)\r\n    const { inquiries } = useSelector(state => state.listInquiry)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(listInquiry())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Dashboard'}/>\r\n            <Fragment>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <MetaData title={'Admin Dashboard'}/>\r\n                        <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                                <ul className=\"sidebar-nav\">\r\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                    <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                                    <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                                    <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                                    <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                                    <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                                    </a>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <section className=\"dashboard-section\">\r\n                                                <div className=\"dashboard-container\">\r\n                                                    <div className=\"inbox-container small-width\">\r\n                                                        <h3>Inbox</h3>\r\n                                                        <h5>{inquiries && inquiries.length}</h5>\r\n                                                        <hr /><Link to=\"/admin/inquiries\">View messages <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                    <div className=\"products-container small-width\">\r\n                                                        <h3>Products</h3>\r\n                                                        <h5>{products && products.length}</h5>\r\n                                                        <hr /><Link to=\"/admin/products\">View products<i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                    <div className=\"users-container small-width\">\r\n                                                        <h3>Settings</h3>\r\n                                                        <h6>Update your website content</h6>\r\n                                                        <hr /><Link to=\"/admin/settings\">View details <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListArchives.js",["266"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListArchives = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Inquiry status has been updated successfully.');\r\n            history.push('/admin/archives')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Resolved'){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\r\n                                    <i className='fa fa-undo'></i>\r\n                                </button>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Archives'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <h1 className='mt-3 mb-3'>Archives</h1>\r\n                        {loading? <Loader/> : (\r\n                            <MDBDataTable\r\n                                data={setInquiries()}\r\n                                className='px-3 ml-10'\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                entries={5}\r\n                            />\r\n                        )}\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListArchives","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListOthers.js",["267"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/others')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         }) \r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Others'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li><Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <h1 className='mt-3 mb-3'>Inbox - Others</h1>\r\n                        {loading? <Loader/> : (\r\n                            <MDBDataTable\r\n                                data={setInquiries()}\r\n                                className='px-3 ml-10'\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                entries={5}\r\n                            />\r\n                        )}\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListTrash.js",["268","269","270"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListTrash = ( { history} ) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\r\n\r\n    let deleteAll = false\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been updated successfully.');\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted && deleteAll){\r\n            alert.success('Inquiry has been deleted successfully.');\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: DELETE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError])\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Deleted'){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\r\n                                    <i className='fa fa-undo'></i>\r\n                                </button>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteInquiryHandler(inquiry._id)}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const deleteInquiryHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this message? This cannot be undone.\")){\r\n            dispatch(deleteInquiry(id))\r\n        }\r\n    }\r\n\r\n    const emptyTrash = () => {\r\n        if(window.confirm(\"Are you sure you want to delete ALL messages? This cannot be undone.\")){\r\n            deleteAll = true \r\n\r\n            let deletedInquiryCount = 0\r\n\r\n            inquiries.forEach(inquiry => {\r\n\r\n                if(inquiry.inquiryStatus === 'Deleted') {\r\n                    deletedInquiryCount += 1\r\n                    dispatch(deleteInquiry(inquiry._id))\r\n                    deletedInquiryCount -= 1\r\n                }\r\n            })\r\n\r\n            if(deletedInquiryCount == 0){\r\n                alert.success('Trash has been emptied.'); //this is working\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Trash'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <h1 className='mt-3 mb-3'>Trash</h1>\r\n                        <Link>\r\n                            <button className='btn btn-dark btn-sm text-capitalize mb-5' onClick={emptyTrash}>\r\n                                Empty Trash\r\n                            </button>\r\n                        </Link>\r\n                        {loading? <Loader/> : (\r\n                            <MDBDataTable\r\n                                data={setInquiries()}\r\n                                className='px-3 ml-10'\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                entries={5}\r\n                            />\r\n                        )}\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTrash","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListQuotations.js",["271"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/quotations')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Appointments'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <h1 className='mt-3 mb-3'>Inbox - Appointments</h1>\r\n                        {loading? <Loader/> : (\r\n                            <MDBDataTable\r\n                                data={setInquiries()}\r\n                                className='px-3 ml-10'\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                entries={5}\r\n                            />\r\n                        )}\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ListAbout.js",["272"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\n\r\nconst ListAbout = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, abouts } = useSelector(state => state.abouts)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAboutDetails());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('About Us information has been updated successfully.');\r\n            history.push('/admin/about')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setAboutData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         abouts.forEach(about => {\r\n            data.rows.push({\r\n                title: about.title,\r\n                description: about.description,\r\n                actions:   <Fragment>\r\n                            <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                        </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All About Us'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <h1 className='mt-3 mb-3'>Update About Us</h1>\r\n                        {loading? <Loader/> : (\r\n                            <MDBDataTable\r\n                                data={setAboutData()}\r\n                                className='px-3 ml-10'\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                entries={5}\r\n                            />\r\n                        )}\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAbout\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\NewProduct.js",["273"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newProduct, clearErrors } from '../../actions/productActions'\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst NewProduct = ( { history } ) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        ' - ',\r\n        'Category1',\r\n        'Category2',\r\n        'Category3',\r\n        'Category4',\r\n        'Category5',\r\n        'Category6',\r\n        'Category7'\r\n    ]\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(success) {\r\n            history.push('/admin/products');\r\n            alert.success('Product created successfully.')\r\n\r\n            dispatch({\r\n                type: NEW_PRODUCT_RESET\r\n            })\r\n        }\r\n    }, [dispatch, error, alert, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        });\r\n\r\n        dispatch(newProduct(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if(reader.readyState === 2){\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <Fragment>\r\n                    <div className=\"login-clean\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                            <h2 className=\"sr-only\">New Product</h2>\r\n                            <div className=\"div-forgot-password\">\r\n                                <h3 className=\"forgot-password-heading\">New Product</h3>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Name</h6>\r\n                                <textarea \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"product_name\"\r\n                                    value={name}\r\n                                    style={{width: '100%'}}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Description</h6>\r\n                                <textarea\r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"product_name\"\r\n                                    style={{width: '100%', height: '150px'}}\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Category</h6>\r\n                                <div className=\"dropdown show\">\r\n                                    <select \r\n                                        name=\"category\" \r\n                                        className=\"product-dropdown\" \r\n                                        id=\"category\"\r\n                                        value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}\r\n                                    >\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Images</h6>\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"product_images\" \r\n                                    onChange={onChange}\r\n                                    multiple\r\n                                />\r\n                            </div>\r\n                            \r\n                            {imagesPreview.map(img => (\r\n                                <img \r\n                                    src={img} \r\n                                    key={img} \r\n                                    alt='Images Preview'\r\n                                    className='mt-3 mr-2' \r\n                                    width='55' \r\n                                    height='52'\r\n                                />\r\n                            ))}\r\n\r\n                            <div className=\"form-group\">\r\n                                    <button \r\n                                    className=\"btn btn-primary btn-block\" \r\n                                    type=\"submit\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\Login.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\ProductsList.js",["274"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductsList = ( {history} ) => {\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products)\r\n    const { deleteError, isDeleted } = useSelector(state => state.product)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('Product has been deleted successfully.');\r\n            history.push('/admin/products')\r\n\r\n            dispatch({\r\n                type: DELETE_PRODUCT_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, history, isDeleted, deleteError])\r\n\r\n    const setProducts = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Product ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Product Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Category',\r\n                    field: 'category',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         products.forEach(product => {\r\n             data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                category: product.category,\r\n                actions: <Fragment>\r\n                            <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </Fragment>\r\n             })\r\n         })\r\n         return data\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <h1 className=\"mt-3 mb-3\">\r\n                                All Products\r\n                            </h1>\r\n                            <Link to='/admin/newProduct'>\r\n                                <button className='btn btn-dark btn-sm text-capitalize mb-5'>\r\n                                    Add New Product\r\n                                </button>\r\n                            </Link>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setProducts()}\r\n                                    className='px-10 table-sm'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateProduct.js",["275"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst UpdateProduct = ( { match, history } ) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n    const [oldImages, setOldImages] = useState([]);\r\n    \r\n    const categories = [\r\n        'Category1',\r\n        'Category2',\r\n        'Category3',\r\n        'Category4',\r\n        'Category5',\r\n        'Category6',\r\n        'Category7'\r\n    ]\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n\r\n    const productId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId))\r\n        }\r\n        else { \r\n            setName(product.name)\r\n            setDescription(product.description)\r\n            setCategory(product.category)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_PRODUCT_RESET\r\n            })\r\n        }\r\n    }, [dispatch, error, alert, isUpdated, updateError, product, productId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        });\r\n\r\n        dispatch(updateProduct(product._id, formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if(reader.readyState === 2){\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update Product</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Product</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"product_name\"\r\n                                        value={name}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"product_name\"\r\n                                        value={description}\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Category</h6>\r\n                                    <div className=\"dropdown show\">\r\n                                        <select \r\n                                            name=\"category\" \r\n                                            className=\"product-dropdown\" \r\n                                            id=\"category\"\r\n                                            value={category}\r\n                                            onChange={(e) => setCategory(e.target.value)}\r\n                                        >\r\n                                            {categories.map(category => (\r\n                                                <option key={category} value={category}>{category}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Images</h6>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        name=\"product_images\" \r\n                                        onChange={onChange}\r\n                                        multiple\r\n                                    />\r\n                                </div>\r\n                                \r\n                                {oldImages && oldImages.map(img => (\r\n                                    <img \r\n                                        className='mt-3 mr-2'\r\n                                        src={img.url}\r\n                                        alt={img.url}\r\n                                        key={img}\r\n                                        width='55' \r\n                                        height='52'\r\n                                    />\r\n\r\n                                ))}\r\n\r\n                                {imagesPreview.map(img => (\r\n                                    <img \r\n                                        src={img} \r\n                                        key={img} \r\n                                        alt='Images Preview'\r\n                                        className='mt-3 mr-2' \r\n                                        width='110' \r\n                                        height='104'\r\n                                    />\r\n                                ))}\r\n\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                        disabled={loading ? true : false}\r\n                                    >\r\n                                        Update Product\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdateProfile.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\Profile.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\user\\Register.js",["276"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { register, clearErrors } from './../../actions/userActions'\r\n\r\nconst Register = ( { history } ) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        contactNumber: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const { name, email, contactNumber, password, confirmPassword, } = user;\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading, success } = useSelector(state => state.auth);\r\n\r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(success){\r\n            alert.success('Account has been created successfully.')\r\n        }\r\n    }, [dispatch, alert, isAuthenticated, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('avatar', avatar);\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        dispatch(register(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        \r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n\r\n        } else {\r\n            if(e.target.name === 'avatar') {\r\n\r\n                const reader = new FileReader();\r\n    \r\n                reader.onload = () => {\r\n                    if(reader.readyState === 2){\r\n                        setAvatarPreview(reader.result)\r\n                        setAvatar(reader.result)\r\n                    }\r\n                }\r\n    \r\n                reader.readAsDataURL(e.target.files[0])\r\n    \r\n            }\r\n            else {\r\n                setUser({\r\n                    ...user,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Register'}/>\r\n            <div className=\"login-clean\" style={{paddingTop: '65px'}}>\r\n                <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                    <h2 className=\"sr-only\">Register New User</h2>\r\n                    <div className=\"div-forgot-password\">\r\n                        <h3 className=\"forgot-password-heading\">Register New User</h3>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Name</h6>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Email</h6>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\" \r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Contact Number (format: xxxx-xxx-xxxx)</h6>\r\n                        <input \r\n                            type=\"tel\" \r\n                            className=\"form-control\" \r\n                            name=\"contactNumber\" \r\n                            value={contactNumber}\r\n                            pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Password</h6>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Confirm Password</h6>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            name=\"confirmPassword\"\r\n                            value={confirmPassword}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type='checkbox'\r\n                            id='useDefaultImage'\r\n                            name='useDefaultImage'\r\n                            value={useDefaultImage}\r\n                            onChange={onChange}\r\n                            onClick={checkboxCheck}/>\r\n                            &nbsp;Use default image\r\n                        <h6>Avatar</h6>\r\n                        <figure className='mr-3 item-rtl'>\r\n                            <img \r\n                                src={avatarPreview}\r\n                                className='rounded-circle small-avatar'\r\n                                alt='Avatar Preview'\r\n                            />\r\n                        </figure>\r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"avatar\" \r\n                            name=\"avatar\" \r\n                            accept=\"images/*\"\r\n                            onChange={onChange}\r\n                            disabled={isChecked ? false : true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button\r\n                            className=\"btn btn-primary btn-block\"\r\n                            type=\"submit\"\r\n                            disabled={ loading ? true : false}\r\n                        >Register</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateInquiry.js",["277"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\n\r\nconst UpdateInquiry = ( { match, history } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, inquiry } = useSelector(state => state.inquiryDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.inquiry);\r\n\r\n    const inquiryId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    useEffect(() => { \r\n        if(inquiry && inquiry._id !== inquiryId) {\r\n            dispatch(getInquiryDetails(inquiryId))\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/dashboard');\r\n            alert.success('Inquiry updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'View Message'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '65px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\">Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/inquiries\">Inquiries</Link></li>\r\n                        <li> <Link to=\"/admin/quotations\">Appointment</Link></li>\r\n                        <li> <Link to=\"/admin/others\">Other Concerns</Link></li>\r\n                        <li> <Link to=\"/admin/archives\">Archives</Link></li>\r\n                        <li> <Link to=\"/admin/trash\">Trash</Link></li>\r\n                        <li> <Link to=\"/admin/products\">Products</Link></li>\r\n                        <li> <Link to=\"/admin/settings\">Settings</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                    </a>\r\n                    <Fragment>\r\n                        {loading ? <Loader/> : (\r\n                            <section className=\"process-section\">\r\n                                <div className=\"m-5 concern-info-container\">\r\n                                    <h3>{inquiry.concernType} sent on {inquiry.createdAt}</h3>\r\n                                    <hr/>\r\n                                    <p style={{fontSize: '25px'}}><strong>Sender Information</strong></p>\r\n                                    <p><strong>From: </strong>{inquiry.firstName} {inquiry.lastName}, {inquiry.position} at {inquiry.companyName} </p>\r\n                                    <p><strong>Email: </strong>{inquiry.customerEmail}</p>\r\n                                    <p><strong>Contact No.: </strong>{inquiry.contactNumber}</p>\r\n                                    <hr/>\r\n                                    <p style={{fontSize: '20px'}}>{inquiry.customerMessage}</p>\r\n                                </div>\r\n                                <div className=\"m-5\">\r\n                                    {(inquiry.inquiryStatus === 'Resolved') ? (\r\n                                        <Fragment>\r\n                                            <button \r\n                                                className=\"btn btn-primary update-status-button\" \r\n                                                type=\"button\"\r\n                                                onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved')}\r\n                                                style={{marginBottom: '65px'}}>\r\n                                                Restore message back to {inquiry.concernType}\r\n                                            </button>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <button \r\n                                                className=\"btn btn-primary update-status-button\" \r\n                                                type=\"button\"\r\n                                                onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\r\n                                                style={{marginBottom: '65px'}}>\r\n                                                Mark this message as 'Resolved'\r\n                                            </button>\r\n                                        </Fragment>\r\n                                    )}\r\n                                </div>\r\n                            </section>\r\n                        )}\r\n                    </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateInquiry\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\Home.js",["278","279","280","281","282","283","284","285"],"import React, { Fragment, useEffect } from 'react'\r\nimport '../css/styles.css'\r\nimport MetaData from './layout/MetaData'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getHomeDetails, clearErrors } from '../actions/websiteActions'\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, homePage } = useSelector(state => state.homeDetails)\r\n\r\n    let titleBackground, servicesBackground, productImageLeft, productImageRight = \"\"\r\n    \r\n    if(homePage.titleBackground){\r\n        titleBackground = homePage.titleBackground.url\r\n    } \r\n\r\n    if(homePage.servicesBackground){\r\n        servicesBackground = homePage.servicesBackground.url\r\n    } \r\n\r\n    if(homePage.productImageLeft){\r\n        productImageLeft = homePage.productImageLeft.url\r\n    } \r\n\r\n    if(homePage.productImageRight){\r\n        productImageRight = homePage.productImageRight.url\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomeDetails())\r\n        \r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={'Home'}/>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <section className=\"section1 welcome\" style={{height: \"100%\", width: \"100%\"}}>\r\n                            <div\r\n                                className=\"welcome-container\"\r\n                                style={{\r\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \r\n                                    backgroundSize: \"cover\", \r\n                                    width: \"100%\", \r\n                                    height: \"100%\"}\r\n                                }>\r\n                                <img className=\"agile-logo-small\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\" alt=\"company logo\"/>\r\n                                <h1 className=\"agile-name font-weight-bold\">AGILE TECHNODYNAMICS</h1>\r\n                            </div>\r\n                        </section>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-auto description-container\">\r\n                                <div>\r\n                                    <h1 className=\"font-weight-bold\">Our Products</h1>\r\n                                    <h6 className=\"product-description\">{homePage.productDescription}&nbsp;</h6>\r\n                                </div>\r\n                                <a href=\"product.html\">See Products&nbsp;<i className=\"fa fa-angle-right\"></i></a>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\"}}></div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\"}}></div>\r\n                            </div>\r\n                        </div>\r\n                        <div \r\n                            className=\"row our-services our-services-column description-container our-services-photo\" \r\n                            style={{\r\n                                background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \r\n                                backgroundSize: \"cover\", \r\n                                backgroundPosition: \"right\"\r\n                                }}\r\n                            >\r\n                            <div className=\"col\">\r\n                                <div className=\"div-our-services\">\r\n                                    <h1 className=\"our-services font-weight-bold\">Our Services</h1>\r\n                                    <h6 className=\"description\">{homePage.servicesDescription}&nbsp;</h6><a className=\"services-link\" href=\"services.html\">See Services&nbsp;<i className=\"fa fa-angle-right\"></i></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\constants\\websiteConstants.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\constants\\productConstants.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\constants\\userConstants.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\constants\\inquiryConstants.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\product\\ProductDisplay.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\actions\\productActions.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\actions\\websiteActions.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\MissionVision.js",["286","287"],"import React, { Fragment } from 'react'\r\nimport { Markup } from 'interweave'\r\n\r\nconst MissionVision = ({ about }) => {\r\n    return (\r\n        <div>\r\n            {(about._id == '602905ed5135781774314621' || about._id == '602905e55135781774314620') ? (\r\n            <Fragment>\r\n                <h1>{about.title}</h1>\r\n                <hr />\r\n                <p className=\"text-justify\">\r\n                    <Markup content={about.description} />\r\n                </p>\r\n            </Fragment>) :\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MissionVision\r\n","D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\actions\\inquiryActions.js",[],"D:\\Other Users\\Abby\\Software Engineering II\\Agile-Testing-Website\\frontend\\src\\components\\admin\\UpdateFooter.js",["288","289","290"],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":70,"column":61,"nodeType":"297","endLine":70,"endColumn":64},{"ruleId":"298","severity":1,"message":"299","line":25,"column":9,"nodeType":"300","messageId":"301","endLine":25,"endColumn":19},{"ruleId":"298","severity":1,"message":"302","line":26,"column":9,"nodeType":"300","messageId":"301","endLine":26,"endColumn":18},{"ruleId":"303","severity":1,"message":"304","line":33,"column":17,"nodeType":"297","endLine":33,"endColumn":154},{"ruleId":"305","severity":1,"message":"306","line":50,"column":37,"nodeType":"307","endLine":50,"endColumn":62},{"ruleId":"305","severity":1,"message":"308","line":54,"column":68,"nodeType":"307","endLine":54,"endColumn":109},{"ruleId":"295","severity":1,"message":"296","line":92,"column":29,"nodeType":"297","endLine":92,"endColumn":141},{"ruleId":"309","severity":1,"message":"310","line":92,"column":8,"nodeType":"311","endLine":92,"endColumn":65,"suggestions":"312"},{"ruleId":"295","severity":1,"message":"296","line":182,"column":33,"nodeType":"297","endLine":182,"endColumn":145},{"ruleId":"313","severity":1,"message":"314","line":223,"column":45,"nodeType":"297","endLine":227,"endColumn":47},{"ruleId":"298","severity":1,"message":"315","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":14},{"ruleId":"298","severity":1,"message":"316","line":11,"column":23,"nodeType":"300","messageId":"301","endLine":11,"endColumn":34},{"ruleId":"298","severity":1,"message":"317","line":12,"column":10,"nodeType":"300","messageId":"301","endLine":12,"endColumn":26},{"ruleId":"298","severity":1,"message":"318","line":13,"column":10,"nodeType":"300","messageId":"301","endLine":13,"endColumn":21},{"ruleId":"298","severity":1,"message":"319","line":17,"column":11,"nodeType":"300","messageId":"301","endLine":17,"endColumn":19},{"ruleId":"295","severity":1,"message":"296","line":45,"column":33,"nodeType":"297","endLine":45,"endColumn":115},{"ruleId":"295","severity":1,"message":"296","line":134,"column":25,"nodeType":"297","endLine":134,"endColumn":107},{"ruleId":"295","severity":1,"message":"296","line":56,"column":37,"nodeType":"297","endLine":56,"endColumn":119},{"ruleId":"295","severity":1,"message":"296","line":133,"column":25,"nodeType":"297","endLine":133,"endColumn":107},{"ruleId":"295","severity":1,"message":"296","line":129,"column":25,"nodeType":"297","endLine":129,"endColumn":107},{"ruleId":"309","severity":1,"message":"320","line":60,"column":8,"nodeType":"311","endLine":60,"endColumn":76,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":150,"column":36,"nodeType":"324","messageId":"325","endLine":150,"endColumn":38},{"ruleId":"295","severity":1,"message":"296","line":175,"column":25,"nodeType":"297","endLine":175,"endColumn":107},{"ruleId":"295","severity":1,"message":"296","line":132,"column":25,"nodeType":"297","endLine":132,"endColumn":107},{"ruleId":"295","severity":1,"message":"296","line":103,"column":25,"nodeType":"297","endLine":103,"endColumn":107},{"ruleId":"295","severity":1,"message":"296","line":115,"column":25,"nodeType":"297","endLine":115,"endColumn":137},{"ruleId":"295","severity":1,"message":"296","line":119,"column":25,"nodeType":"297","endLine":119,"endColumn":107},{"ruleId":"295","severity":1,"message":"296","line":135,"column":29,"nodeType":"297","endLine":135,"endColumn":141},{"ruleId":"322","severity":1,"message":"323","line":68,"column":31,"nodeType":"324","messageId":"325","endLine":68,"endColumn":33},{"ruleId":"295","severity":1,"message":"296","line":79,"column":21,"nodeType":"297","endLine":79,"endColumn":103},{"ruleId":"326","severity":1,"message":"327","line":52,"column":140,"nodeType":"324","messageId":"328","endLine":52,"endColumn":141},{"ruleId":"326","severity":1,"message":"327","line":52,"column":161,"nodeType":"324","messageId":"328","endLine":52,"endColumn":162},{"ruleId":"326","severity":1,"message":"327","line":70,"column":84,"nodeType":"324","messageId":"328","endLine":70,"endColumn":85},{"ruleId":"326","severity":1,"message":"327","line":70,"column":106,"nodeType":"324","messageId":"328","endLine":70,"endColumn":107},{"ruleId":"326","severity":1,"message":"327","line":73,"column":84,"nodeType":"324","messageId":"328","endLine":73,"endColumn":85},{"ruleId":"326","severity":1,"message":"327","line":73,"column":107,"nodeType":"324","messageId":"328","endLine":73,"endColumn":108},{"ruleId":"326","severity":1,"message":"327","line":79,"column":121,"nodeType":"324","messageId":"328","endLine":79,"endColumn":122},{"ruleId":"326","severity":1,"message":"327","line":79,"column":145,"nodeType":"324","messageId":"328","endLine":79,"endColumn":146},{"ruleId":"322","severity":1,"message":"323","line":7,"column":25,"nodeType":"324","messageId":"325","endLine":7,"endColumn":27},{"ruleId":"322","severity":1,"message":"323","line":7,"column":68,"nodeType":"324","messageId":"325","endLine":7,"endColumn":70},{"ruleId":"298","severity":1,"message":"329","line":9,"column":24,"nodeType":"300","messageId":"301","endLine":9,"endColumn":40},{"ruleId":"309","severity":1,"message":"330","line":57,"column":8,"nodeType":"311","endLine":57,"endColumn":65,"suggestions":"331"},{"ruleId":"295","severity":1,"message":"296","line":97,"column":29,"nodeType":"297","endLine":97,"endColumn":141},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'errorCount' is assigned a value but never used.","Identifier","unusedVar","'loopCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'homePage', 'var_productImageLeft', 'var_productImageRight', 'var_servicesBackground', and 'var_titleBackground'. Either include them or remove the dependency array.","ArrayExpression",["334"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Loader' is defined but never used.","'useSelector' is defined but never used.","'getAdminProducts' is defined but never used.","'listInquiry' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.",["335"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'getFooterDetails' is defined but never used.","React Hook useEffect has a missing dependency: 'footerInfo'. Either include it or remove the dependency array.",["336"],"no-global-assign","no-unsafe-negation",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",{"range":"343","text":"344"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"345","text":"346"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, footerInfo]",{"range":"347","text":"348"},[3201,3258],"[dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",[1851,1919],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",[2051,2108],"[dispatch, alert, error, history, updateError, isUpdated, footerInfo]"]